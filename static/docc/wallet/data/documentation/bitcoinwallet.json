{"kind":"symbol","abstract":[{"type":"text","text":"Generate and decode Bitcoin addresses. Manage mnemonic seeds and derive Hierarchically Deterministic (HD) keys."}],"topicSections":[{"anchor":"Addresses","identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinAddress","doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/SegwitAddress","doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/TaprootAddress"],"title":"Addresses"},{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/ExtendedKey"],"title":"Hierarchically Deterministic (HD) extended keys","anchor":"Hierarchically-Deterministic-HD-extended-keys"},{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/MnemonicPhrase"],"title":"Mnemonic","anchor":"Mnemonic"},{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/TxSigner"],"anchor":"Classes","generated":true,"title":"Classes"},{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/LegacyAddress"],"title":"Structures","generated":true,"anchor":"Structures"},{"anchor":"Enumerations","identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress","doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/WalletNetwork"],"title":"Enumerations","generated":true},{"title":"Extended Modules","identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinCrypto"],"generated":true,"anchor":"Extended-Modules"}],"hierarchy":{"paths":[[]]},"sections":[],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","https:\/\/swift-bitcoin.github.io\/docc\/crypto\/documentation\/bitcoincrypto\/","https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"],"anchor":"Related-Documentation"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Swift Bitcoin Library","externalID":"BitcoinWallet","title":"BitcoinWallet","symbolKind":"module","role":"collection","modules":[{"name":"BitcoinWallet"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoinwallet"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet"},"primaryContentSections":[{"content":[{"text":"Overview","level":2,"anchor":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"Use BitcoinWallet to generate addresses from public keys or scripts and to decode either legacy, segregated witness or taproot addresses.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Create private ("},{"type":"emphasis","inlineContent":[{"type":"text","text":"xpriv"}]},{"type":"text","text":") and public ("},{"type":"emphasis","inlineContent":[{"text":"xpub","type":"text"}]},{"text":") master keys from BIP32 seeds and use them to derive output keys. Manage BIP39 mnemonic phrases in multiple languages.","type":"text"}]},{"inlineContent":[{"type":"text","text":"Sample code: "},{"inlineContent":[{"type":"text","text":"Bob sends 50 satoshis to Alice"}],"type":"emphasis"},{"text":".","type":"text"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["\/\/ Bob gets paid.","let bobsSecretKey = SecretKey()","let bobsAddress = LegacyAddress(bobsSecretKey)","","\/\/ The funding transaction, sending money to Bob.","let fundingTx = BitcoinTx(ins: [.init(outpoint: .coinbase)], outs: [","    bobsAddress.out(100) \/\/ 100 satoshis","])","","\/\/ Alice generates an address to give Bob.","","let alicesSecretKey = SecretKey()","let alicesAddress = LegacyAddress(alicesSecretKey)","","\/\/ Bob constructs, sings and broadcasts a transaction which pays Alice at her address.","","\/\/ The spending transaction by which Bob sends money to Alice","let spendingTx = BitcoinTx(ins: [","    .init(outpoint: fundingTx.outpoint(0)),","], outs: [","    alicesAddress.out(50) \/\/ 50 satoshis","])","","\/\/ Sign the spending transaction.","let prevouts = [fundingTx.outs[0]]","let signer = TxSigner(","    tx: spendingTx, prevouts: prevouts, sighashType: .all",")","let signedTx = signer.sign(txIn: 0, with: bobsSecretKey)","","\/\/ Verify transaction signatures.","let result = signedTx.verifyScript(prevouts: prevouts)","#expect(result)"]}],"kind":"content"}],"references":{"doc://BitcoinWallet/documentation/BitcoinWallet/SegwitAddress":{"navigatorTitle":[{"text":"SegwitAddress","kind":"identifier"}],"abstract":[{"type":"text","text":"Witness version 0 Bitcoin address."}],"title":"SegwitAddress","url":"\/documentation\/bitcoinwallet\/segwitaddress","type":"topic","kind":"symbol","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/SegwitAddress","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SegwitAddress"}]},"doc://BitcoinWallet/documentation/BitcoinWallet/ExtendedKey":{"abstract":[{"type":"text","text":"A BIP32 extended key whether it be a private master key, extended private key or an extended public key."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ExtendedKey"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExtendedKey"}],"url":"\/documentation\/bitcoinwallet\/extendedkey","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/ExtendedKey","title":"ExtendedKey","type":"topic"},"doc://BitcoinWallet/documentation/BitcoinWallet/TxSigner":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TxSigner"}],"url":"\/documentation\/bitcoinwallet\/txsigner","type":"topic","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/TxSigner","abstract":[{"text":"An affordance to sign multiple inputs of a bitcoin tx.","type":"text"}],"title":"TxSigner","navigatorTitle":[{"kind":"identifier","text":"TxSigner"}],"role":"symbol","kind":"symbol"},"doc://BitcoinWallet/documentation/BitcoinWallet/AnyAddress":{"abstract":[{"text":"Type-erased bitcoin address. Use when needing to decode and generate outputs but the type of address being decoded is not known beforehand","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnyAddress"}],"title":"AnyAddress","url":"\/documentation\/bitcoinwallet\/anyaddress","kind":"symbol","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"AnyAddress","kind":"identifier"}],"role":"symbol"},"https://swift-bitcoin.github.io/docc/bcnode/documentation/bitcoinnode/":{"type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/","title":"Bitcoin Node (bcnode) Command","titleInlineContent":[{"type":"text","text":"Bitcoin Node (bcnode) Command"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"},"doc://BitcoinWallet/documentation/BitcoinWallet/LegacyAddress":{"abstract":[{"text":"Legacy – i.e. base signature version – Bitcoin address.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"LegacyAddress"}],"title":"LegacyAddress","url":"\/documentation\/bitcoinwallet\/legacyaddress","kind":"symbol","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/LegacyAddress","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"LegacyAddress"}],"role":"symbol"},"doc://BitcoinWallet/documentation/BitcoinWallet/BitcoinCrypto":{"type":"topic","abstract":[],"kind":"symbol","title":"BitcoinCrypto","role":"collection","url":"\/documentation\/bitcoinwallet\/bitcoincrypto","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinCrypto"},"https://swift-bitcoin.github.io/docc/crypto/documentation/bitcoincrypto/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/crypto\/documentation\/bitcoincrypto\/","type":"link","title":"Crypto Library","titleInlineContent":[{"type":"text","text":"Crypto Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/crypto\/documentation\/bitcoincrypto\/"},"https://swift-bitcoin.github.io/docc/blockchain/documentation/bitcoinblockchain/":{"type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","title":"Blockchain Library","titleInlineContent":[{"type":"text","text":"Blockchain Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/"},"doc://BitcoinWallet/documentation/BitcoinWallet/WalletNetwork":{"kind":"symbol","type":"topic","title":"WalletNetwork","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"WalletNetwork"}],"navigatorTitle":[{"text":"WalletNetwork","kind":"identifier"}],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/WalletNetwork","url":"\/documentation\/bitcoinwallet\/walletnetwork","abstract":[],"role":"symbol"},"https://swift-bitcoin.github.io/docc/rpc/documentation/bitcoinrpc/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","type":"link","title":"RPC Library","titleInlineContent":[{"type":"text","text":"RPC Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/"},"doc://BitcoinWallet/documentation/BitcoinWallet/TaprootAddress":{"title":"TaprootAddress","kind":"symbol","url":"\/documentation\/bitcoinwallet\/taprootaddress","type":"topic","navigatorTitle":[{"text":"TaprootAddress","kind":"identifier"}],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/TaprootAddress","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"TaprootAddress"}],"abstract":[{"text":"Witness version 1 or higher Bitcoin address.","type":"text"}],"role":"symbol"},"doc://BitcoinWallet/documentation/BitcoinWallet/MnemonicPhrase":{"type":"topic","url":"\/documentation\/bitcoinwallet\/mnemonicphrase","title":"MnemonicPhrase","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MnemonicPhrase"}],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/MnemonicPhrase","role":"symbol","navigatorTitle":[{"text":"MnemonicPhrase","kind":"identifier"}],"abstract":[{"text":"BIP39","type":"text"}]},"https://swift-bitcoin.github.io/docc/bcutil/documentation/bitcoinutility/":{"type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","title":"Bitcoin Utility (bcutil) Command","titleInlineContent":[{"type":"text","text":"Bitcoin Utility (bcutil) Command"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/"},"doc://BitcoinWallet/documentation/BitcoinWallet":{"type":"topic","role":"collection","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet","title":"BitcoinWallet","abstract":[{"type":"text","text":"Generate and decode Bitcoin addresses. Manage mnemonic seeds and derive Hierarchically Deterministic (HD) keys."}],"kind":"symbol","url":"\/documentation\/bitcoinwallet"},"doc://BitcoinWallet/documentation/BitcoinWallet/BitcoinAddress":{"url":"\/documentation\/bitcoinwallet\/bitcoinaddress","role":"symbol","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinAddress","type":"topic","navigatorTitle":[{"kind":"identifier","text":"BitcoinAddress"}],"abstract":[{"text":"A common interface for all types of Bitcoin addresses: legacy, segwit and taproot. An address can be decoded from a string and must be able to produce a transaction output for a given satoshi amount.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"BitcoinAddress","kind":"identifier"}],"title":"BitcoinAddress"},"https://swift-bitcoin.github.io/docc/base/documentation/bitcoinbase/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","type":"link","title":"Base Library","titleInlineContent":[{"type":"text","text":"Base Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/"},"https://swift-bitcoin.github.io/docc/documentation/bitcoin/":{"type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","title":"Swift Bitcoin “Umbrella” Library","titleInlineContent":[{"type":"text","text":"Swift Bitcoin “Umbrella” Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/"},"https://swift-bitcoin.github.io/docc/transport/documentation/bitcointransport/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","type":"link","title":"Transport Library","titleInlineContent":[{"type":"text","text":"Transport Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/"}}}