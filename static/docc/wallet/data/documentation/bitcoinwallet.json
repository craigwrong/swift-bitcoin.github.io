{"seeAlsoSections":[{"identifiers":["https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","https:\/\/swift-bitcoin.github.io\/docc\/crypto\/documentation\/bitcoincrypto\/","https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"],"title":"Related Documentation","anchor":"Related-Documentation"}],"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Use BitcoinWallet to generate addresses from public keys or scripts and to decode either legacy, segregated witness or taproot addresses.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Create private (","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"xpriv"}]},{"text":") and public (","type":"text"},{"type":"emphasis","inlineContent":[{"text":"xpub","type":"text"}]},{"type":"text","text":") master keys from BIP32 seeds and use them to derive output keys. Manage BIP39 mnemonic phrases in multiple languages."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Sample code: "},{"type":"emphasis","inlineContent":[{"text":"Bob sends 50 satoshis to Alice","type":"text"}]},{"text":".","type":"text"}]},{"code":["\/\/ Bob gets paid.","let bobsSecretKey = SecretKey()","let bobsAddress = LegacyAddress(bobsSecretKey)","","\/\/ The funding transaction, sending money to Bob.","let fundingTx = BitcoinTx(ins: [.init(outpoint: .coinbase)], outs: [","    bobsAddress.out(100) \/\/ 100 satoshis","])","","\/\/ Alice generates an address to give Bob.","","let alicesSecretKey = SecretKey()","let alicesAddress = LegacyAddress(alicesSecretKey)","","\/\/ Bob constructs, sings and broadcasts a transaction which pays Alice at her address.","","\/\/ The spending transaction by which Bob sends money to Alice","let spendingTx = BitcoinTx(ins: [","    .init(outpoint: fundingTx.outpoint(0)),","], outs: [","    alicesAddress.out(50) \/\/ 50 satoshis","])","","\/\/ Sign the spending transaction.","let prevouts = [fundingTx.outs[0]]","let signer = TxSigner(","    tx: spendingTx, prevouts: prevouts, sighashType: .all",")","let signedTx = signer.sign(txIn: 0, with: bobsSecretKey)","","\/\/ Verify transaction signatures.","let result = signedTx.verifyScript(prevouts: prevouts)","#expect(result)"],"syntax":"swift","type":"codeListing"}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[[]]},"abstract":[{"type":"text","text":"Generate and decode Bitcoin addresses. Manage mnemonic seeds and derive Hierarchically Deterministic (HD) keys."}],"variants":[{"paths":["\/documentation\/bitcoinwallet"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet","interfaceLanguage":"swift"},"sections":[],"metadata":{"modules":[{"name":"BitcoinWallet"}],"role":"collection","externalID":"BitcoinWallet","roleHeading":"Swift Bitcoin Library","symbolKind":"module","title":"BitcoinWallet"},"topicSections":[{"title":"Addresses","identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinAddress","doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/SegwitAddress","doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/TaprootAddress"],"anchor":"Addresses"},{"anchor":"Hierarchically-Deterministic-HD-extended-keys","identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/ExtendedKey"],"title":"Hierarchically Deterministic (HD) extended keys"},{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/MnemonicPhrase"],"anchor":"Mnemonic","title":"Mnemonic"},{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/TxSigner"],"generated":true,"title":"Classes","anchor":"Classes"},{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/LegacyAddress"],"title":"Structures","anchor":"Structures","generated":true},{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress","doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/WalletNetwork"],"anchor":"Enumerations","title":"Enumerations","generated":true},{"title":"Extended Modules","generated":true,"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinCrypto"],"anchor":"Extended-Modules"}],"references":{"doc://BitcoinWallet/documentation/BitcoinWallet/TaprootAddress":{"abstract":[{"type":"text","text":"Witness version 1 or higher Bitcoin address."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TaprootAddress"}],"navigatorTitle":[{"kind":"identifier","text":"TaprootAddress"}],"type":"topic","title":"TaprootAddress","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/TaprootAddress","kind":"symbol","url":"\/documentation\/bitcoinwallet\/taprootaddress","role":"symbol"},"doc://BitcoinWallet/documentation/BitcoinWallet/WalletNetwork":{"title":"WalletNetwork","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/WalletNetwork","url":"\/documentation\/bitcoinwallet\/walletnetwork","role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"WalletNetwork"}],"navigatorTitle":[{"text":"WalletNetwork","kind":"identifier"}],"type":"topic","kind":"symbol"},"doc://BitcoinWallet/documentation/BitcoinWallet/BitcoinCrypto":{"url":"\/documentation\/bitcoinwallet\/bitcoincrypto","role":"collection","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinCrypto","abstract":[],"kind":"symbol","type":"topic","title":"BitcoinCrypto"},"https://swift-bitcoin.github.io/docc/crypto/documentation/bitcoincrypto/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/crypto\/documentation\/bitcoincrypto\/","title":"Crypto Library","type":"link","titleInlineContent":[{"type":"text","text":"Crypto Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/crypto\/documentation\/bitcoincrypto\/"},"https://swift-bitcoin.github.io/docc/base/documentation/bitcoinbase/":{"title":"Base Library","titleInlineContent":[{"type":"text","text":"Base Library"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","type":"link","url":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/"},"doc://BitcoinWallet/documentation/BitcoinWallet":{"title":"BitcoinWallet","kind":"symbol","url":"\/documentation\/bitcoinwallet","type":"topic","role":"collection","abstract":[{"text":"Generate and decode Bitcoin addresses. Manage mnemonic seeds and derive Hierarchically Deterministic (HD) keys.","type":"text"}],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet"},"https://swift-bitcoin.github.io/docc/documentation/bitcoin/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","title":"Swift Bitcoin “Umbrella” Library","type":"link","titleInlineContent":[{"type":"text","text":"Swift Bitcoin “Umbrella” Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/"},"doc://BitcoinWallet/documentation/BitcoinWallet/BitcoinAddress":{"url":"\/documentation\/bitcoinwallet\/bitcoinaddress","role":"symbol","navigatorTitle":[{"text":"BitcoinAddress","kind":"identifier"}],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinAddress","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BitcoinAddress"}],"abstract":[{"type":"text","text":"A common interface for all types of Bitcoin addresses: legacy, segwit and taproot. An address can be decoded from a string and must be able to produce a transaction output for a given satoshi amount."}],"kind":"symbol","type":"topic","title":"BitcoinAddress"},"https://swift-bitcoin.github.io/docc/rpc/documentation/bitcoinrpc/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","title":"RPC Library","type":"link","titleInlineContent":[{"type":"text","text":"RPC Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/"},"https://swift-bitcoin.github.io/docc/bcutil/documentation/bitcoinutility/":{"title":"Bitcoin Utility (bcutil) Command","titleInlineContent":[{"type":"text","text":"Bitcoin Utility (bcutil) Command"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","type":"link","url":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/"},"doc://BitcoinWallet/documentation/BitcoinWallet/AnyAddress":{"abstract":[{"type":"text","text":"Type-erased bitcoin address. Use when needing to decode and generate outputs but the type of address being decoded is not known beforehand"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AnyAddress","kind":"identifier"}],"navigatorTitle":[{"text":"AnyAddress","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress","title":"AnyAddress","kind":"symbol","url":"\/documentation\/bitcoinwallet\/anyaddress","role":"symbol"},"doc://BitcoinWallet/documentation/BitcoinWallet/ExtendedKey":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ExtendedKey"}],"kind":"symbol","role":"symbol","type":"topic","title":"ExtendedKey","url":"\/documentation\/bitcoinwallet\/extendedkey","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/ExtendedKey","navigatorTitle":[{"kind":"identifier","text":"ExtendedKey"}],"abstract":[{"type":"text","text":"A BIP32 extended key whether it be a private master key, extended private key or an extended public key."}]},"doc://BitcoinWallet/documentation/BitcoinWallet/SegwitAddress":{"url":"\/documentation\/bitcoinwallet\/segwitaddress","role":"symbol","navigatorTitle":[{"text":"SegwitAddress","kind":"identifier"}],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/SegwitAddress","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SegwitAddress"}],"abstract":[{"type":"text","text":"Witness version 0 Bitcoin address."}],"kind":"symbol","type":"topic","title":"SegwitAddress"},"doc://BitcoinWallet/documentation/BitcoinWallet/MnemonicPhrase":{"abstract":[{"type":"text","text":"BIP39"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MnemonicPhrase"}],"navigatorTitle":[{"text":"MnemonicPhrase","kind":"identifier"}],"type":"topic","title":"MnemonicPhrase","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/MnemonicPhrase","kind":"symbol","url":"\/documentation\/bitcoinwallet\/mnemonicphrase","role":"symbol"},"doc://BitcoinWallet/documentation/BitcoinWallet/TxSigner":{"role":"symbol","url":"\/documentation\/bitcoinwallet\/txsigner","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/TxSigner","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"TxSigner"}],"navigatorTitle":[{"text":"TxSigner","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"An affordance to sign multiple inputs of a bitcoin tx.","type":"text"}],"title":"TxSigner"},"https://swift-bitcoin.github.io/docc/bcnode/documentation/bitcoinnode/":{"title":"Bitcoin Node (bcnode) Command","titleInlineContent":[{"type":"text","text":"Bitcoin Node (bcnode) Command"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/","type":"link","url":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"},"https://swift-bitcoin.github.io/docc/blockchain/documentation/bitcoinblockchain/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","title":"Blockchain Library","type":"link","titleInlineContent":[{"type":"text","text":"Blockchain Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/"},"doc://BitcoinWallet/documentation/BitcoinWallet/LegacyAddress":{"url":"\/documentation\/bitcoinwallet\/legacyaddress","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LegacyAddress"}],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/LegacyAddress","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"LegacyAddress","kind":"identifier"}],"abstract":[{"type":"text","text":"Legacy – i.e. base signature version – Bitcoin address."}],"kind":"symbol","type":"topic","title":"LegacyAddress"},"https://swift-bitcoin.github.io/docc/transport/documentation/bitcointransport/":{"titleInlineContent":[{"type":"text","text":"Transport Library"}],"type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","title":"Transport Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/"}}}