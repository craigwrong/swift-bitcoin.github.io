{"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"topicSections":[{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinAddress","doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/SegwitAddress","doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/TaprootAddress"],"title":"Addresses","anchor":"Addresses"},{"anchor":"Hierarchically-Deterministic-HD-extended-keys","identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/ExtendedKey"],"title":"Hierarchically Deterministic (HD) extended keys"},{"anchor":"Mnemonic","title":"Mnemonic","identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/MnemonicPhrase"]},{"anchor":"Classes","title":"Classes","identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/TxSigner"],"generated":true},{"generated":true,"title":"Structures","identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/LegacyAddress"],"anchor":"Structures"},{"generated":true,"title":"Enumerations","anchor":"Enumerations","identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress","doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/WalletNetwork"]},{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinCrypto"],"generated":true,"anchor":"Extended-Modules","title":"Extended Modules"}],"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","https:\/\/swift-bitcoin.github.io\/docc\/crypto\/documentation\/bitcoincrypto\/","https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoinwallet"]}],"metadata":{"modules":[{"name":"BitcoinWallet"}],"roleHeading":"Swift Bitcoin Library","title":"BitcoinWallet","role":"collection","symbolKind":"module","externalID":"BitcoinWallet"},"abstract":[{"type":"text","text":"Generate and decode Bitcoin addresses. Manage mnemonic seeds and derive Hierarchically Deterministic (HD) keys."}],"hierarchy":{"paths":[[]]},"identifier":{"url":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"Use BitcoinWallet to generate addresses from public keys or scripts and to decode either legacy, segregated witness or taproot addresses."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Create private ("},{"type":"emphasis","inlineContent":[{"text":"xpriv","type":"text"}]},{"text":") and public (","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"xpub"}]},{"type":"text","text":") master keys from BIP32 seeds and use them to derive output keys. Manage BIP39 mnemonic phrases in multiple languages."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Sample code: "},{"type":"emphasis","inlineContent":[{"text":"Bob sends 50 satoshis to Alice","type":"text"}]},{"type":"text","text":"."}],"type":"paragraph"},{"code":["\/\/ Bob gets paid.","let bobsSecretKey = SecretKey()","let bobsAddress = LegacyAddress(bobsSecretKey)","","\/\/ The funding transaction, sending money to Bob.","let fundingTx = BitcoinTx(ins: [.init(outpoint: .coinbase)], outs: [","    bobsAddress.out(100) \/\/ 100 satoshis","])","","\/\/ Alice generates an address to give Bob.","","let alicesSecretKey = SecretKey()","let alicesAddress = LegacyAddress(alicesSecretKey)","","\/\/ Bob constructs, sings and broadcasts a transaction which pays Alice at her address.","","\/\/ The spending transaction by which Bob sends money to Alice","let spendingTx = BitcoinTx(ins: [","    .init(outpoint: fundingTx.outpoint(0)),","], outs: [","    alicesAddress.out(50) \/\/ 50 satoshis","])","","\/\/ Sign the spending transaction.","let prevouts = [fundingTx.outs[0]]","let signer = TxSigner(","    tx: spendingTx, prevouts: prevouts, sighashType: .all",")","let signedTx = signer.sign(txIn: 0, with: bobsSecretKey)","","\/\/ Verify transaction signatures.","let result = signedTx.verifyScript(prevouts: prevouts)","#expect(result)"],"syntax":"swift","type":"codeListing"}]}],"kind":"symbol","references":{"doc://BitcoinWallet/documentation/BitcoinWallet/AnyAddress":{"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAddress"}],"title":"AnyAddress","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress","navigatorTitle":[{"kind":"identifier","text":"AnyAddress"}],"role":"symbol","abstract":[{"type":"text","text":"Type-erased bitcoin address. Use when needing to decode and generate outputs but the type of address being decoded is not known beforehand"}],"url":"\/documentation\/bitcoinwallet\/anyaddress","type":"topic","kind":"symbol"},"https://swift-bitcoin.github.io/docc/base/documentation/bitcoinbase/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","title":"Base Library","type":"link","titleInlineContent":[{"text":"Base Library","type":"text"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/"},"https://swift-bitcoin.github.io/docc/crypto/documentation/bitcoincrypto/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/crypto\/documentation\/bitcoincrypto\/","title":"Crypto Library","type":"link","titleInlineContent":[{"text":"Crypto Library","type":"text"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/crypto\/documentation\/bitcoincrypto\/"},"doc://BitcoinWallet/documentation/BitcoinWallet/TaprootAddress":{"type":"topic","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/TaprootAddress","url":"\/documentation\/bitcoinwallet\/taprootaddress","navigatorTitle":[{"text":"TaprootAddress","kind":"identifier"}],"title":"TaprootAddress","kind":"symbol","abstract":[{"type":"text","text":"Witness version 1 or higher Bitcoin address."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"TaprootAddress","kind":"identifier"}],"role":"symbol"},"https://swift-bitcoin.github.io/docc/bcutil/documentation/bitcoinutility/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","title":"Bitcoin Utility (bcutil) Command","type":"link","titleInlineContent":[{"text":"Bitcoin Utility (bcutil) Command","type":"text"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/"},"https://swift-bitcoin.github.io/docc/rpc/documentation/bitcoinrpc/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","title":"RPC Library","type":"link","titleInlineContent":[{"text":"RPC Library","type":"text"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/"},"https://swift-bitcoin.github.io/docc/bcnode/documentation/bitcoinnode/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/","title":"Bitcoin Node (bcnode) Command","type":"link","titleInlineContent":[{"text":"Bitcoin Node (bcnode) Command","type":"text"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"},"doc://BitcoinWallet/documentation/BitcoinWallet":{"abstract":[{"type":"text","text":"Generate and decode Bitcoin addresses. Manage mnemonic seeds and derive Hierarchically Deterministic (HD) keys."}],"type":"topic","role":"collection","title":"BitcoinWallet","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet","kind":"symbol","url":"\/documentation\/bitcoinwallet"},"https://swift-bitcoin.github.io/docc/transport/documentation/bitcointransport/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","title":"Transport Library","type":"link","titleInlineContent":[{"text":"Transport Library","type":"text"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/"},"doc://BitcoinWallet/documentation/BitcoinWallet/ExtendedKey":{"abstract":[{"text":"A BIP32 extended key whether it be a private master key, extended private key or an extended public key.","type":"text"}],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/ExtendedKey","kind":"symbol","title":"ExtendedKey","type":"topic","url":"\/documentation\/bitcoinwallet\/extendedkey","navigatorTitle":[{"text":"ExtendedKey","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ExtendedKey","kind":"identifier"}],"role":"symbol"},"https://swift-bitcoin.github.io/docc/documentation/bitcoin/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","title":"Swift Bitcoin “Umbrella” Library","type":"link","titleInlineContent":[{"text":"Swift Bitcoin “Umbrella” Library","type":"text"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/"},"https://swift-bitcoin.github.io/docc/blockchain/documentation/bitcoinblockchain/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","title":"Blockchain Library","type":"link","titleInlineContent":[{"text":"Blockchain Library","type":"text"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/"},"doc://BitcoinWallet/documentation/BitcoinWallet/TxSigner":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"TxSigner","kind":"identifier"}],"type":"topic","url":"\/documentation\/bitcoinwallet\/txsigner","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/TxSigner","abstract":[{"text":"An affordance to sign multiple inputs of a bitcoin tx.","type":"text"}],"kind":"symbol","title":"TxSigner","navigatorTitle":[{"text":"TxSigner","kind":"identifier"}]},"doc://BitcoinWallet/documentation/BitcoinWallet/MnemonicPhrase":{"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/MnemonicPhrase","kind":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MnemonicPhrase"}],"role":"symbol","title":"MnemonicPhrase","navigatorTitle":[{"kind":"identifier","text":"MnemonicPhrase"}],"url":"\/documentation\/bitcoinwallet\/mnemonicphrase","abstract":[{"text":"BIP39","type":"text"}]},"doc://BitcoinWallet/documentation/BitcoinWallet/SegwitAddress":{"navigatorTitle":[{"kind":"identifier","text":"SegwitAddress"}],"role":"symbol","type":"topic","kind":"symbol","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/SegwitAddress","url":"\/documentation\/bitcoinwallet\/segwitaddress","abstract":[{"type":"text","text":"Witness version 0 Bitcoin address."}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SegwitAddress"}],"title":"SegwitAddress"},"doc://BitcoinWallet/documentation/BitcoinWallet/BitcoinAddress":{"role":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitcoinAddress","kind":"identifier"}],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinAddress","title":"BitcoinAddress","kind":"symbol","url":"\/documentation\/bitcoinwallet\/bitcoinaddress","navigatorTitle":[{"kind":"identifier","text":"BitcoinAddress"}],"abstract":[{"text":"A common interface for all types of Bitcoin addresses: legacy, segwit and taproot. An address can be decoded from a string and must be able to produce a transaction output for a given satoshi amount.","type":"text"}]},"doc://BitcoinWallet/documentation/BitcoinWallet/WalletNetwork":{"url":"\/documentation\/bitcoinwallet\/walletnetwork","abstract":[],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"WalletNetwork","kind":"identifier"}],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/WalletNetwork","title":"WalletNetwork","navigatorTitle":[{"text":"WalletNetwork","kind":"identifier"}],"role":"symbol"},"doc://BitcoinWallet/documentation/BitcoinWallet/BitcoinCrypto":{"abstract":[],"role":"collection","url":"\/documentation\/bitcoinwallet\/bitcoincrypto","type":"topic","kind":"symbol","title":"BitcoinCrypto","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinCrypto"},"doc://BitcoinWallet/documentation/BitcoinWallet/LegacyAddress":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"LegacyAddress","kind":"identifier"}],"title":"LegacyAddress","type":"topic","navigatorTitle":[{"kind":"identifier","text":"LegacyAddress"}],"kind":"symbol","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/LegacyAddress","abstract":[{"type":"text","text":"Legacy – i.e. base signature version – Bitcoin address."}],"role":"symbol","url":"\/documentation\/bitcoinwallet\/legacyaddress"}}}