{"hierarchy":{"paths":[["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet"]]},"sections":[],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinAddress","doc:\/\/BitcoinWallet\/s23CustomStringConvertibleP","doc:\/\/BitcoinWallet\/SQ","doc:\/\/BitcoinWallet\/s8SendableP"],"kind":"relationships","title":"Conforms To"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress"},"abstract":[{"type":"text","text":"Type-erased bitcoin address. Use when needing to decode and generate outputs but the type of address being decoded is not known beforehand"}],"topicSections":[{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/legacy(_:)","doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/segwit(_:)","doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/taproot(_:)"],"generated":true,"title":"Enumeration Cases","anchor":"Enumeration-Cases"},{"generated":true,"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/init(_:)"],"anchor":"Initializers","title":"Initializers"},{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/description"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/out(_:)"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"anchor":"Default-Implementations","generated":true,"title":"Default Implementations","identifiers":["doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/Equatable-Implementations"]}],"variants":[{"paths":["\/documentation\/bitcoinwallet\/anyaddress"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyAddress","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","metadata":{"roleHeading":"Enumeration","externalID":"s:13BitcoinWallet10AnyAddressO","title":"AnyAddress","role":"symbol","symbolKind":"enum","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyAddress"}],"modules":[{"name":"BitcoinWallet"}],"navigatorTitle":[{"text":"AnyAddress","kind":"identifier"}],"remoteSource":{"fileName":"AnyAddress.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/src\/bitcoin-wallet\/address\/AnyAddress.swift#L4"}},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://BitcoinWallet/SQ":{"type":"unresolvable","identifier":"doc:\/\/BitcoinWallet\/SQ","title":"Swift.Equatable"},"doc://BitcoinWallet/documentation/BitcoinWallet/AnyAddress/legacy(_:)":{"abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"legacy","kind":"identifier"},{"text":"(","kind":"text"},{"text":"LegacyAddress","kind":"typeIdentifier","preciseIdentifier":"s:13BitcoinWallet13LegacyAddressV"},{"kind":"text","text":")"}],"kind":"symbol","title":"AnyAddress.legacy(_:)","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/legacy(_:)","role":"symbol","url":"\/documentation\/bitcoinwallet\/anyaddress\/legacy(_:)"},"doc://BitcoinWallet/documentation/BitcoinWallet/AnyAddress/Equatable-Implementations":{"kind":"article","title":"Equatable Implementations","url":"\/documentation\/bitcoinwallet\/anyaddress\/equatable-implementations","abstract":[],"type":"topic","role":"collectionGroup","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/Equatable-Implementations"},"doc://BitcoinWallet/documentation/BitcoinWallet/AnyAddress/taproot(_:)":{"url":"\/documentation\/bitcoinwallet\/anyaddress\/taproot(_:)","role":"symbol","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/taproot(_:)","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"taproot","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:13BitcoinWallet14TaprootAddressV","kind":"typeIdentifier","text":"TaprootAddress"},{"kind":"text","text":")"}],"abstract":[],"kind":"symbol","type":"topic","title":"AnyAddress.taproot(_:)"},"doc://BitcoinWallet/documentation/BitcoinWallet":{"title":"BitcoinWallet","kind":"symbol","url":"\/documentation\/bitcoinwallet","type":"topic","role":"collection","abstract":[{"text":"Generate and decode Bitcoin addresses. Manage mnemonic seeds and derive Hierarchically Deterministic (HD) keys.","type":"text"}],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet"},"doc://BitcoinWallet/documentation/BitcoinWallet/AnyAddress/description":{"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/description","abstract":[],"url":"\/documentation\/bitcoinwallet\/anyaddress\/description","kind":"symbol","title":"description","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"description"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"role":"symbol"},"doc://BitcoinWallet/documentation/BitcoinWallet/AnyAddress/segwit(_:)":{"type":"topic","abstract":[],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/segwit(_:)","url":"\/documentation\/bitcoinwallet\/anyaddress\/segwit(_:)","title":"AnyAddress.segwit(_:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"segwit","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:13BitcoinWallet13SegwitAddressV","text":"SegwitAddress"},{"kind":"text","text":")"}]},"doc://BitcoinWallet/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/BitcoinWallet\/s8SendableP","type":"unresolvable"},"doc://BitcoinWallet/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","identifier":"doc:\/\/BitcoinWallet\/s23CustomStringConvertibleP","type":"unresolvable"},"doc://BitcoinWallet/documentation/BitcoinWallet/AnyAddress":{"abstract":[{"type":"text","text":"Type-erased bitcoin address. Use when needing to decode and generate outputs but the type of address being decoded is not known beforehand"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"text":"AnyAddress","kind":"identifier"}],"navigatorTitle":[{"text":"AnyAddress","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress","title":"AnyAddress","kind":"symbol","url":"\/documentation\/bitcoinwallet\/anyaddress","role":"symbol"},"doc://BitcoinWallet/documentation/BitcoinWallet/BitcoinAddress":{"url":"\/documentation\/bitcoinwallet\/bitcoinaddress","role":"symbol","navigatorTitle":[{"text":"BitcoinAddress","kind":"identifier"}],"identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/BitcoinAddress","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"BitcoinAddress"}],"abstract":[{"type":"text","text":"A common interface for all types of Bitcoin addresses: legacy, segwit and taproot. An address can be decoded from a string and must be able to produce a transaction output for a given satoshi amount."}],"kind":"symbol","type":"topic","title":"BitcoinAddress"},"doc://BitcoinWallet/documentation/BitcoinWallet/AnyAddress/init(_:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"title":"init(_:)","role":"symbol","kind":"symbol","abstract":[],"url":"\/documentation\/bitcoinwallet\/anyaddress\/init(_:)","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/init(_:)","type":"topic"},"doc://BitcoinWallet/documentation/BitcoinWallet/AnyAddress/out(_:)":{"url":"\/documentation\/bitcoinwallet\/anyaddress\/out(_:)","identifier":"doc:\/\/BitcoinWallet\/documentation\/BitcoinWallet\/AnyAddress\/out(_:)","abstract":[],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"out"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase13SatoshiAmounta","text":"SatoshiAmount","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"TxOut","preciseIdentifier":"s:11BitcoinBase5TxOutV"}],"type":"topic","role":"symbol","title":"out(_:)"}}}