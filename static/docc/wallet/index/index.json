{"includedArchiveIdentifiers":["BitcoinWallet"],"interfaceLanguages":{"swift":[{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoinwallet\/wallet\/computehdmasterkey(_:)","title":"static func computeHDMasterKey(String) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/converttowif(secretkey:compressedpublickeys:network:)","title":"static func convertToWIF(secretKey: SecretKey, compressedPublicKeys: Bool, network: WalletNetwork) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/converttowif(secretkeyhex:compressedpublickeys:network:)","title":"static func convertToWIF(secretKeyHex: String, compressedPublicKeys: Bool, network: WalletNetwork) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/createsecretkey()-1stxf","title":"static func createSecretKey() -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/createsecretkey()-6lpk9","title":"static func createSecretKey() -> Data","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/decodescript(_:sigversion:)","title":"static func decodeScript(Data, sigVersion: SigVersion) -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/decodescript(script:sigversion:)","title":"static func decodeScript(script: String, sigVersion: SigVersion) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/derivehdkey(isprivate:key:index:harden:)","title":"static func deriveHDKey(isPrivate: Bool, key: String, index: Int, harden: Bool) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/generateseed(bytes:)","title":"static func generateSeed(bytes: Int) -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/getaddress(publickey:sigversion:network:)","title":"static func getAddress(publicKey: PublicKey, sigVersion: SigVersion, network: WalletNetwork) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/getaddress(publickeyhex:sigversion:network:)","title":"static func getAddress(publicKeyHex: String, sigVersion: SigVersion, network: WalletNetwork) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/getaddress(scripts:publickey:sigversion:network:)","title":"static func getAddress(scripts: [Data], publicKey: PublicKey?, sigVersion: SigVersion, network: WalletNetwork) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/getaddress(scripts:publickeyhex:sigversion:network:)","title":"static func getAddress(scripts: [String], publicKeyHex: String?, sigVersion: SigVersion, network: WalletNetwork) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/getpublickey(secretkeyhex:)","title":"static func getPublicKey(secretKeyHex: String) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/mnemonicnew(withentropy:language:)","title":"static func mnemonicNew(withEntropy: String, language: String) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/mnemonictoseed(mnemonic:passphrase:language:)","title":"static func mnemonicToSeed(mnemonic: String, passphrase: String, language: String) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/neuterhdprivatekey(key:)","title":"static func neuterHDPrivateKey(key: String) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/sign(secretkey:messagedata:compressedpublickeys:)","title":"static func sign(secretKey: SecretKey, messageData: Data, compressedPublicKeys: Bool) throws -> Data","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/sign(secretkeywif:message:)","title":"static func sign(secretKeyWIF: String, message: String) throws -> String","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/verify(address:signature:message:)","title":"static func verify(address: String, signature: String, message: String) throws -> Bool","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/verify(publickeyhash:signaturedata:messagedata:)","title":"static func verify(publicKeyHash: Data, signatureData: Data, messageData: Data) throws -> Bool","type":"method"},{"path":"\/documentation\/bitcoinwallet\/wallet\/wiftoec(secretkeywif:)","title":"static func wifToEC(secretKeyWIF: String) throws -> (secretKey: SecretKey, compressedPublicKeys: Bool)","type":"method"}],"path":"\/documentation\/bitcoinwallet\/wallet","title":"Wallet","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/attempttoderivehardenedpublickey","title":"case attemptToDeriveHardenedPublicKey","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidaddress","title":"case invalidAddress","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidextendedkey","title":"case invalidExtendedKey","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidextendedkeytype","title":"case invalidExtendedKeyType","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidhexstring","title":"case invalidHexString","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidmessageencoding","title":"case invalidMessageEncoding","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidmnemonicchecksum","title":"case invalidMnemonicChecksum","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidmnemonicorpassphraseencoding","title":"case invalidMnemonicOrPassphraseEncoding","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidnetwork","title":"case invalidNetwork","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidpublickey","title":"case invalidPublicKey","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidsecretkey","title":"case invalidSecretKey","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidsecretkeyencoding","title":"case invalidSecretKeyEncoding","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidseed","title":"case invalidSeed","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidsigversion","title":"case invalidSigVersion","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidsignaturedata","title":"case invalidSignatureData","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/invalidsignatureencoding","title":"case invalidSignatureEncoding","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/languagenotsupported","title":"case languageNotSupported","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/mnemonicinvalidlength","title":"case mnemonicInvalidLength","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/mnemonicwordnotonlist","title":"case mnemonicWordNotOnList","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/publickeyrequired","title":"case publicKeyRequired","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/toomanytapscriptleaves","title":"case tooManyTapscriptLeaves","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoinwallet\/walleterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoinwallet\/walleterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bitcoinwallet\/walleterror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/bitcoinwallet\/walleterror","title":"WalletError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bitcoinwallet\/walletnetwork\/main","title":"case main","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walletnetwork\/regtest","title":"case regtest","type":"case"},{"path":"\/documentation\/bitcoinwallet\/walletnetwork\/test","title":"case test","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoinwallet\/walletnetwork\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoinwallet\/walletnetwork\/base58version","title":"var base58Version: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoinwallet\/walletnetwork\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoinwallet\/walletnetwork\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoinwallet\/walletnetwork\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoinwallet\/walletnetwork\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/bitcoinwallet\/walletnetwork\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/bitcoinwallet\/walletnetwork","title":"WalletNetwork","type":"enum"}],"path":"\/documentation\/bitcoinwallet","title":"Bitcoin Wallet","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}