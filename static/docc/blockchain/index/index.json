{"includedArchiveIdentifiers":["BitcoinBlockchain"],"interfaceLanguages":{"swift":[{"children":[{"title":"Essentials","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/==(_:_:)","title":"static func == (TxBlock, TxBlock) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/init(context:version:previous:merkleroot:time:target:nonce:txs:)","title":"init(context: BlockContext?, version: Int, previous: Data, merkleRoot: Data, time: Date, target: Int, nonce: Int, txs: [BitcoinTx])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/context","title":"var context: BlockContext?","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/hash","title":"var hash: Data","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/header","title":"var header: TxBlock","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/id","title":"var id: BlockID","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/idhex","title":"var idHex: String","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/merkleroot","title":"let merkleRoot: Data","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/nonce","title":"let nonce: Int","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/previous","title":"let previous: Data","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/target","title":"let target: Int","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/time","title":"let time: Date","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/txs","title":"var txs: [BitcoinTx]","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/version","title":"let version: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/idlength","title":"static let idLength: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/txblock\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoinblockchain\/txblock\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bitcoinblockchain\/txblock","title":"TxBlock","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/init(params:)","title":"init(params: ConsensusParams)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/blocks","title":"var blocks: [TxBlock]","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/genesisblock","title":"var genesisBlock: TxBlock","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/mempool","title":"var mempool: [BitcoinTx]","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/synchronized","title":"var synchronized: Bool","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/tip","title":"var tip: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/addtx(_:)","title":"func addTx(BitcoinTx) throws","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/calculatemissingblocks(ids:)","title":"func calculateMissingBlocks(ids: [BlockID]) -> [BlockID]","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/calculatemissingtxs(ids:)","title":"func calculateMissingTxs(ids: [TxID]) -> [TxID]","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/findheaders(using:)","title":"func findHeaders(using: [Data]) -> [TxBlock]","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/findmempooltxs(shortids:header:nonce:)","title":"func findMempoolTxs(shortIDs: [UInt64], header: TxBlock, nonce: UInt64) -> [BitcoinTx?]","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/generateto(_:blocktime:)-1t6rh","title":"func generateTo(PubKey, blockTime: Date)","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/generateto(_:blocktime:)-6shtq","title":"func generateTo(Data, blockTime: Date)","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/getblock(_:)-8b8f","title":"func getBlock(Int) -> TxBlock","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/getblock(_:)-imqf","title":"func getBlock(BlockID) -> TxBlock?","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/getblocks(_:)","title":"func getBlocks([Data]) -> [TxBlock]","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/getheader(_:)","title":"func getHeader(BlockID) -> TxBlock?","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/getnextmissingblocks(_:)","title":"func getNextMissingBlocks(Int) -> [Data]","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/gettx(_:)","title":"func getTx(TxID) -> BitcoinTx?","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/gettxs(_:)","title":"func getTxs([TxID]) -> [BitcoinTx]","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/makeblocklocator()","title":"func makeBlockLocator() -> [Data]","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/processblock(_:)","title":"func processBlock(TxBlock) throws(BlockchainService.Error)","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/processheaders(_:)","title":"func processHeaders([TxBlock]) throws(BlockchainService.Error)","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/shutdown()","title":"func shutdown()","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/subscribetoblocks()","title":"func subscribeToBlocks() -> AsyncChannel<TxBlock>","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/subscribetotxs()","title":"func subscribeToTxs() -> AsyncChannel<BitcoinTx>","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/unsubscribe(_:)-2jqaf","title":"func unsubscribe(AsyncChannel<BitcoinTx>)","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/unsubscribe(_:)-4zlhq","title":"func unsubscribe(AsyncChannel<TxBlock>)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/error\/headertoonew","title":"case headerTooNew","type":"case"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/error\/headertooold","title":"case headerTooOld","type":"case"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/error\/insuficientproofofwork","title":"case insuficientProofOfWork","type":"case"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/error\/orphanheader","title":"case orphanHeader","type":"case"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/error\/unsupportedblockversion","title":"case unsupportedBlockVersion","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/error","title":"BlockchainService.Error","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/bitcoinblockchain\/blockchainservice\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/bitcoinblockchain\/blockchainservice","title":"BlockchainService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/init(powlimit:powtargettimespan:powtargetspacing:powallowmindifficultyblocks:pownoretargeting:blocksubsidy:genesisblocktime:genesisblocknonce:genesisblocktarget:coinbasematurity:)","title":"init(powLimit: Data, powTargetTimespan: Int, powTargetSpacing: Int, powAllowMinDifficultyBlocks: Bool, powNoRetargeting: Bool, blockSubsidy: Int, genesisBlockTime: Int, genesisBlockNonce: Int, genesisBlockTarget: Int, coinbaseMaturity: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/blocksubsidy","title":"var blockSubsidy: SatoshiAmount","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/coinbasematurity","title":"let coinbaseMaturity: Int","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/difficultyadjustmentinterval","title":"var difficultyAdjustmentInterval: Int","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/genesisblocknonce","title":"let genesisBlockNonce: Int","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/genesisblocktarget","title":"let genesisBlockTarget: Int","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/genesisblocktime","title":"let genesisBlockTime: Int","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/powallowmindifficultyblocks","title":"let powAllowMinDifficultyBlocks: Bool","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/powlimit","title":"let powLimit: Data","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/pownoretargeting","title":"let powNoRetargeting: Bool","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/powtargetspacing","title":"let powTargetSpacing: Int","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/powtargettimespan","title":"let powTargetTimespan: Int","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/subsidyhalvinginterval","title":"let subsidyHalvingInterval: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/defaultcoinbasematurity","title":"static let defaultCoinbaseMaturity: Int","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/mainnet","title":"static let mainnet: ConsensusParams","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/maxblockweight","title":"static let maxBlockWeight: Int","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/consensusparams\/regtest","title":"static let regtest: ConsensusParams","type":"property"}],"path":"\/documentation\/bitcoinblockchain\/consensusparams","title":"ConsensusParams","type":"struct"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockcontext\/init(height:chainwork:status:)","title":"init(height: Int, chainwork: DifficultyTarget, status: BlockContext.ValidationStatus)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockcontext\/chainwork","title":"var chainwork: DifficultyTarget","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/blockcontext\/height","title":"var height: Int","type":"property"},{"path":"\/documentation\/bitcoinblockchain\/blockcontext\/status","title":"var status: BlockContext.ValidationStatus","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockcontext\/validationstatus\/full","title":"case full","type":"case"},{"path":"\/documentation\/bitcoinblockchain\/blockcontext\/validationstatus\/header","title":"case header","type":"case"},{"path":"\/documentation\/bitcoinblockchain\/blockcontext\/validationstatus\/merkle","title":"case merkle","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockcontext\/validationstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoinblockchain\/blockcontext\/validationstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bitcoinblockchain\/blockcontext\/validationstatus","title":"BlockContext.ValidationStatus","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockcontext\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoinblockchain\/blockcontext\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bitcoinblockchain\/blockcontext","title":"BlockContext","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/difficultytarget\/_(_:_:)-5b2i1","title":"static func < (DifficultyTarget, DifficultyTarget) -> Bool","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/difficultytarget\/'...(_:)-8jcot","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/bitcoinblockchain\/difficultytarget\/'...(_:)-98o4","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/bitcoinblockchain\/difficultytarget\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/bitcoinblockchain\/difficultytarget\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/bitcoinblockchain\/difficultytarget\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/bitcoinblockchain\/difficultytarget\/_(_:_:)-2j36l","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/bitcoinblockchain\/difficultytarget\/_=(_:_:)-50gve","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/bitcoinblockchain\/difficultytarget\/_=(_:_:)-k978","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoinblockchain\/difficultytarget\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/difficultytarget\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoinblockchain\/difficultytarget\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bitcoinblockchain\/difficultytarget","title":"DifficultyTarget","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bitcoinblockchain\/blockid","title":"BlockID","type":"typealias"}],"path":"\/documentation\/bitcoinblockchain","title":"Bitcoin Blockchain","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}