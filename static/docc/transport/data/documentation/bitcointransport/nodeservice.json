{"topicSections":[{"identifiers":["doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/init(blockchainService:config:state:)"],"title":"Initializers","anchor":"Initializers","generated":true},{"generated":true,"identifiers":["doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/blockchainService","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/blocks","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/config","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/state"],"title":"Instance Properties","anchor":"Instance-Properties"},{"title":"Instance Methods","anchor":"Instance-Methods","generated":true,"identifiers":["doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/addPeer(host:port:incoming:)","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/addTx(_:)","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/connect(_:)","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/getChannel(for:)","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/handleBlock(_:)","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/pingAll()","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/popMessage(_:)","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/processMessage(_:from:)","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/removePeer(_:)","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/requestHeaders()","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/resetAddress()","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/setAddress(_:_:)","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/start()","doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/stop()"]},{"identifiers":["doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/Error"],"generated":true,"anchor":"Enumerations","title":"Enumerations"},{"generated":true,"identifiers":["doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/Actor-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"abstract":[{"text":"Manages connection with state.peers, process incoming messages and sends responses.","type":"text"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/BitcoinTransport\/s8SendableP","doc:\/\/BitcoinTransport\/ScA"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"actor","kind":"keyword"},{"kind":"text","text":" "},{"text":"NodeService","kind":"identifier"}]}],"kind":"declarations"}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/bitcointransport\/nodeservice"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"NodeService","kind":"identifier"}],"remoteSource":{"fileName":"NodeService.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/src\/bitcoin-transport\/NodeService.swift#L10"},"role":"symbol","modules":[{"name":"Bitcoin Transport"}],"symbolKind":"class","navigatorTitle":[{"text":"NodeService","kind":"identifier"}],"title":"NodeService","externalID":"s:16BitcoinTransport11NodeServiceC","roleHeading":"Class"},"identifier":{"url":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport"]]},"kind":"symbol","references":{"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/removePeer(_:)":{"role":"symbol","type":"topic","title":"removePeer(_:)","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/removePeer(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"removePeer","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UUID","preciseIdentifier":"s:10Foundation4UUIDV"},{"kind":"text","text":")"}],"abstract":[{"text":"Deregisters a peer and cleans up outbound channels.","type":"text"}],"url":"\/documentation\/bitcointransport\/nodeservice\/removepeer(_:)"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/handleBlock(_:)":{"kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleBlock","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:17BitcoinBlockchain7TxBlockV","kind":"typeIdentifier","text":"TxBlock"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/handleBlock(_:)","abstract":[],"url":"\/documentation\/bitcointransport\/nodeservice\/handleblock(_:)","title":"handleBlock(_:)"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/state":{"type":"topic","title":"state","abstract":[],"url":"\/documentation\/bitcointransport\/nodeservice\/state","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"state","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16BitcoinTransport9NodeStateV","kind":"typeIdentifier","text":"NodeState"}],"kind":"symbol","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/state"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/stop()":{"kind":"symbol","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/stop()","role":"symbol","title":"stop()","abstract":[{"type":"text","text":"We unsubscribe from Bitcoin service’s blocks."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stop","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"url":"\/documentation\/bitcointransport\/nodeservice\/stop()"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/getChannel(for:)":{"title":"getChannel(for:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"getChannel"},{"kind":"text","text":"("},{"text":"for","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4UUIDV","kind":"typeIdentifier","text":"UUID"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:15AsyncAlgorithms0A7ChannelC","text":"AsyncChannel"},{"text":"<","kind":"text"},{"text":"BitcoinMessage","kind":"typeIdentifier","preciseIdentifier":"s:16BitcoinTransport0A7MessageV"},{"kind":"text","text":">"}],"kind":"symbol","abstract":[{"text":"Returns a channel for a given peer’s outbox. The caller can be notified of new messages generated for this peer.","type":"text"}],"url":"\/documentation\/bitcointransport\/nodeservice\/getchannel(for:)","role":"symbol","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/getChannel(for:)","type":"topic"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/start()":{"kind":"symbol","title":"start()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"}],"abstract":[],"url":"\/documentation\/bitcointransport\/nodeservice\/start()","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/start()","type":"topic","role":"symbol"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/config":{"abstract":[],"type":"topic","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/config","title":"config","kind":"symbol","url":"\/documentation\/bitcointransport\/nodeservice\/config","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"config","kind":"identifier"},{"kind":"text","text":": "},{"text":"NodeConfig","preciseIdentifier":"s:16BitcoinTransport10NodeConfigV","kind":"typeIdentifier"}]},"doc://BitcoinTransport/documentation/BitcoinTransport":{"url":"\/documentation\/bitcointransport","abstract":[{"type":"text","text":"Bitcoin transport layer, also known as the peer-to-peer or "},{"type":"emphasis","inlineContent":[{"text":"wire","type":"text"}]},{"type":"text","text":" protocol. Everything from the node service to messages to peer representation."}],"type":"topic","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport","title":"Bitcoin Transport","kind":"symbol","role":"collection"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/pingAll()":{"kind":"symbol","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/pingAll()","role":"symbol","title":"pingAll()","abstract":[{"type":"text","text":"Send a ping to each of our state.peers. Calling this function will create child tasks."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pingAll","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"}],"url":"\/documentation\/bitcointransport\/nodeservice\/pingall()"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/setAddress(_:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"setAddress","kind":"identifier"},{"text":"(","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"setAddress(_:_:)","kind":"symbol","type":"topic","abstract":[{"text":"Receive address information from the peer-to-peer service whenever it’s actively listening.","type":"text"}],"role":"symbol","url":"\/documentation\/bitcointransport\/nodeservice\/setaddress(_:_:)","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/setAddress(_:_:)"},"doc://BitcoinTransport/s8SendableP":{"identifier":"doc:\/\/BitcoinTransport\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/addPeer(host:port:incoming:)":{"kind":"symbol","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/addPeer(host:port:incoming:)","role":"symbol","title":"addPeer(host:port:incoming:)","abstract":[{"type":"text","text":"Registers a peer with the node. Incoming means we are the listener. Otherwise we are the node initiating the connection."}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addPeer","kind":"identifier"},{"text":"(","kind":"text"},{"text":"host","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"incoming"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"UUID","preciseIdentifier":"s:10Foundation4UUIDV"}],"url":"\/documentation\/bitcointransport\/nodeservice\/addpeer(host:port:incoming:)"},"doc://BitcoinTransport/ScA":{"type":"unresolvable","identifier":"doc:\/\/BitcoinTransport\/ScA","title":"_Concurrency.Actor"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/blocks":{"kind":"symbol","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/blocks","role":"symbol","title":"blocks","abstract":[{"type":"text","text":"Subscription to the bitcoin service’s blocks channel."}],"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"blocks","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AsyncChannel","preciseIdentifier":"s:15AsyncAlgorithms0A7ChannelC","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"TxBlock","kind":"typeIdentifier","preciseIdentifier":"s:17BitcoinBlockchain7TxBlockV"},{"text":">?","kind":"text"}],"url":"\/documentation\/bitcointransport\/nodeservice\/blocks"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/Error":{"role":"symbol","title":"NodeService.Error","url":"\/documentation\/bitcointransport\/nodeservice\/error","kind":"symbol","abstract":[{"type":"text","text":"An error while establishing a connection with a peer or processing an incoming message."}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Error"}],"navigatorTitle":[{"kind":"identifier","text":"Error"}],"identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/Error","type":"topic"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService":{"abstract":[{"text":"Manages connection with state.peers, process incoming messages and sends responses.","type":"text"}],"url":"\/documentation\/bitcointransport\/nodeservice","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NodeService","kind":"identifier"}],"title":"NodeService","type":"topic","navigatorTitle":[{"text":"NodeService","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/Actor-Implementations":{"kind":"article","title":"Actor Implementations","abstract":[],"url":"\/documentation\/bitcointransport\/nodeservice\/actor-implementations","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/Actor-Implementations","type":"topic","role":"collectionGroup"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/connect(_:)":{"kind":"symbol","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/connect(_:)","role":"symbol","title":"connect(_:)","abstract":[{"text":"Starts the handshake process but only if its an outgoing peer – i.e. we initiated the connection. Generates a child task for delivering the initial version message.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UUID","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4UUIDV"},{"kind":"text","text":") "},{"text":"async","kind":"keyword"}],"url":"\/documentation\/bitcointransport\/nodeservice\/connect(_:)"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/popMessage(_:)":{"kind":"symbol","title":"popMessage(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"popMessage","kind":"identifier"},{"text":"(","kind":"text"},{"text":"UUID","preciseIdentifier":"s:10Foundation4UUIDV","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"text":"BitcoinMessage","kind":"typeIdentifier","preciseIdentifier":"s:16BitcoinTransport0A7MessageV"},{"text":"?","kind":"text"}],"abstract":[],"url":"\/documentation\/bitcointransport\/nodeservice\/popmessage(_:)","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/popMessage(_:)","type":"topic","role":"symbol"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/requestHeaders()":{"identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/requestHeaders()","title":"requestHeaders()","abstract":[{"type":"text","text":"Request headers from peers."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"requestHeaders"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"}],"kind":"symbol","url":"\/documentation\/bitcointransport\/nodeservice\/requestheaders()","role":"symbol","type":"topic"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/addTx(_:)":{"kind":"symbol","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/addTx(_:)","role":"symbol","title":"addTx(_:)","abstract":[],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"addTx"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase0A2TxV","text":"BitcoinTx","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/bitcointransport\/nodeservice\/addtx(_:)"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/processMessage(_:from:)":{"kind":"symbol","title":"processMessage(_:from:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"processMessage","kind":"identifier"},{"text":"(","kind":"text"},{"text":"BitcoinMessage","preciseIdentifier":"s:16BitcoinTransport0A7MessageV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"UUID","preciseIdentifier":"s:10Foundation4UUIDV"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"abstract":[{"type":"text","text":"Process an incoming message from a peer. This will sometimes result in sending out one or more messages back to the peer. The function will ultimately create a child task per message sent."}],"url":"\/documentation\/bitcointransport\/nodeservice\/processmessage(_:from:)","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/processMessage(_:from:)","type":"topic","role":"symbol"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/init(blockchainService:config:state:)":{"kind":"symbol","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/init(blockchainService:config:state:)","role":"symbol","title":"init(blockchainService:config:state:)","abstract":[{"type":"text","text":"Creates an instance of a bitcoin node service."}],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"text":"blockchainService","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"BlockchainService","preciseIdentifier":"s:17BitcoinBlockchain0B7ServiceC"},{"text":", ","kind":"text"},{"text":"config","kind":"externalParam"},{"kind":"text","text":": "},{"text":"NodeConfig","preciseIdentifier":"s:16BitcoinTransport10NodeConfigV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"state","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16BitcoinTransport9NodeStateV","text":"NodeState","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/bitcointransport\/nodeservice\/init(blockchainservice:config:state:)"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/blockchainService":{"type":"topic","kind":"symbol","identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/blockchainService","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"blockchainService"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17BitcoinBlockchain0B7ServiceC","text":"BlockchainService"}],"abstract":[{"type":"text","text":"The bitcoin service actor instance backing this node."}],"title":"blockchainService","url":"\/documentation\/bitcointransport\/nodeservice\/blockchainservice","role":"symbol"},"doc://BitcoinTransport/documentation/BitcoinTransport/NodeService/resetAddress()":{"kind":"symbol","title":"resetAddress()","role":"symbol","type":"topic","abstract":[{"text":"Called when the peer-to-peer service stops listening for incoming connections.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"resetAddress","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/BitcoinTransport\/documentation\/BitcoinTransport\/NodeService\/resetAddress()","url":"\/documentation\/bitcointransport\/nodeservice\/resetaddress()"}}}