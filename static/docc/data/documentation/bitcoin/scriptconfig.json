{"sections":[],"hierarchy":{"paths":[["doc:\/\/Bitcoin\/documentation\/Bitcoin"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/Bitcoin\/SQ","doc:\/\/Bitcoin\/s25ExpressibleByArrayLiteralP","doc:\/\/Bitcoin\/s9OptionSetP","doc:\/\/Bitcoin\/SY","doc:\/\/Bitcoin\/s10SetAlgebraP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"metadata":{"externalID":"s:7Bitcoin12ScriptConfigV","roleHeading":"Structure","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ScriptConfig"}],"modules":[{"name":"Swift Bitcoin"}],"symbolKind":"struct","title":"ScriptConfig","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScriptConfig"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ScriptConfig"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"url":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/init(rawValue:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/rawValue"]},{"title":"Type Properties","identifiers":["doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/checkLockTimeVerify","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/checkSequenceVerify","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/cleanStack","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/constantScriptCode","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/discourageOpSuccess","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/discourageUpgradableNoOps","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/discourageUpgradablePublicKeyType","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/discourageUpgradableTaprootVersion","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/discourageUpgradableWitnessProgram","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/lowS","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/mandatory","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/minimalData","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/minimalIf","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/nullDummy","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/nullFail","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/payToScriptHash","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/pushOnly","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/standard","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/strictDER","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/strictEncoding","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/taproot","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/witness","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/witnessCompressedPublicKey"]},{"identifiers":["doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/Equatable-Implementations","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/OptionSet-Implementations","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/SetAlgebra-Implementations"],"generated":true,"title":"Default Implementations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoin\/scriptconfig"]}],"abstract":[{"text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}],"references":{"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/constantScriptCode":{"abstract":[{"type":"text","text":"Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts"}],"kind":"symbol","title":"constantScriptCode","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/constantScriptCode","url":"\/documentation\/bitcoin\/scriptconfig\/constantscriptcode","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"constantScriptCode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Bitcoin12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"role":"symbol","type":"topic"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/minimalIf":{"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/minimalIf","title":"minimalIf","url":"\/documentation\/bitcoin\/scriptconfig\/minimalif","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimalIf"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Bitcoin12ScriptConfigV","text":"ScriptConfig"}],"abstract":[{"text":"BIP141: The argument of OP_IF\/NOTIF in P2WSH must be minimal. Relay\/mining policy rule 2.","type":"text"}],"type":"topic","role":"symbol"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/witnessCompressedPublicKey":{"role":"symbol","url":"\/documentation\/bitcoin\/scriptconfig\/witnesscompressedpublickey","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"witnessCompressedPublicKey","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:7Bitcoin12ScriptConfigV"}],"abstract":[{"text":"BIP141: Only compressed public keys are accepted in P2WPKH and P2WSH (See BIP143). Relay\/mining policy rule 1.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/witnessCompressedPublicKey","title":"witnessCompressedPublicKey"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/checkLockTimeVerify":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"checkLockTimeVerify","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:7Bitcoin12ScriptConfigV"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/checkLockTimeVerify","title":"checkLockTimeVerify","type":"topic","url":"\/documentation\/bitcoin\/scriptconfig\/checklocktimeverify","role":"symbol","abstract":[{"text":"BIP65: Evaluate ","type":"text"},{"code":"OP_CHECKLOCKTIMEVERIFY","type":"codeVoice"},{"text":".","type":"text"}]},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/rawValue":{"abstract":[],"type":"topic","url":"\/documentation\/bitcoin\/scriptconfig\/rawvalue","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/rawValue","kind":"symbol","title":"rawValue"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/SetAlgebra-Implementations":{"title":"SetAlgebra Implementations","kind":"article","url":"\/documentation\/bitcoin\/scriptconfig\/setalgebra-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/SetAlgebra-Implementations","abstract":[]},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/witness":{"role":"symbol","kind":"symbol","url":"\/documentation\/bitcoin\/scriptconfig\/witness","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/witness","title":"witness","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"witness","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:7Bitcoin12ScriptConfigV"}],"abstract":[{"text":"BIP141: Verify witness program (all witness versions).","type":"text"}],"type":"topic"},"doc://Bitcoin/SY":{"title":"Swift.RawRepresentable","identifier":"doc:\/\/Bitcoin\/SY","type":"unresolvable"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/discourageUpgradableTaprootVersion":{"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/discourageUpgradableTaprootVersion","url":"\/documentation\/bitcoin\/scriptconfig\/discourageupgradabletaprootversion","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradableTaprootVersion"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:7Bitcoin12ScriptConfigV","kind":"typeIdentifier"}],"title":"discourageUpgradableTaprootVersion","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Making unknown Taproot leaf versions non-standard."}]},"doc://Bitcoin/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/Bitcoin\/s25ExpressibleByArrayLiteralP","type":"unresolvable"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/mandatory":{"url":"\/documentation\/bitcoin\/scriptconfig\/mandatory","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"mandatory","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Bitcoin12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"title":"mandatory","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/mandatory","kind":"symbol","abstract":[{"type":"text","text":"Mandatory script verification flags that all new transactions must comply with for them to be valid. Failing one of these tests may trigger a DoS ban. See "},{"type":"codeVoice","code":"CheckInputScripts()"},{"text":" on Bitcoin Core  for details.","type":"text"},{"type":"text","text":" "},{"text":"Note that this does not affect consensus validity. See ","type":"text"},{"code":"GetBlockScriptFlags()","type":"codeVoice"},{"text":" for that.","type":"text"}],"type":"topic","role":"symbol"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/discourageOpSuccess":{"type":"topic","url":"\/documentation\/bitcoin\/scriptconfig\/discourageopsuccess","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/discourageOpSuccess","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"discourageOpSuccess","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Bitcoin12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"kind":"symbol","title":"discourageOpSuccess","role":"symbol","abstract":[{"text":"Making unknown ","type":"text"},{"type":"codeVoice","code":"OP_SUCCESS"},{"type":"text","text":" non-standard."}]},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/checkSequenceVerify":{"abstract":[{"type":"text","text":"BIP112: Evaluate "},{"type":"codeVoice","code":"OP_CHECKSEQUENCEVERIFY"},{"text":".","type":"text"}],"url":"\/documentation\/bitcoin\/scriptconfig\/checksequenceverify","role":"symbol","type":"topic","title":"checkSequenceVerify","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/checkSequenceVerify","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"checkSequenceVerify","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:7Bitcoin12ScriptConfigV"}],"kind":"symbol"},"doc://Bitcoin/s10SetAlgebraP":{"title":"Swift.SetAlgebra","type":"unresolvable","identifier":"doc:\/\/Bitcoin\/s10SetAlgebraP"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/standard":{"type":"topic","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/standard","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"standard","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Bitcoin12ScriptConfigV","text":"ScriptConfig"}],"url":"\/documentation\/bitcoin\/scriptconfig\/standard","title":"standard","role":"symbol","kind":"symbol","abstract":[{"text":"Standard script verification flags that standard transactions will comply with. However we do not ban\/disconnect nodes that forward txs violating the additional (non-mandatory) rules here, to improve forwards and backwards compatability.","type":"text"}]},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/init(rawValue:)":{"url":"\/documentation\/bitcoin\/scriptconfig\/init(rawvalue:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/init(rawValue:)","type":"topic","role":"symbol","abstract":[],"title":"init(rawValue:)"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/nullDummy":{"kind":"symbol","abstract":[{"type":"text","text":"BIP62 rule 7"},{"type":"text","text":" "},{"type":"text","text":"Verify dummy stack item consumed by "},{"code":"CHECKMULTISIG","type":"codeVoice"},{"type":"text","text":" is of zero-length."}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"nullDummy","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Bitcoin12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoin\/scriptconfig\/nulldummy","title":"nullDummy","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/nullDummy","role":"symbol"},"doc://Bitcoin/s9OptionSetP":{"title":"Swift.OptionSet","type":"unresolvable","identifier":"doc:\/\/Bitcoin\/s9OptionSetP"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/pushOnly":{"abstract":[{"type":"text","text":"BIP62 rule 2"},{"type":"text","text":" "},{"text":"Using a non-push operator in the scriptSig causes script failure.","type":"text"}],"type":"topic","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/pushOnly","url":"\/documentation\/bitcoin\/scriptconfig\/pushonly","title":"pushOnly","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"pushOnly","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:7Bitcoin12ScriptConfigV"}],"role":"symbol"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/lowS":{"title":"lowS","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"lowS","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:7Bitcoin12ScriptConfigV"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/lowS","type":"topic","role":"symbol","abstract":[{"type":"text","text":"BIP62 rule 5"},{"text":" ","type":"text"},{"type":"text","text":"Passing a non-strict-DER signature or one with S > order\/2 to a checksig operation causes script failure."}],"url":"\/documentation\/bitcoin\/scriptconfig\/lows"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/taproot":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"taproot","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:7Bitcoin12ScriptConfigV"}],"url":"\/documentation\/bitcoin\/scriptconfig\/taproot","role":"symbol","type":"topic","title":"taproot","kind":"symbol","abstract":[{"type":"text","text":"BIP341, BIP342: Taproot\/Tapscript validation."}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/taproot"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/minimalData":{"title":"minimalData","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"minimalData","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:7Bitcoin12ScriptConfigV","kind":"typeIdentifier"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/minimalData","type":"topic","role":"symbol","abstract":[{"type":"text","text":"BIP62 rule 3-4"},{"text":" ","type":"text"},{"type":"text","text":"Require minimal encodings for all push operations ("},{"code":"OP_0","type":"codeVoice"},{"type":"text","text":"…"},{"type":"codeVoice","code":"OP_16"},{"type":"text","text":", "},{"code":"OP_1NEGATE","type":"codeVoice"},{"type":"text","text":" where possible, direct  pushes up to 75 bytes, "},{"type":"codeVoice","code":"OP_PUSHDATA"},{"text":" up to 255 bytes, ","type":"text"},{"type":"codeVoice","code":"OP_PUSHDATA2"},{"text":" for anything larger).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Evaluating any other push causes the script to fail (BIP62 rule 3)."},{"type":"text","text":" "},{"type":"text","text":"In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4)."}],"url":"\/documentation\/bitcoin\/scriptconfig\/minimaldata"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/cleanStack":{"kind":"symbol","abstract":[{"text":"BIP62 rule 6","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Require that only a single stack element remains after evaluation. Only to be used with P2SH."}],"type":"topic","url":"\/documentation\/bitcoin\/scriptconfig\/cleanstack","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cleanStack"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Bitcoin12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"title":"cleanStack","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/cleanStack"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/payToScriptHash":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/payToScriptHash","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"payToScriptHash","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:7Bitcoin12ScriptConfigV","kind":"typeIdentifier"}],"title":"payToScriptHash","abstract":[{"type":"text","text":"BIP16"}],"url":"\/documentation\/bitcoin\/scriptconfig\/paytoscripthash"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/Equatable-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/Equatable-Implementations","title":"Equatable Implementations","url":"\/documentation\/bitcoin\/scriptconfig\/equatable-implementations","kind":"article"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/strictDER":{"role":"symbol","abstract":[{"type":"text","text":"BIP66 (consensus) and BIP62 rule 1 (policy)"},{"type":"text","text":" "},{"type":"text","text":"Passing a non-strict-DER signature to a checksig operation causes script failure."}],"type":"topic","url":"\/documentation\/bitcoin\/scriptconfig\/strictder","title":"strictDER","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"strictDER","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:7Bitcoin12ScriptConfigV"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/strictDER"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/discourageUpgradableWitnessProgram":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/discourageUpgradableWitnessProgram","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradableWitnessProgram"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Bitcoin12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"title":"discourageUpgradableWitnessProgram","abstract":[{"type":"text","text":"Making v2-v16 witness program non-standard."}],"url":"\/documentation\/bitcoin\/scriptconfig\/discourageupgradablewitnessprogram"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/OptionSet-Implementations":{"abstract":[],"type":"topic","title":"OptionSet Implementations","url":"\/documentation\/bitcoin\/scriptconfig\/optionset-implementations","kind":"article","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/OptionSet-Implementations","role":"collectionGroup"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig":{"navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ScriptConfig"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig","abstract":[{"text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}],"kind":"symbol","type":"topic","title":"ScriptConfig","url":"\/documentation\/bitcoin\/scriptconfig","role":"symbol"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/nullFail":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nullFail","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:7Bitcoin12ScriptConfigV","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoin\/scriptconfig\/nullfail","role":"symbol","type":"topic","title":"nullFail","kind":"symbol","abstract":[{"type":"text","text":"BIP141: Signature(s) must be null vector(s) if an OP_CHECKSIG or OP_CHECKMULTISIG is failed (for both pre-segregated witness script and P2WSH. See BIP146). Relay\/mining policy rule 3."}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/nullFail"},"doc://Bitcoin/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/Bitcoin\/SQ"},"doc://Bitcoin/documentation/Bitcoin":{"type":"topic","url":"\/documentation\/bitcoin","kind":"symbol","role":"collection","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin","title":"Swift Bitcoin","abstract":[{"text":"Pure-Swift Bitcoin client implementation with full node capabilities.","type":"text"}]},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/discourageUpgradablePublicKeyType":{"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/discourageUpgradablePublicKeyType","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"discourageUpgradablePublicKeyType","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:7Bitcoin12ScriptConfigV","kind":"typeIdentifier"}],"title":"discourageUpgradablePublicKeyType","abstract":[{"type":"text","text":"Making unknown public key versions (in BIP342 scripts) non-standard."}],"url":"\/documentation\/bitcoin\/scriptconfig\/discourageupgradablepublickeytype"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/discourageUpgradableNoOps":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradableNoOps"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:7Bitcoin12ScriptConfigV"}],"kind":"symbol","abstract":[{"text":"Discourage use of NOPs reserved for upgrades (NOP1-10)","type":"text"}],"title":"discourageUpgradableNoOps","url":"\/documentation\/bitcoin\/scriptconfig\/discourageupgradablenoops","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/discourageUpgradableNoOps","type":"topic","role":"symbol"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfig/strictEncoding":{"abstract":[{"type":"text","text":"Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure."},{"text":" ","type":"text"},{"type":"text","text":"Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure."},{"type":"text","text":" "},{"type":"text","text":"Not used or intended as a consensus rule."}],"role":"symbol","kind":"symbol","title":"strictEncoding","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strictEncoding","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:7Bitcoin12ScriptConfigV"}],"type":"topic","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfig\/strictEncoding","url":"\/documentation\/bitcoin\/scriptconfig\/strictencoding"}}}