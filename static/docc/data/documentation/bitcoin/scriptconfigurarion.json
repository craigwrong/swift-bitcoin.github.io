{"metadata":{"symbolKind":"struct","role":"symbol","modules":[{"name":"Bitcoin"}],"roleHeading":"Structure","title":"ScriptConfigurarion","externalID":"s:7Bitcoin19ScriptConfigurarionV","navigatorTitle":[{"text":"ScriptConfigurarion","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ScriptConfigurarion","kind":"identifier"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/init(strictDER:pushOnly:minimalData:lowS:cleanStack:nullDummy:strictEncoding:payToScriptHash:checkLockTimeVerify:checkSequenceVerify:discourageUpgradableNoOps:constantScriptCode:witness:witnessCompressedPublicKey:minimalIf:nullFail:discourageUpgradableWitnessProgram:taproot:discourageUpgradableTaprootVersion:discourageOpSuccess:discourageUpgradablePublicKeyType:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/checkLockTimeVerify","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/checkSequenceVerify","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/cleanStack","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/constantScriptCode","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/discourageOpSuccess","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/discourageUpgradableNoOps","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/discourageUpgradablePublicKeyType","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/discourageUpgradableTaprootVersion","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/discourageUpgradableWitnessProgram","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/lowS","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/minimalData","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/minimalIf","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/nullDummy","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/nullFail","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/payToScriptHash","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/pushOnly","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/strictDER","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/strictEncoding","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/taproot","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/witness","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/witnessCompressedPublicKey"]},{"title":"Type Properties","identifiers":["doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/mandatory","doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/standard"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Bitcoin\/documentation\/Bitcoin"]]},"abstract":[{"type":"text","text":"Script verification flags represented by configuration options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A)."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ScriptConfigurarion"}]}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoin\/scriptconfigurarion"]}],"identifier":{"url":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion","interfaceLanguage":"swift"},"references":{"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/nullDummy":{"abstract":[{"type":"text","text":"BIP62 rule 7"},{"type":"text","text":" "},{"text":"Verify dummy stack item consumed by ","type":"text"},{"type":"codeVoice","code":"CHECKMULTISIG"},{"text":" is of zero-length.","type":"text"}],"role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nullDummy"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/bitcoin\/scriptconfigurarion\/nulldummy","type":"topic","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/nullDummy","title":"nullDummy"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/discourageUpgradablePublicKeyType":{"type":"topic","url":"\/documentation\/bitcoin\/scriptconfigurarion\/discourageupgradablepublickeytype","title":"discourageUpgradablePublicKeyType","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Making unknown public key versions (in BIP342 scripts) non-standard."}],"fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"discourageUpgradablePublicKeyType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/discourageUpgradablePublicKeyType"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/discourageUpgradableWitnessProgram":{"abstract":[{"type":"text","text":"Making v2-v16 witness program non-standard."}],"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"discourageUpgradableWitnessProgram","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","url":"\/documentation\/bitcoin\/scriptconfigurarion\/discourageupgradablewitnessprogram","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/discourageUpgradableWitnessProgram","title":"discourageUpgradableWitnessProgram"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/discourageOpSuccess":{"abstract":[{"text":"Making unknown ","type":"text"},{"type":"codeVoice","code":"OP_SUCCESS"},{"text":" non-standard.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"discourageOpSuccess","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoin\/scriptconfigurarion\/discourageopsuccess","type":"topic","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/discourageOpSuccess","title":"discourageOpSuccess"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/minimalIf":{"fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"minimalIf","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/minimalIf","url":"\/documentation\/bitcoin\/scriptconfigurarion\/minimalif","title":"minimalIf","abstract":[{"text":"BIP141: The argument of OP_IF\/NOTIF in P2WSH must be minimal. Relay\/mining policy rule 2.","type":"text"}],"role":"symbol"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/witness":{"type":"topic","role":"symbol","title":"witness","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/witness","abstract":[{"type":"text","text":"BIP141: Verify witness program (all witness versions)."}],"url":"\/documentation\/bitcoin\/scriptconfigurarion\/witness","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"witness"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}]},"doc://Bitcoin/documentation/Bitcoin":{"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin","role":"collection","title":"Bitcoin","type":"topic","url":"\/documentation\/bitcoin","kind":"symbol","abstract":[]},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/mandatory":{"title":"mandatory","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mandatory"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Bitcoin19ScriptConfigurarionV","kind":"typeIdentifier","text":"ScriptConfigurarion"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/mandatory","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/bitcoin\/scriptconfigurarion\/mandatory","abstract":[{"text":"Mandatory script verification flags that all new transactions must comply with for them to be valid. Failing one of these tests may trigger a DoS ban. See ","type":"text"},{"code":"CheckInputScripts()","type":"codeVoice"},{"text":" on Bitcoin Core  for details.","type":"text"},{"text":" ","type":"text"},{"text":"Note that this does not affect consensus validity. See ","type":"text"},{"code":"GetBlockScriptFlags()","type":"codeVoice"},{"type":"text","text":" for that."}]},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/checkSequenceVerify":{"abstract":[{"text":"BIP112: Evaluate ","type":"text"},{"type":"codeVoice","code":"OP_CHECKSEQUENCEVERIFY"},{"type":"text","text":"."}],"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"checkSequenceVerify","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","url":"\/documentation\/bitcoin\/scriptconfigurarion\/checksequenceverify","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/checkSequenceVerify","title":"checkSequenceVerify"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/constantScriptCode":{"abstract":[{"text":"Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts","type":"text"}],"role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"constantScriptCode"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/bitcoin\/scriptconfigurarion\/constantscriptcode","type":"topic","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/constantScriptCode","title":"constantScriptCode"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/standard":{"abstract":[{"text":"Standard script verification flags that standard transactions will comply with. However we do not ban\/disconnect nodes that forward txs violating the additional (non-mandatory) rules here, to improve forwards and backwards compatability.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"standard","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfigurarion","kind":"typeIdentifier","preciseIdentifier":"s:7Bitcoin19ScriptConfigurarionV"}],"type":"topic","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/standard","title":"standard","role":"symbol","kind":"symbol","url":"\/documentation\/bitcoin\/scriptconfigurarion\/standard"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/witnessCompressedPublicKey":{"abstract":[{"type":"text","text":"BIP141: Only compressed public keys are accepted in P2WPKH and P2WSH (See BIP143). Relay\/mining policy rule 1."}],"role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"witnessCompressedPublicKey","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}],"type":"topic","url":"\/documentation\/bitcoin\/scriptconfigurarion\/witnesscompressedpublickey","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/witnessCompressedPublicKey","title":"witnessCompressedPublicKey"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/lowS":{"role":"symbol","abstract":[{"text":"BIP62 rule 5","type":"text"},{"type":"text","text":" "},{"text":"Passing a non-strict-DER signature or one with S > order\/2 to a checksig operation causes script failure.","type":"text"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/lowS","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lowS"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"lowS","type":"topic","url":"\/documentation\/bitcoin\/scriptconfigurarion\/lows"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/minimalData":{"abstract":[{"text":"BIP62 rule 3-4","type":"text"},{"type":"text","text":" "},{"text":"Require minimal encodings for all push operations (","type":"text"},{"code":"OP_0","type":"codeVoice"},{"type":"text","text":"…"},{"type":"codeVoice","code":"OP_16"},{"type":"text","text":", "},{"type":"codeVoice","code":"OP_1NEGATE"},{"type":"text","text":" where possible, direct  pushes up to 75 bytes, "},{"code":"OP_PUSHDATA","type":"codeVoice"},{"type":"text","text":" up to 255 bytes, "},{"type":"codeVoice","code":"OP_PUSHDATA2"},{"type":"text","text":" for anything larger)."},{"type":"text","text":" "},{"type":"text","text":"Evaluating any other push causes the script to fail (BIP62 rule 3)."},{"text":" ","type":"text"},{"text":"In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).","type":"text"}],"role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimalData","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/bitcoin\/scriptconfigurarion\/minimaldata","type":"topic","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/minimalData","title":"minimalData"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/strictDER":{"abstract":[{"type":"text","text":"BIP66 (consensus) and BIP62 rule 1 (policy)"},{"type":"text","text":" "},{"text":"Passing a non-strict-DER signature to a checksig operation causes script failure.","type":"text"}],"role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strictDER","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/bitcoin\/scriptconfigurarion\/strictder","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/strictDER","title":"strictDER"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/payToScriptHash":{"fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"payToScriptHash","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/bitcoin\/scriptconfigurarion\/paytoscripthash","abstract":[{"type":"text","text":"BIP16"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/payToScriptHash","type":"topic","kind":"symbol","title":"payToScriptHash"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/discourageUpgradableNoOps":{"url":"\/documentation\/bitcoin\/scriptconfigurarion\/discourageupgradablenoops","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"discourageUpgradableNoOps","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Discourage use of NOPs reserved for upgrades (NOP1-10)"}],"title":"discourageUpgradableNoOps","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/discourageUpgradableNoOps","type":"topic"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/discourageUpgradableTaprootVersion":{"abstract":[{"type":"text","text":"Making unknown Taproot leaf versions non-standard."}],"role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"discourageUpgradableTaprootVersion","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"url":"\/documentation\/bitcoin\/scriptconfigurarion\/discourageupgradabletaprootversion","type":"topic","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/discourageUpgradableTaprootVersion","title":"discourageUpgradableTaprootVersion"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/strictEncoding":{"url":"\/documentation\/bitcoin\/scriptconfigurarion\/strictencoding","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/strictEncoding","kind":"symbol","abstract":[{"type":"text","text":"Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure."},{"type":"text","text":" "},{"text":"Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Not used or intended as a consensus rule."}],"title":"strictEncoding","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"strictEncoding","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"type":"topic","role":"symbol"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/taproot":{"abstract":[{"text":"BIP341, BIP342: Taproot\/Tapscript validation.","type":"text"}],"role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"taproot","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/bitcoin\/scriptconfigurarion\/taproot","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/taproot","title":"taproot"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/nullFail":{"type":"topic","url":"\/documentation\/bitcoin\/scriptconfigurarion\/nullfail","title":"nullFail","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"BIP141: Signature(s) must be null vector(s) if an OP_CHECKSIG or OP_CHECKMULTISIG is failed (for both pre-segregated witness script and P2WSH. See BIP146). Relay\/mining policy rule 3."}],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"nullFail","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/nullFail"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/init(strictDER:pushOnly:minimalData:lowS:cleanStack:nullDummy:strictEncoding:payToScriptHash:checkLockTimeVerify:checkSequenceVerify:discourageUpgradableNoOps:constantScriptCode:witness:witnessCompressedPublicKey:minimalIf:nullFail:discourageUpgradableWitnessProgram:taproot:discourageUpgradableTaprootVersion:discourageOpSuccess:discourageUpgradablePublicKeyType:)":{"abstract":[],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"strictDER","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"pushOnly","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"text":"minimalData","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"lowS","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"cleanStack"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"nullDummy"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"strictEncoding"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"text":"payToScriptHash","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"checkLockTimeVerify"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"checkSequenceVerify"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"discourageUpgradableNoOps"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"constantScriptCode"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"witness","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"text":"witnessCompressedPublicKey","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", "},{"text":"minimalIf","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"nullFail"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"text":"discourageUpgradableWitnessProgram","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"taproot"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"discourageUpgradableTaprootVersion","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"discourageOpSuccess","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"discourageUpgradablePublicKeyType","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"url":"\/documentation\/bitcoin\/scriptconfigurarion\/init(strictder:pushonly:minimaldata:lows:cleanstack:nulldummy:strictencoding:paytoscripthash:checklocktimeverify:checksequenceverify:discourageupgradablenoops:constantscriptcode:witness:witnesscompressedpublickey:minimalif:nullfail:discoura-6o1lx","type":"topic","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/init(strictDER:pushOnly:minimalData:lowS:cleanStack:nullDummy:strictEncoding:payToScriptHash:checkLockTimeVerify:checkSequenceVerify:discourageUpgradableNoOps:constantScriptCode:witness:witnessCompressedPublicKey:minimalIf:nullFail:discourageUpgradableWitnessProgram:taproot:discourageUpgradableTaprootVersion:discourageOpSuccess:discourageUpgradablePublicKeyType:)","title":"init(strictDER:pushOnly:minimalData:lowS:cleanStack:nullDummy:strictEncoding:payToScriptHash:checkLockTimeVerify:checkSequenceVerify:discourageUpgradableNoOps:constantScriptCode:witness:witnessCompressedPublicKey:minimalIf:nullFail:discourageUpgradableWitnessProgram:taproot:discourageUpgradableTaprootVersion:discourageOpSuccess:discourageUpgradablePublicKeyType:)"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/cleanStack":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/cleanStack","type":"topic","title":"cleanStack","abstract":[{"type":"text","text":"BIP62 rule 6"},{"type":"text","text":" "},{"text":"Require that only a single stack element remains after evaluation. Only to be used with P2SH.","type":"text"}],"fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"cleanStack","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoin\/scriptconfigurarion\/cleanstack"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/checkLockTimeVerify":{"abstract":[{"type":"text","text":"BIP65: Evaluate "},{"code":"OP_CHECKLOCKTIMEVERIFY","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/bitcoin\/scriptconfigurarion\/checklocktimeverify","type":"topic","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/checkLockTimeVerify","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"checkLockTimeVerify","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","title":"checkLockTimeVerify"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion/pushOnly":{"type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"pushOnly","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"BIP62 rule 2"},{"type":"text","text":" "},{"type":"text","text":"Using a non-push operator in the scriptSig causes script failure."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion\/pushOnly","url":"\/documentation\/bitcoin\/scriptconfigurarion\/pushonly","title":"pushOnly"},"doc://Bitcoin/documentation/Bitcoin/ScriptConfigurarion":{"navigatorTitle":[{"text":"ScriptConfigurarion","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/ScriptConfigurarion","url":"\/documentation\/bitcoin\/scriptconfigurarion","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ScriptConfigurarion","kind":"identifier"}],"abstract":[{"text":"Script verification flags represented by configuration options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}],"title":"ScriptConfigurarion"}}}