{"abstract":[{"text":"Start a Bitcoin node service, query it and control it with the command line utility.","type":"text"}],"seeAlsoSections":[{"title":"Essentials","generated":true,"identifiers":["doc:\/\/Bitcoin\/documentation\/Bitcoin\/GettingStarted","doc:\/\/Bitcoin\/documentation\/Bitcoin\/Building"],"anchor":"Essentials"}],"kind":"article","primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Bitcoin comes with two executables:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A client or "},{"type":"emphasis","inlineContent":[{"type":"text","text":"node"}]},{"type":"text","text":" service called "},{"code":"bcnode","type":"codeVoice"},{"text":".","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"A command line utility named ","type":"text"},{"code":"bcutil","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"They can be run in debug mode using ","type":"text"},{"type":"codeVoice","code":"swift run"},{"text":" or from Xcode on Mac. You can also use Docker to run them interactively or as standalone container images.","type":"text"}],"type":"paragraph"},{"text":"Run from the Swift command line","level":2,"type":"heading","anchor":"Run-from-the-Swift-command-line"},{"type":"paragraph","inlineContent":[{"text":"To start a node use ","type":"text"},{"type":"codeVoice","code":"swift run bcnode"},{"text":".","type":"text"}]},{"inlineContent":[{"text":"To check the node’s status use ","type":"text"},{"type":"codeVoice","code":"swift run bcutil status"},{"text":".","type":"text"}],"type":"paragraph"},{"anchor":"Build-and-run-executables-directly","type":"heading","level":2,"text":"Build and run executables directly"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To produce executables with "},{"code":"release","type":"codeVoice"},{"type":"text","text":" configuration use "},{"code":"swift build -c release","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"Now you can start a node with ","type":"text"},{"type":"codeVoice","code":".build\/release\/bcnode"},{"type":"text","text":" or use the utility with "},{"type":"codeVoice","code":".build\/release\/bcutil"},{"text":".","type":"text"}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Run-with-docker","text":"Run with docker"},{"anchor":"Interactive-container","level":3,"text":"Interactive container","type":"heading"},{"inlineContent":[{"type":"text","text":"To start an interactive container based on the official docker image use "},{"type":"codeVoice","code":"docker run --rm -it -v $PWD:\/opt\/swift-bitcoin swift"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"From there you can run all the commands from the previous section:","type":"text"}],"type":"paragraph"},{"syntax":"sh","type":"codeListing","code":["cd \/opt\/swift-bitcoin","swift run bcutil"]},{"text":"Build executable docker images","anchor":"Build-executable-docker-images","type":"heading","level":3},{"type":"paragraph","inlineContent":[{"text":"Build both executable images ","type":"text"},{"type":"codeVoice","code":"bcnode"},{"type":"text","text":" and "},{"code":"bcutil","type":"codeVoice"},{"type":"text","text":" from Swift Bitcoin’s project root:"}]},{"type":"codeListing","syntax":"sh","code":["docker build --target bcnode -t bcnode -f tools\/Dockerfile .","docker build --target bcutil -t bcutil -f tools\/Dockerfile ."]},{"type":"heading","anchor":"Simulate-a-muilt-node-network","text":"Simulate a muilt-node network","level":2},{"type":"paragraph","inlineContent":[{"text":"Docker can help connect multiple nodes together.","type":"text"}]},{"anchor":"Setup","text":"Setup","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"First create a docker network named "},{"code":"bitcoin-regtest","type":"codeVoice"},{"text":" using ","type":"text"},{"type":"codeVoice","code":"docker network create bitcoin-regtest"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"heading","level":3,"text":"Alice","anchor":"Alice"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Run Alice’s node using the docker image "},{"type":"codeVoice","code":"docker run --rm -it --network bitcoin-regtest --name alice bcnode -n regtest"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"On another terminal query the node’s status and request to start listening for peer-to-peer connections using ","type":"text"},{"code":"docker run --rm --network bitcoin-regtest bcutil -n regtest -h alice status","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"To make it easier to run further commands we can create an alias and change our terminal prompt:","type":"text"}]},{"type":"codeListing","syntax":"sh","code":["alias bcutil=\"docker run --rm --network bitcoin-regtest bcutil -n regtest -h alice\"","prompt=\"alice: \"","bcutil start-p2p"]},{"type":"heading","level":3,"text":"Bob","anchor":"Bob"},{"inlineContent":[{"type":"text","text":"On a new terminal window start Bob’s node with "},{"type":"codeVoice","code":"docker run --rm -it --network bitcoin-regtest --name bob bcnode -n regtest"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"And create an alias for Bob’s ","type":"text"},{"type":"codeVoice","code":"bcutil"},{"text":" command:","type":"text"}]},{"type":"codeListing","syntax":"sh","code":["alias bcutil=\"docker run --rm --network bitcoin-regtest bcutil -n regtest -h bob\"","prompt=\"bob: \""]},{"inlineContent":[{"type":"text","text":"Request Bob’s node to connect to Alice’s and check its status:"}],"type":"paragraph"},{"code":["bcutil connect -i alice","bcutil status"],"type":"codeListing","syntax":"sh"},{"inlineContent":[{"type":"text","text":"We can also enable Bob to receive connections with "},{"code":"bcutil start-p2p","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"On Alice’s terminal double check that a connection is active using "},{"code":"bcutil status","type":"codeVoice"},{"type":"text","text":"."}]},{"type":"heading","level":3,"anchor":"Carol-Bitcoin-Core","text":"Carol (Bitcoin Core)"},{"inlineContent":[{"text":"Adding Bitcoin Core to the mix can be done using a similar approach with ","type":"text"},{"isActive":true,"type":"reference","identifier":"https:\/\/github.com\/craigwrong\/bitcoin-lightning-node\/blob\/develop\/docker\/bitcoind\/Dockerfile"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Assuming you have "},{"type":"codeVoice","code":"bitcoind"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"bitcoin-cli"},{"type":"text","text":" built as docker images, you can start Bitcoin Core nodes in the same "},{"code":"regtest","type":"codeVoice"},{"text":" network as your Swift Bitcoin nodes:","type":"text"}],"type":"paragraph"},{"code":["docker run --name carol --rm -it --network bitcoin-regtest -v \/bitcoin_auth\/ bitcoind -chain=regtest -disablewallet -txindex -server -rpcallowip=0.0.0.0\/0 -rpcbind=0.0.0.0 -rpccookiefile=\/bitcoin_auth\/cookie"],"type":"codeListing","syntax":"sh"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We use a custom volume to store the authentication cookie which we read from when running the "},{"type":"codeVoice","code":"bitcoin-cli"},{"text":" image for which we’ll also create an alias:","type":"text"}]},{"syntax":"sh","code":["alias bcutil=\"docker run --rm --network bitcoin-regtest --volumes-from carol bitcoin-cli -regtest -rpcconnect=carol  -rpccookiefile=\/bitcoin_auth\/cookie\"","prompt=\"carol: \"","bitcoin-cli -getinfo"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"From Alice’s terminal you can connect to Carol’s Bitcoin Core instance using ","type":"text"},{"type":"codeVoice","code":"bcutil connect -i carol"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Verify connection on Carol’s node: "},{"code":"bitcoin-cli getpeerinfo","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"To connect from Bitcoin Core to Swift Bitcoin use ","type":"text"},{"type":"codeVoice","code":"bitcoin-cli addnode bob onetry"},{"text":".","type":"text"}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoin\/running"]}],"hierarchy":{"paths":[["doc:\/\/Bitcoin\/documentation\/Bitcoin"]]},"sections":[],"identifier":{"url":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/Running","interfaceLanguage":"swift"},"metadata":{"title":"Running","roleHeading":"Article","role":"article","modules":[{"name":"Swift Bitcoin"}]},"schemaVersion":{"patch":0,"major":0,"minor":3},"references":{"doc://Bitcoin/documentation/Bitcoin":{"kind":"symbol","abstract":[{"text":"Pure-Swift Bitcoin client implementation with full node capabilities.","type":"text"}],"url":"\/documentation\/bitcoin","type":"topic","role":"collection","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin","title":"Swift Bitcoin"},"doc://Bitcoin/documentation/Bitcoin/GettingStarted":{"type":"topic","role":"article","kind":"article","url":"\/documentation\/bitcoin\/gettingstarted","title":"Getting Started","abstract":[{"type":"text","text":"Swift Bitcoin let’s you integrate the different capabilities of the Bitcoin protocol into your own product."}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/GettingStarted"},"https://github.com/craigwrong/bitcoin-lightning-node/blob/develop/docker/bitcoind/Dockerfile":{"identifier":"https:\/\/github.com\/craigwrong\/bitcoin-lightning-node\/blob\/develop\/docker\/bitcoind\/Dockerfile","titleInlineContent":[{"type":"text","text":"docker executable images"}],"url":"https:\/\/github.com\/craigwrong\/bitcoin-lightning-node\/blob\/develop\/docker\/bitcoind\/Dockerfile","title":"docker executable images","type":"link"},"doc://Bitcoin/documentation/Bitcoin/Building":{"abstract":[{"text":"Build the Swift Bitcoin library and executables using the Swift Toolchain or Docker.","type":"text"}],"type":"topic","role":"article","kind":"article","url":"\/documentation\/bitcoin\/building","title":"Building","identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/Building"}}}