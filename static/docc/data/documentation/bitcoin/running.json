{"metadata":{"modules":[{"name":"Swift Bitcoin"}],"role":"article","roleHeading":"Article","title":"Running"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/Running"},"kind":"article","abstract":[{"type":"text","text":"Start a Bitcoin node service, query it and control it with the command line utility."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoin\/running"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/Bitcoin\/documentation\/Bitcoin"]]},"seeAlsoSections":[{"generated":true,"identifiers":["doc:\/\/Bitcoin\/documentation\/Bitcoin\/GettingStarted","doc:\/\/Bitcoin\/documentation\/Bitcoin\/Building"],"anchor":"Essentials","title":"Essentials"}],"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","type":"heading","level":1,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Swift Bitcoin comes with two executables:"}]},{"items":[{"content":[{"inlineContent":[{"text":"A client or ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"node","type":"text"}]},{"type":"text","text":" service called "},{"type":"codeVoice","code":"bcnode"},{"type":"text","text":"."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"A command line utility named ","type":"text"},{"type":"codeVoice","code":"bcutil"},{"type":"text","text":"."}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"They can be run in debug mode using "},{"type":"codeVoice","code":"swift run"},{"type":"text","text":" or from Xcode on Mac. You can also use Docker to run them interactively or as standalone container images."}],"type":"paragraph"},{"anchor":"Run-from-the-Swift-command-line","text":"Run from the Swift command line","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"To start a node use "},{"code":"swift run bcnode","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"To check the node’s status use ","type":"text"},{"code":"swift run bcutil status","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"level":2,"type":"heading","text":"Build and run executables directly","anchor":"Build-and-run-executables-directly"},{"inlineContent":[{"text":"To produce executables with ","type":"text"},{"code":"release","type":"codeVoice"},{"text":" configuration use ","type":"text"},{"code":"swift build -c release","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Now you can start a node with "},{"code":".build\/release\/bcnode","type":"codeVoice"},{"type":"text","text":" or use the utility with "},{"code":".build\/release\/bcutil","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Run with docker","level":2,"type":"heading","anchor":"Run-with-docker"},{"type":"heading","text":"Interactive container","anchor":"Interactive-container","level":3},{"inlineContent":[{"type":"text","text":"To start an interactive container based on the official docker image use "},{"type":"codeVoice","code":"docker run --rm -it -v $PWD:\/opt\/swift-bitcoin swift"},{"text":".","type":"text"}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"From there you can run all the commands from the previous section:","type":"text"}]},{"code":["cd \/opt\/swift-bitcoin","swift run bcutil"],"type":"codeListing","syntax":"sh"},{"type":"heading","anchor":"Build-executable-docker-images","level":3,"text":"Build executable docker images"},{"inlineContent":[{"type":"text","text":"Build both executable images "},{"type":"codeVoice","code":"bcnode"},{"type":"text","text":" and "},{"type":"codeVoice","code":"bcutil"},{"type":"text","text":" from Swift Bitcoin’s project root:"}],"type":"paragraph"},{"syntax":"sh","code":["docker build --target bcnode -t bcnode -f tools\/Dockerfile .","docker build --target bcutil -t bcutil -f tools\/Dockerfile ."],"type":"codeListing"},{"level":2,"type":"heading","text":"Simulate a muilt-node network","anchor":"Simulate-a-muilt-node-network"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Docker can help connect multiple nodes together."}]},{"level":3,"text":"Setup","type":"heading","anchor":"Setup"},{"type":"paragraph","inlineContent":[{"text":"First create a docker network named ","type":"text"},{"code":"bitcoin-regtest","type":"codeVoice"},{"type":"text","text":" using "},{"type":"codeVoice","code":"docker network create bitcoin-regtest"},{"text":".","type":"text"}]},{"level":3,"type":"heading","anchor":"Alice","text":"Alice"},{"type":"paragraph","inlineContent":[{"text":"Run Alice’s node using the docker image ","type":"text"},{"type":"codeVoice","code":"docker run --rm -it --network bitcoin-regtest --name alice bcnode -n regtest"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"On another terminal query the node’s status and request to start listening for peer-to-peer connections using ","type":"text"},{"code":"docker run --rm --network bitcoin-regtest bcutil -n regtest -h alice status","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"text":"To make it easier to run further commands we can create an alias and change our terminal prompt:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":"sh","code":["alias bcutil=\"docker run --rm --network bitcoin-regtest bcutil -n regtest -h alice\"","prompt=\"alice: \"","bcutil start-p2p"]},{"level":3,"type":"heading","anchor":"Bob","text":"Bob"},{"type":"paragraph","inlineContent":[{"text":"On a new terminal window start Bob’s node with ","type":"text"},{"code":"docker run --rm -it --network bitcoin-regtest --name bob bcnode -n regtest","type":"codeVoice"},{"type":"text","text":"."}]},{"inlineContent":[{"type":"text","text":"And create an alias for Bob’s "},{"type":"codeVoice","code":"bcutil"},{"type":"text","text":" command:"}],"type":"paragraph"},{"code":["alias bcutil=\"docker run --rm --network bitcoin-regtest bcutil -n regtest -h bob\"","prompt=\"bob: \""],"syntax":"sh","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Request Bob’s node to connect to Alice’s and check its status:"}]},{"type":"codeListing","code":["bcutil connect -i alice","bcutil status"],"syntax":"sh"},{"type":"paragraph","inlineContent":[{"text":"We can also enable Bob to receive connections with ","type":"text"},{"type":"codeVoice","code":"bcutil start-p2p"},{"text":".","type":"text"}]},{"inlineContent":[{"type":"text","text":"On Alice’s terminal double check that a connection is active using "},{"type":"codeVoice","code":"bcutil status"},{"type":"text","text":"."}],"type":"paragraph"},{"text":"Carol (Bitcoin Core)","level":3,"anchor":"Carol-Bitcoin-Core","type":"heading"},{"inlineContent":[{"text":"Adding Bitcoin Core to the mix can be done using a similar approach with ","type":"text"},{"identifier":"https:\/\/github.com\/craigwrong\/bitcoin-lightning-node\/blob\/develop\/docker\/bitcoind\/Dockerfile","type":"reference","isActive":true},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Assuming you have ","type":"text"},{"type":"codeVoice","code":"bitcoind"},{"type":"text","text":" and "},{"type":"codeVoice","code":"bitcoin-cli"},{"type":"text","text":" built as docker images, you can start Bitcoin Core nodes in the same "},{"type":"codeVoice","code":"regtest"},{"type":"text","text":" network as your Swift Bitcoin nodes:"}]},{"syntax":"sh","code":["docker run --name carol --rm -it --network bitcoin-regtest -v \/bitcoin_auth\/ bitcoind -chain=regtest -disablewallet -txindex -server -rpcallowip=0.0.0.0\/0 -rpcbind=0.0.0.0 -rpccookiefile=\/bitcoin_auth\/cookie"],"type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"We use a custom volume to store the authentication cookie which we read from when running the "},{"code":"bitcoin-cli","type":"codeVoice"},{"text":" image for which we’ll also create an alias:","type":"text"}]},{"syntax":"sh","code":["alias bcutil=\"docker run --rm --network bitcoin-regtest --volumes-from carol bitcoin-cli -regtest -rpcconnect=carol  -rpccookiefile=\/bitcoin_auth\/cookie\"","prompt=\"carol: \"","bitcoin-cli -getinfo"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"From Alice’s terminal you can connect to Carol’s Bitcoin Core instance using "},{"code":"bcutil connect -i carol","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"text":"Verify connection on Carol’s node: ","type":"text"},{"type":"codeVoice","code":"bitcoin-cli getpeerinfo"},{"type":"text","text":"."}]},{"inlineContent":[{"text":"To connect from Bitcoin Core to Swift Bitcoin use ","type":"text"},{"code":"bitcoin-cli addnode bob onetry","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"references":{"doc://Bitcoin/documentation/Bitcoin/GettingStarted":{"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/GettingStarted","type":"topic","abstract":[{"text":"Swift Bitcoin let’s you integrate the different capabilities of the Bitcoin protocol into your own product.","type":"text"}],"title":"Getting Started","kind":"article","role":"article","url":"\/documentation\/bitcoin\/gettingstarted"},"doc://Bitcoin/documentation/Bitcoin/Building":{"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin\/Building","url":"\/documentation\/bitcoin\/building","title":"Building","role":"article","abstract":[{"text":"Build the Swift Bitcoin library and executables using the Swift Toolchain or Docker.","type":"text"}],"kind":"article","type":"topic"},"doc://Bitcoin/documentation/Bitcoin":{"role":"collection","title":"Swift Bitcoin","type":"topic","abstract":[{"text":"Pure-Swift Bitcoin client implementation with full node capabilities.","type":"text"}],"identifier":"doc:\/\/Bitcoin\/documentation\/Bitcoin","url":"\/documentation\/bitcoin","kind":"symbol"},"https://github.com/craigwrong/bitcoin-lightning-node/blob/develop/docker/bitcoind/Dockerfile":{"titleInlineContent":[{"type":"text","text":"docker executable images"}],"identifier":"https:\/\/github.com\/craigwrong\/bitcoin-lightning-node\/blob\/develop\/docker\/bitcoind\/Dockerfile","title":"docker executable images","url":"https:\/\/github.com\/craigwrong\/bitcoin-lightning-node\/blob\/develop\/docker\/bitcoind\/Dockerfile","type":"link"}}}