{"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoinutility\/ectowif\/main(_:)"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"main"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"kind":"internalParam","text":"arguments"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"text":"]?)","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"externalID":"s:14ArgumentParser15ParsableCommandPAAE4mainyySaySSGSgFZ::SYNTHESIZED::s:14BitcoinUtility7ECToWIFV","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"main","kind":"identifier"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"]?)","kind":"text"}],"roleHeading":"Type Method","remoteSource":{"fileName":"ParsableCommand.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/.build\/checkouts\/swift-argument-parser\/Sources\/ArgumentParser\/Parsable%20Types\/ParsableCommand.swift#L142"},"symbolKind":"method","modules":[{"name":"Bitcoin Utility (bcutil)","relatedModules":["ArgumentParser"]}],"role":"symbol","extendedModule":"ArgumentParser","title":"main(_:)"},"hierarchy":{"paths":[["doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/ParsableCommand-Implementations"]]},"identifier":{"url":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/main(_:)","interfaceLanguage":"swift"},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"ParsableCommand.main(_:)"},{"text":".","type":"text"}],"references":{"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ECToWIF","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"Converts a raw private key to the Wallet Interchange Format (WIF).","type":"text"}],"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF","navigatorTitle":[{"text":"ECToWIF","kind":"identifier"}],"url":"\/documentation\/bitcoinutility\/ectowif","role":"symbol","title":"ECToWIF"},"doc://BitcoinUtility/documentation/BitcoinUtility":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","url":"\/documentation\/bitcoinutility","title":"Bitcoin Utility (bcutil)","abstract":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"bcutil"},{"type":"text","text":" command control a running Bitcoin node instance or perform off-chain operations."}],"role":"collection","type":"topic","kind":"symbol"},"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF/main(_:)":{"title":"main(_:)","type":"topic","url":"\/documentation\/bitcoinutility\/ectowif\/main(_:)","role":"symbol","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/main(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"kind":"text","text":"(["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"]?)"}],"abstract":[],"kind":"symbol"},"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF/ParsableCommand-Implementations":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/ParsableCommand-Implementations","url":"\/documentation\/bitcoinutility\/ectowif\/parsablecommand-implementations","kind":"article","abstract":[],"role":"collectionGroup","title":"ParsableCommand Implementations","type":"topic"}}}