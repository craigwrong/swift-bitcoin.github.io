{"identifier":{"url":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/main(_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"text":"arguments","kind":"internalParam"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"]?)","kind":"text"}]}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoinutility\/ectowif\/main(_:)"]}],"hierarchy":{"paths":[["doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/ParsableCommand-Implementations"]]},"metadata":{"title":"main(_:)","symbolKind":"method","roleHeading":"Type Method","externalID":"s:14ArgumentParser15ParsableCommandPAAE4mainyySaySSGSgFZ::SYNTHESIZED::s:14BitcoinUtility7ECToWIFV","modules":[{"name":"Bitcoin Utility (bcutil)","relatedModules":["ArgumentParser"]}],"extendedModule":"ArgumentParser","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"main"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"]?)","kind":"text"}],"remoteSource":{"url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/.build\/checkouts\/swift-argument-parser\/Sources\/ArgumentParser\/Parsable%20Types\/ParsableCommand.swift#L142","fileName":"ParsableCommand.swift"}},"abstract":[{"type":"text","text":"Inherited from "},{"code":"ParsableCommand.main(_:)","type":"codeVoice"},{"type":"text","text":"."}],"sections":[],"references":{"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF/main(_:)":{"title":"main(_:)","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/main(_:)","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":"]?)"}],"kind":"symbol","abstract":[],"url":"\/documentation\/bitcoinutility\/ectowif\/main(_:)"},"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF/ParsableCommand-Implementations":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/ParsableCommand-Implementations","role":"collectionGroup","type":"topic","kind":"article","title":"ParsableCommand Implementations","abstract":[],"url":"\/documentation\/bitcoinutility\/ectowif\/parsablecommand-implementations"},"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF":{"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ECToWIF"}],"abstract":[{"type":"text","text":"Converts a raw private key to the Wallet Interchange Format (WIF)."}],"url":"\/documentation\/bitcoinutility\/ectowif","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF","role":"symbol","navigatorTitle":[{"text":"ECToWIF","kind":"identifier"}],"kind":"symbol","title":"ECToWIF"},"doc://BitcoinUtility/documentation/BitcoinUtility":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","abstract":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"bcutil"},{"type":"text","text":" command control a running Bitcoin node instance or perform off-chain operations."}],"title":"Bitcoin Utility (bcutil)","type":"topic","role":"collection","url":"\/documentation\/bitcoinutility","kind":"symbol"}}}