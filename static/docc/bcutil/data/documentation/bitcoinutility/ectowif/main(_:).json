{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoinutility\/ectowif\/main(_:)"]}],"metadata":{"title":"main(_:)","externalID":"s:14ArgumentParser15ParsableCommandPAAE4mainyySaySSGSgFZ::SYNTHESIZED::s:14BitcoinUtility7ECToWIFV","remoteSource":{"fileName":"ParsableCommand.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/.build\/checkouts\/swift-argument-parser\/Sources\/ArgumentParser\/Parsable%20Types\/ParsableCommand.swift#L142"},"symbolKind":"method","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"main","kind":"identifier"},{"text":"([","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"]?)","kind":"text"}],"extendedModule":"ArgumentParser","roleHeading":"Type Method","modules":[{"name":"Bitcoin Utility (bcutil)","relatedModules":["ArgumentParser"]}],"role":"symbol"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/main(_:)"},"hierarchy":{"paths":[["doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/ParsableCommand-Implementations"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"main","kind":"identifier"},{"kind":"text","text":"("},{"text":"_","kind":"externalParam"},{"kind":"text","text":" "},{"kind":"internalParam","text":"arguments"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"]?)","kind":"text"}]}],"kind":"declarations"}],"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ParsableCommand.main(_:)"},{"type":"text","text":"."}],"references":{"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF/main(_:)":{"role":"symbol","url":"\/documentation\/bitcoinutility\/ectowif\/main(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"]?)"}],"title":"main(_:)","type":"topic","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/main(_:)","abstract":[]},"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ECToWIF","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ECToWIF"}],"title":"ECToWIF","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF","abstract":[{"text":"Converts a raw private key to the Wallet Interchange Format (WIF).","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/bitcoinutility\/ectowif","kind":"symbol"},"doc://BitcoinUtility/documentation/BitcoinUtility":{"kind":"symbol","role":"collection","url":"\/documentation\/bitcoinutility","type":"topic","title":"Bitcoin Utility (bcutil)","abstract":[{"type":"text","text":"Use the "},{"code":"bcutil","type":"codeVoice"},{"text":" command control a running Bitcoin node instance or perform off-chain operations.","type":"text"}],"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility"},"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF/ParsableCommand-Implementations":{"url":"\/documentation\/bitcoinutility\/ectowif\/parsablecommand-implementations","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/ParsableCommand-Implementations","abstract":[],"title":"ParsableCommand Implementations","kind":"article","role":"collectionGroup","type":"topic"}}}