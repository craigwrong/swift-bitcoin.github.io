{"hierarchy":{"paths":[["doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/ParsableCommand-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"ParsableCommand.main(_:)"},{"type":"text","text":"."}],"metadata":{"roleHeading":"Type Method","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"kind":"text","text":"(["},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":"]?)"}],"symbolKind":"method","extendedModule":"ArgumentParser","modules":[{"name":"Bitcoin Utility (bcutil)","relatedModules":["ArgumentParser"]}],"remoteSource":{"url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/.build\/checkouts\/swift-argument-parser\/Sources\/ArgumentParser\/Parsable%20Types\/ParsableCommand.swift#L142","fileName":"ParsableCommand.swift"},"externalID":"s:14ArgumentParser15ParsableCommandPAAE4mainyySaySSGSgFZ::SYNTHESIZED::s:14BitcoinUtility7ECToWIFV","title":"main(_:)"},"variants":[{"paths":["\/documentation\/bitcoinutility\/ectowif\/main(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"arguments","kind":"internalParam"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]?)","kind":"text"}],"languages":["swift"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/main(_:)"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"references":{"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF/main(_:)":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/main(_:)","role":"symbol","type":"topic","abstract":[],"url":"\/documentation\/bitcoinutility\/ectowif\/main(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"main"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]?)"}],"kind":"symbol","title":"main(_:)"},"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF/ParsableCommand-Implementations":{"abstract":[],"role":"collectionGroup","title":"ParsableCommand Implementations","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF\/ParsableCommand-Implementations","type":"topic","url":"\/documentation\/bitcoinutility\/ectowif\/parsablecommand-implementations","kind":"article"},"doc://BitcoinUtility/documentation/BitcoinUtility":{"abstract":[{"text":"Use the ","type":"text"},{"code":"bcutil","type":"codeVoice"},{"text":" command control a running Bitcoin node instance or perform off-chain operations.","type":"text"}],"url":"\/documentation\/bitcoinutility","kind":"symbol","role":"collection","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","title":"Bitcoin Utility (bcutil)","type":"topic"},"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF":{"navigatorTitle":[{"text":"ECToWIF","kind":"identifier"}],"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF","title":"ECToWIF","url":"\/documentation\/bitcoinutility\/ectowif","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ECToWIF","kind":"identifier"}],"abstract":[{"text":"Converts a raw private key to the Wallet Interchange Format (WIF).","type":"text"}],"type":"topic","kind":"symbol","role":"symbol"}}}