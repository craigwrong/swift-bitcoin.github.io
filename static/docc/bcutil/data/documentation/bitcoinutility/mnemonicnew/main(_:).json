{"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew\/ParsableCommand-Implementations"]]},"abstract":[{"text":"Inherited from ","type":"text"},{"type":"codeVoice","code":"ParsableCommand.main(_:)"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew\/main(_:)","interfaceLanguage":"swift"},"metadata":{"externalID":"s:14ArgumentParser15ParsableCommandPAAE4mainyySaySSGSgFZ::SYNTHESIZED::s:14BitcoinUtility11MnemonicNewV","role":"symbol","modules":[{"relatedModules":["ArgumentParser"],"name":"Bitcoin Utility (bcutil)"}],"title":"main(_:)","extendedModule":"ArgumentParser","roleHeading":"Type Method","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"text":"([","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"]?)","kind":"text"}],"remoteSource":{"fileName":"ParsableCommand.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/.build\/checkouts\/swift-argument-parser\/Sources\/ArgumentParser\/Parsable%20Types\/ParsableCommand.swift#L142"},"symbolKind":"method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/bitcoinutility\/mnemonicnew\/main(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"arguments","kind":"internalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]?)"}],"platforms":["macOS"]}]}],"references":{"doc://BitcoinUtility/documentation/BitcoinUtility/MnemonicNew":{"abstract":[{"text":"Create a mnemonic seed (BIP39) from entropy.","type":"text"}],"title":"MnemonicNew","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MnemonicNew"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"MnemonicNew","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/bitcoinutility\/mnemonicnew","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew"},"doc://BitcoinUtility/documentation/BitcoinUtility/MnemonicNew/main(_:)":{"url":"\/documentation\/bitcoinutility\/mnemonicnew\/main(_:)","kind":"symbol","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew\/main(_:)","role":"symbol","abstract":[],"title":"main(_:)","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"main","kind":"identifier"},{"kind":"text","text":"(["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]?)","kind":"text"}]},"doc://BitcoinUtility/documentation/BitcoinUtility":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","url":"\/documentation\/bitcoinutility","title":"Bitcoin Utility (bcutil)","abstract":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"bcutil"},{"type":"text","text":" command control a running Bitcoin node instance or perform off-chain operations."}],"role":"collection","type":"topic","kind":"symbol"},"doc://BitcoinUtility/documentation/BitcoinUtility/MnemonicNew/ParsableCommand-Implementations":{"url":"\/documentation\/bitcoinutility\/mnemonicnew\/parsablecommand-implementations","kind":"article","abstract":[],"role":"collectionGroup","title":"ParsableCommand Implementations","type":"topic","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew\/ParsableCommand-Implementations"}}}