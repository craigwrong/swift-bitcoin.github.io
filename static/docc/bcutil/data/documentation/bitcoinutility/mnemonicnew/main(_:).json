{"metadata":{"externalID":"s:14ArgumentParser15ParsableCommandPAAE4mainyySaySSGSgFZ::SYNTHESIZED::s:14BitcoinUtility11MnemonicNewV","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"main"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"]?)","kind":"text"}],"roleHeading":"Type Method","title":"main(_:)","modules":[{"relatedModules":["ArgumentParser"],"name":"Bitcoin Utility (bcutil)"}],"symbolKind":"method","extendedModule":"ArgumentParser","role":"symbol","remoteSource":{"fileName":"ParsableCommand.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/.build\/checkouts\/swift-argument-parser\/Sources\/ArgumentParser\/Parsable%20Types\/ParsableCommand.swift#L142"}},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"ParsableCommand.main(_:)"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"main","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"arguments","kind":"internalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"text":"]?)","kind":"text"}],"languages":["swift"],"platforms":["macOS"]}]}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew\/ParsableCommand-Implementations"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew\/main(_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoinutility\/mnemonicnew\/main(_:)"]}],"references":{"doc://BitcoinUtility/documentation/BitcoinUtility":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"bcutil"},{"type":"text","text":" command control a running Bitcoin node instance or perform off-chain operations."}],"type":"topic","url":"\/documentation\/bitcoinutility","title":"Bitcoin Utility (bcutil)"},"doc://BitcoinUtility/documentation/BitcoinUtility/MnemonicNew/ParsableCommand-Implementations":{"role":"collectionGroup","title":"ParsableCommand Implementations","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew\/ParsableCommand-Implementations","type":"topic","abstract":[],"url":"\/documentation\/bitcoinutility\/mnemonicnew\/parsablecommand-implementations","kind":"article"},"doc://BitcoinUtility/documentation/BitcoinUtility/MnemonicNew":{"url":"\/documentation\/bitcoinutility\/mnemonicnew","title":"MnemonicNew","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MnemonicNew"}],"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew","abstract":[{"type":"text","text":"Create a mnemonic seed (BIP39) from entropy."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"MnemonicNew","kind":"identifier"}]},"doc://BitcoinUtility/documentation/BitcoinUtility/MnemonicNew/main(_:)":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"main","kind":"identifier"},{"kind":"text","text":"(["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"]?)"}],"abstract":[],"title":"main(_:)","url":"\/documentation\/bitcoinutility\/mnemonicnew\/main(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew\/main(_:)","kind":"symbol"}}}