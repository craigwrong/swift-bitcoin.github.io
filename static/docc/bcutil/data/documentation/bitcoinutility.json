{"topicSections":[{"title":"Essentials","anchor":"Essentials","identifiers":["doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/Node"]},{"title":"Structures","anchor":"Structures","identifiers":["doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/AddressDecode","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/BitcoinUtility","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/Connect","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/CreateTransaction","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECNew","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToAddress","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToPublic","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/HDNew","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/HDPrivate","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/HDPublic","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/HDToPublic","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MessageSign","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MessageVerify","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicToSeed","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ScriptDecode","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ScriptToAddress","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/Seed","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/SendRPC","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/SignTransaction","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/StartP2P","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/WIFToEC"],"generated":true},{"generated":true,"identifiers":["doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/launchRPCClient(host:port:method:params:)"],"anchor":"Functions","title":"Functions"},{"anchor":"Extended-Modules","generated":true,"title":"Extended Modules","identifiers":["doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/BitcoinBase","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/BitcoinTransport","doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/BitcoinWallet"]}],"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","level":2,"type":"heading"},{"style":"note","type":"aside","name":"Swift Bitcoin","content":[{"inlineContent":[{"type":"text","text":"This tool is part of the "},{"type":"reference","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","isActive":true},{"type":"text","text":" suite."}],"type":"paragraph"}]},{"type":"paragraph","inlineContent":[{"text":"We can use ","type":"text"},{"code":"bcutil","type":"codeVoice"},{"text":" to perform both offline operations as well as issuing RPC commands to a runing ","type":"text"},{"type":"codeVoice","code":"bcnode"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example shows how we can start from an empty blockchain, generate one empty block and then create, sign, submit to the mempool and mine a transaction."}]},{"code":["","# Generate a new secret key","","bcutil ec-new","24516525843cb692a1ccb18ecd1b3b6c71352614d3aef455a007592910acdabd","","","# Derive a public key from the secret key ","","bcutil ec-to-public 24516525843cb692a1ccb18ecd1b3b6c71352614d3aef455a007592910acdabd","029a3865b2488e2fee75336d1048c1d0795a088368a0caa4adc076425c90227bc3","","","# Generate a block with the reward going to our public key","","bcutil generate-to 029a3865b2488e2fee75336d1048c1d0795a088368a0caa4adc076425c90227bc3","3b1517aaf42737c482b489b15cdf80b57f9f517025ab7be65d104f8fecc1345a","","","# Check our new block's coinbase transaction","","bcutil get-block 3b1517aaf42737c482b489b15cdf80b57f9f517025ab7be65d104f8fecc1345a","{","  \"identifier\" : \"3b1517aaf42737c482b489b15cdf80b57f9f517025ab7be65d104f8fecc1345a\",","  \"previous\" : \"0f9188f13cb7b2c71f2a335e3a4fc328bf5beb436012afca590b1a11466e2206\",","  \"transactions\" : [","    \"71847446d61f87f01ea98e4c32f3ecd7a509cdb912c04a13a4b20736af5a0d49\"","  ]","}","","","# Find out what the raw first output in our funding transaction is. We will need it later to sign our spending transaction.","","bcutil get-transaction 71847446d61f87f01ea98e4c32f3ecd7a509cdb912c04a13a4b20736af5a0d49","{","  \"identifier\" : \"71847446d61f87f01ea98e4c32f3ecd7a509cdb912c04a13a4b20736af5a0d49\",","  \"inputs\" : [","    {","      \"output\" : 4294967295,","      \"transaction\" : \"0000000000000000000000000000000000000000000000000000000000000000\"","    }","  ],","  \"outputs\" : [","    {","      \"amount\" : 5000000000,","      \"raw\" : \"00f2052a010000001976a914df4bdfc1f4a0eb9d08a22598c69a15c9989adc8688ac\",","      \"script\" : \"76a914df4bdfc1f4a0eb9d08a22598c69a15c9989adc8688ac\"","    },","    {","      \"amount\" : 0,","      \"raw\" : \"0000000000000000266a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf9\",","      \"script\" : \"6a24aa21a9ede2f61c3f71d1defd3fa999dfa36953755c690689799962b48bebd836974e8cf9\"","    }","  ]","}","","","# Get an address for our previously derived public key","","bcutil ec-to-address 029a3865b2488e2fee75336d1048c1d0795a088368a0caa4adc076425c90227bc3","1MMgabnpMVKTnYXwJfupDJRpWNJmUay8cP","","","# Create a new transaction spending 100 sats from that coinbase transaction into our generated address","","bcutil create-transaction -i 71847446d61f87f01ea98e4c32f3ecd7a509cdb912c04a13a4b20736af5a0d49 -o 0 -a 1MMgabnpMVKTnYXwJfupDJRpWNJmUay8cP -s 100","0100000001490d5aaf3607b2a4134ac012b9cd09a5d7ecf3324c8ea91ef0871fd6467484710000000000ffffffff0164000000000000001976a914df4bdfc1f4a0eb9d08a22598c69a15c9989adc8688ac00000000","","","# Now sign the transaction's only input using the secret key. We are providing the raw output that we are spending. ","","bcutil sign-transaction -i 0 -p 00f2052a010000001976a914df4bdfc1f4a0eb9d08a22598c69a15c9989adc8688ac -s 24516525843cb692a1ccb18ecd1b3b6c71352614d3aef455a007592910acdabd 0100000001490d5aaf3607b2a4134ac012b9cd09a5d7ecf3324c8ea91ef0871fd6467484710000000000ffffffff0164000000000000001976a914df4bdfc1f4a0eb9d08a22598c69a15c9989adc8688ac00000000","","0100000001490d5aaf3607b2a4134ac012b9cd09a5d7ecf3324c8ea91ef0871fd646748471000000006a47304402207ff327117905eddf0501d835a6653a006aaa41deee0ad1b6b0c3e51b8c831dca022011c848177a5c7b527476f0f28edc119233dbaa6729570da9f8a747bcd678c3a20121029a3865b2488e2fee75336d1048c1d0795a088368a0caa4adc076425c90227bc3ffffffff0164000000000000001976a914df4bdfc1f4a0eb9d08a22598c69a15c9989adc8688ac00000000","","","# Verify our mempool is empty before sending the transaction","","bcutil get-mempool","{","  \"size\" : 0,","  \"transactions\" : []","}","","","# Send the signed transaction","","bcutil send-transaction 0100000001490d5aaf3607b2a4134ac012b9cd09a5d7ecf3324c8ea91ef0871fd646748471000000006a47304402207ff327117905eddf0501d835a6653a006aaa41deee0ad1b6b0c3e51b8c831dca022011c848177a5c7b527476f0f28edc119233dbaa6729570da9f8a747bcd678c3a20121029a3865b2488e2fee75336d1048c1d0795a088368a0caa4adc076425c90227bc3ffffffff0164000000000000001976a914df4bdfc1f4a0eb9d08a22598c69a15c9989adc8688ac00000000","","","# Verify that the transaction has been accepted into the mempool","","bcutil get-mempool","{","  \"size\" : 1,","  \"transactions\" : [","    \"f6071f3eec4b4484994501d353d65e47d8384bd891e08500b5d54856e437ea13\"","  ]","}","","","# Generate another block","","bcutil generate-to 03156c29378949152f270170589e4bb3e006bf57d908f7a173edf9fa2956cae388 ","328b649efac1dacf329aeb86d59ef99e2e2b2578b1137b3da1ef94c3c0535708","","","# Check that the mempool has been emptied again","","bcutil get-mempool","{","  \"size\" : 0,","  \"transactions\" : []","}","","","# Check that the transaction is now part of the latest block","","bcutil get-block 328b649efac1dacf329aeb86d59ef99e2e2b2578b1137b3da1ef94c3c0535708","{","  \"identifier\" : \"328b649efac1dacf329aeb86d59ef99e2e2b2578b1137b3da1ef94c3c0535708\",","  \"previous\" : \"3b1517aaf42737c482b489b15cdf80b57f9f517025ab7be65d104f8fecc1345a\",","  \"transactions\" : [","    \"218826825d34db191f89e3079f394dfdf7c227017e6423be17a78d7c5d40ba5c\",","    \"f6071f3eec4b4484994501d353d65e47d8384bd891e08500b5d54856e437ea13\"","  ]","}"],"syntax":"sh","type":"codeListing"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use "},{"type":"codeVoice","code":"--help"},{"type":"text","text":" to find out about other subcommands and general usage."}]}]}],"kind":"symbol","variants":[{"paths":["\/documentation\/bitcoinutility"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","interfaceLanguage":"swift"},"seeAlsoSections":[{"identifiers":["https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","https:\/\/swift-bitcoin.github.io\/docc\/crypto\/documentation\/bitcoincrypto\/","https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"],"title":"Related Documentation","anchor":"Related-Documentation"}],"metadata":{"modules":[{"name":"Bitcoin Utility (bcutil)"}],"role":"collection","externalID":"BitcoinUtility","roleHeading":"Swift Bitcoin Tool","symbolKind":"module","title":"Bitcoin Utility (bcutil)"},"abstract":[{"text":"Use the ","type":"text"},{"code":"bcutil","type":"codeVoice"},{"type":"text","text":" command control a running Bitcoin node instance or perform off-chain operations."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"hierarchy":{"paths":[[]]},"references":{"https://swift-bitcoin.github.io/docc/transport/documentation/bitcointransport/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","titleInlineContent":[{"type":"text","text":"Transport Library"}],"title":"Transport Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","type":"link"},"doc://BitcoinUtility/documentation/BitcoinUtility/MessageSign":{"title":"MessageSign","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MessageSign","navigatorTitle":[{"text":"MessageSign","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"Signs a message with a private key. The signature is encoded in Base64 format.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"MessageSign","kind":"identifier"}],"url":"\/documentation\/bitcoinutility\/messagesign"},"doc://BitcoinUtility/documentation/BitcoinUtility/ECNew":{"kind":"symbol","title":"ECNew","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ECNew"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ECNew"}],"abstract":[{"type":"text","text":"Generates a new secret key suitable for ECDSA signing."}],"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECNew","url":"\/documentation\/bitcoinutility\/ecnew"},"doc://BitcoinUtility/documentation/BitcoinUtility/HDPublic":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/HDPublic","url":"\/documentation\/bitcoinutility\/hdpublic","role":"symbol","navigatorTitle":[{"text":"HDPublic","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HDPublic"}],"abstract":[{"type":"text","text":"Derives a child HD (BIP32) public key from another HD public key."}],"kind":"symbol","type":"topic","title":"HDPublic"},"doc://BitcoinUtility/documentation/BitcoinUtility/WIFToEC":{"kind":"symbol","abstract":[{"text":"Converts a secret key in the Wallet Interchange Format (WIF) to hex raw format.","type":"text"}],"type":"topic","url":"\/documentation\/bitcoinutility\/wiftoec","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WIFToEC","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"WIFToEC","kind":"identifier"}],"title":"WIFToEC","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/WIFToEC"},"doc://BitcoinUtility/documentation/BitcoinUtility/CreateTransaction":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CreateTransaction"}],"type":"topic","title":"CreateTransaction","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/CreateTransaction","url":"\/documentation\/bitcoinutility\/createtransaction","abstract":[{"type":"text","text":"Creates an unsigned raw transaction with the specified inputs and outputs."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"CreateTransaction","kind":"identifier"}],"kind":"symbol"},"doc://BitcoinUtility/documentation/BitcoinUtility/StartP2P":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/StartP2P","title":"StartP2P","navigatorTitle":[{"kind":"identifier","text":"StartP2P"}],"type":"topic","abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"StartP2P"}],"url":"\/documentation\/bitcoinutility\/startp2p","kind":"symbol"},"doc://BitcoinUtility/documentation/BitcoinUtility/BitcoinWallet":{"type":"topic","abstract":[],"kind":"symbol","role":"collection","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/BitcoinWallet","url":"\/documentation\/bitcoinutility\/bitcoinwallet","title":"BitcoinWallet"},"doc://BitcoinUtility/documentation/BitcoinUtility/ScriptDecode":{"navigatorTitle":[{"text":"ScriptDecode","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScriptDecode"}],"type":"topic","role":"symbol","abstract":[{"text":"Decodes a script into its assembly textual representation.","type":"text"}],"url":"\/documentation\/bitcoinutility\/scriptdecode","kind":"symbol","title":"ScriptDecode","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ScriptDecode"},"doc://BitcoinUtility/documentation/BitcoinUtility/launchRPCClient(host:port:method:params:)":{"kind":"symbol","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/launchRPCClient(host:port:method:params:)","url":"\/documentation\/bitcoinutility\/launchrpcclient(host:port:method:params:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"launchRPCClient","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"host"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"port","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"text":"method","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"params"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7JSONRPC10JSONObjectO","text":"JSONObject","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"title":"launchRPCClient(host:port:method:params:)","type":"topic","abstract":[],"role":"symbol"},"doc://BitcoinUtility/documentation/BitcoinUtility/MessageVerify":{"type":"topic","navigatorTitle":[{"text":"MessageVerify","kind":"identifier"}],"title":"MessageVerify","role":"symbol","url":"\/documentation\/bitcoinutility\/messageverify","kind":"symbol","abstract":[{"text":"Verifies a message signatue using the specified Bitcoin address.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MessageVerify"}],"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MessageVerify"},"doc://BitcoinUtility/documentation/BitcoinUtility/HDNew":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/HDNew","navigatorTitle":[{"text":"HDNew","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HDNew","kind":"identifier"}],"url":"\/documentation\/bitcoinutility\/hdnew","abstract":[{"type":"text","text":"Generates a new HD wallet master key from seed."}],"kind":"symbol","title":"HDNew","type":"topic"},"doc://BitcoinUtility/documentation/BitcoinUtility/Node":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/Node","navigatorTitle":[{"text":"Node","kind":"identifier"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Node"}],"url":"\/documentation\/bitcoinutility\/node","abstract":[],"kind":"symbol","title":"Node","type":"topic"},"doc://BitcoinUtility/documentation/BitcoinUtility/BitcoinUtility":{"kind":"symbol","title":"BitcoinUtility","type":"topic","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/BitcoinUtility","url":"\/documentation\/bitcoinutility\/bitcoinutility","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"BitcoinUtility","kind":"identifier"}],"navigatorTitle":[{"text":"BitcoinUtility","kind":"identifier"}],"role":"symbol"},"https://swift-bitcoin.github.io/docc/wallet/documentation/bitcoinwallet/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","titleInlineContent":[{"type":"text","text":"Wallet Library"}],"title":"Wallet Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","type":"link"},"doc://BitcoinUtility/documentation/BitcoinUtility/ECToAddress":{"abstract":[{"type":"text","text":"Creates an address from the provided public key."}],"title":"ECToAddress","url":"\/documentation\/bitcoinutility\/ectoaddress","type":"topic","navigatorTitle":[{"text":"ECToAddress","kind":"identifier"}],"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToAddress","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECToAddress","kind":"identifier"}],"kind":"symbol"},"https://swift-bitcoin.github.io/docc/crypto/documentation/bitcoincrypto/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/crypto\/documentation\/bitcoincrypto\/","titleInlineContent":[{"type":"text","text":"Crypto Library"}],"title":"Crypto Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/crypto\/documentation\/bitcoincrypto\/","type":"link"},"doc://BitcoinUtility/documentation/BitcoinUtility/HDToPublic":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/HDToPublic","navigatorTitle":[{"text":"HDToPublic","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HDToPublic","kind":"identifier"}],"url":"\/documentation\/bitcoinutility\/hdtopublic","abstract":[{"type":"text","text":"Converts a BIP32 extended private key into its corresponding extended public key, also known as a neutered key."}],"kind":"symbol","title":"HDToPublic","type":"topic"},"doc://BitcoinUtility/documentation/BitcoinUtility/HDPrivate":{"role":"symbol","url":"\/documentation\/bitcoinutility\/hdprivate","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HDPrivate","kind":"identifier"}],"title":"HDPrivate","navigatorTitle":[{"text":"HDPrivate","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Derives a child HD (BIP32) private key from another HD private key.","type":"text"}],"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/HDPrivate"},"doc://BitcoinUtility/documentation/BitcoinUtility/Seed":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/Seed","abstract":[{"text":"Generates a random seed (entropy) using the system’s cryptographically secure algorithm.","type":"text"}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Seed"}],"title":"Seed","kind":"symbol","url":"\/documentation\/bitcoinutility\/seed","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Seed"}]},"https://swift-bitcoin.github.io/docc/base/documentation/bitcoinbase/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","titleInlineContent":[{"type":"text","text":"Base Library"}],"title":"Base Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","type":"link"},"doc://BitcoinUtility/documentation/BitcoinUtility/SignTransaction":{"title":"SignTransaction","navigatorTitle":[{"text":"SignTransaction","kind":"identifier"}],"role":"symbol","url":"\/documentation\/bitcoinutility\/signtransaction","abstract":[{"type":"text","text":"Signs a transaction input using a private key."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SignTransaction","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/SignTransaction"},"doc://BitcoinUtility/documentation/BitcoinUtility/ScriptToAddress":{"navigatorTitle":[{"text":"ScriptToAddress","kind":"identifier"}],"title":"ScriptToAddress","abstract":[{"type":"text","text":"Generates an address from a script.."}],"type":"topic","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ScriptToAddress","url":"\/documentation\/bitcoinutility\/scripttoaddress","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ScriptToAddress","kind":"identifier"}]},"doc://BitcoinUtility/documentation/BitcoinUtility/AddressDecode":{"kind":"symbol","url":"\/documentation\/bitcoinutility\/addressdecode","abstract":[{"text":"Decodes a Bitcoin address into its basic components.","type":"text"}],"title":"AddressDecode","type":"topic","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/AddressDecode","role":"symbol","navigatorTitle":[{"text":"AddressDecode","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"AddressDecode","kind":"identifier"}]},"https://swift-bitcoin.github.io/docc/bcnode/documentation/bitcoinnode/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/","titleInlineContent":[{"type":"text","text":"Bitcoin Node (bcnode) Command"}],"title":"Bitcoin Node (bcnode) Command","url":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/","type":"link"},"doc://BitcoinUtility/documentation/BitcoinUtility/ECToWIF":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ECToWIF"}],"kind":"symbol","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToWIF","navigatorTitle":[{"kind":"identifier","text":"ECToWIF"}],"type":"topic","url":"\/documentation\/bitcoinutility\/ectowif","title":"ECToWIF","role":"symbol","abstract":[{"type":"text","text":"Converts a raw private key to the Wallet Interchange Format (WIF)."}]},"doc://BitcoinUtility/documentation/BitcoinUtility/MnemonicNew":{"url":"\/documentation\/bitcoinutility\/mnemonicnew","title":"MnemonicNew","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MnemonicNew"}],"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicNew","abstract":[{"type":"text","text":"Create a mnemonic seed (BIP39) from entropy."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"MnemonicNew","kind":"identifier"}]},"doc://BitcoinUtility/documentation/BitcoinUtility/SendRPC":{"kind":"symbol","title":"SendRPC","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/SendRPC","navigatorTitle":[{"text":"SendRPC","kind":"identifier"}],"role":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SendRPC"}],"url":"\/documentation\/bitcoinutility\/sendrpc","type":"topic"},"doc://BitcoinUtility/documentation/BitcoinUtility":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"bcutil"},{"type":"text","text":" command control a running Bitcoin node instance or perform off-chain operations."}],"type":"topic","url":"\/documentation\/bitcoinutility","title":"Bitcoin Utility (bcutil)"},"https://swift-bitcoin.github.io/docc/documentation/bitcoin/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","titleInlineContent":[{"type":"text","text":"Swift Bitcoin"}],"title":"Swift Bitcoin","url":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","type":"link"},"doc://BitcoinUtility/documentation/BitcoinUtility/ECToPublic":{"url":"\/documentation\/bitcoinutility\/ectopublic","type":"topic","title":"ECToPublic","kind":"symbol","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/ECToPublic","role":"symbol","abstract":[{"type":"text","text":"Computes the public key corresponding to the provided secret key."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ECToPublic","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"ECToPublic"}]},"doc://BitcoinUtility/documentation/BitcoinUtility/BitcoinBase":{"kind":"symbol","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/BitcoinBase","abstract":[],"type":"topic","title":"BitcoinBase","url":"\/documentation\/bitcoinutility\/bitcoinbase","role":"collection"},"doc://BitcoinUtility/documentation/BitcoinUtility/Connect":{"kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/bitcoinutility\/connect","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Connect","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"Connect","kind":"identifier"}],"title":"Connect","identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/Connect"},"doc://BitcoinUtility/documentation/BitcoinUtility/MnemonicToSeed":{"abstract":[{"type":"text","text":"Create a mnemonic seed (BIP39) from entropy."}],"title":"MnemonicToSeed","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MnemonicToSeed"}],"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/MnemonicToSeed","navigatorTitle":[{"kind":"identifier","text":"MnemonicToSeed"}],"type":"topic","url":"\/documentation\/bitcoinutility\/mnemonictoseed","kind":"symbol"},"https://swift-bitcoin.github.io/docc/rpc/documentation/bitcoinrpc/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","titleInlineContent":[{"type":"text","text":"RPC Library"}],"title":"RPC Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","type":"link"},"https://swift-bitcoin.github.io/docc/blockchain/documentation/bitcoinblockchain/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","titleInlineContent":[{"type":"text","text":"Blockchain Library"}],"title":"Blockchain Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","type":"link"},"doc://BitcoinUtility/documentation/BitcoinUtility/BitcoinTransport":{"identifier":"doc:\/\/BitcoinUtility\/documentation\/BitcoinUtility\/BitcoinTransport","kind":"symbol","abstract":[],"title":"BitcoinTransport","role":"collection","type":"topic","url":"\/documentation\/bitcoinutility\/bitcointransport"}}}