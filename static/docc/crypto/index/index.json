{"includedArchiveIdentifiers":["BitcoinCrypto"],"interfaceLanguages":{"swift":[{"children":[{"title":"Public-key cryptography","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/secretkey\/init()","title":"init()","type":"init"},{"path":"\/documentation\/bitcoincrypto\/secretkey\/init(_:)-2otyq","title":"init?(String)","type":"init"},{"path":"\/documentation\/bitcoincrypto\/secretkey\/init(_:)-8uuas","title":"init?(Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/secretkey\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/bitcoincrypto\/secretkey\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/bitcoincrypto\/secretkey\/publickey","title":"var publicKey: PublicKey","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/secretkey\/sign(_:signaturetype:recovercompressedkeys:)","title":"func sign(String, signatureType: SignatureType, recoverCompressedKeys: Bool) -> Signature?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/secretkey\/sign(hash:signaturetype:recovercompressedkeys:)","title":"func sign(hash: Data, signatureType: SignatureType, recoverCompressedKeys: Bool) -> Signature","type":"method"},{"path":"\/documentation\/bitcoincrypto\/secretkey\/tweak(_:)","title":"func tweak(Data) -> SecretKey","type":"method"},{"path":"\/documentation\/bitcoincrypto\/secretkey\/tweakxonly(_:)","title":"func tweakXOnly(Data) -> SecretKey","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/secretkey\/keylength","title":"static let keyLength: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/secretkey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoincrypto\/secretkey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/secretkey","title":"SecretKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/publickey\/init(_:requireeveny:)","title":"init(SecretKey, requireEvenY: Bool)","type":"init"},{"path":"\/documentation\/bitcoincrypto\/publickey\/init(_:skipcheck:)-4euzj","title":"init?(String, skipCheck: Bool)","type":"init"},{"path":"\/documentation\/bitcoincrypto\/publickey\/init(_:skipcheck:)-6u86x","title":"init?<D>(D, skipCheck: Bool)","type":"init"},{"path":"\/documentation\/bitcoincrypto\/publickey\/init(compressed:skipcheck:)","title":"init?<D>(compressed: D, skipCheck: Bool)","type":"init"},{"path":"\/documentation\/bitcoincrypto\/publickey\/init(uncompressed:skipcheck:)","title":"init?<D>(uncompressed: D, skipCheck: Bool)","type":"init"},{"path":"\/documentation\/bitcoincrypto\/publickey\/init(xonly:haseveny:)","title":"init?(xOnly: Data, hasEvenY: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/publickey\/compresseddata","title":"var compressedData: Data?","type":"property"},{"path":"\/documentation\/bitcoincrypto\/publickey\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/bitcoincrypto\/publickey\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/bitcoincrypto\/publickey\/haseveny","title":"var hasEvenY: Bool","type":"property"},{"path":"\/documentation\/bitcoincrypto\/publickey\/hasoddy","title":"var hasOddY: Bool","type":"property"},{"path":"\/documentation\/bitcoincrypto\/publickey\/uncompresseddata","title":"var uncompressedData: Data?","type":"property"},{"path":"\/documentation\/bitcoincrypto\/publickey\/xonlydata","title":"var xOnlyData: Data","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/publickey\/check(usexonly:)","title":"func check(useXOnly: Bool) -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/publickey\/matches(_:)","title":"func matches(SecretKey) -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/publickey\/tweak(_:)","title":"func tweak(Data) -> PublicKey","type":"method"},{"path":"\/documentation\/bitcoincrypto\/publickey\/tweakxonly(_:)","title":"func tweakXOnly(Data) -> PublicKey","type":"method"},{"path":"\/documentation\/bitcoincrypto\/publickey\/verify(_:for:)","title":"func verify(Signature, for: String) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/publickey\/compressedlength","title":"static let compressedLength: Int","type":"property"},{"path":"\/documentation\/bitcoincrypto\/publickey\/publickeyserializationtageven","title":"static let publicKeySerializationTagEven: UInt8","type":"property"},{"path":"\/documentation\/bitcoincrypto\/publickey\/publickeyserializationtagodd","title":"static let publicKeySerializationTagOdd: UInt8","type":"property"},{"path":"\/documentation\/bitcoincrypto\/publickey\/publickeyserializationtaguncompressed","title":"static let publicKeySerializationTagUncompressed: UInt8","type":"property"},{"path":"\/documentation\/bitcoincrypto\/publickey\/satoshi","title":"static let satoshi: PublicKey","type":"property"},{"path":"\/documentation\/bitcoincrypto\/publickey\/uncompressedlength","title":"static let uncompressedLength: Int","type":"property"},{"path":"\/documentation\/bitcoincrypto\/publickey\/xonlylength","title":"static let xOnlyLength: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/publickey\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoincrypto\/publickey\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/publickey","title":"PublicKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/signature\/init(_:type:)-1n9xl","title":"init?(Data, type: SignatureType)","type":"init"},{"path":"\/documentation\/bitcoincrypto\/signature\/init(_:type:)-3bxa5","title":"init?(String, type: SignatureType)","type":"init"},{"path":"\/documentation\/bitcoincrypto\/signature\/init(hash:secretkey:type:additionalentropy:recovercompressedkeys:)","title":"init(hash: Data, secretKey: SecretKey, type: SignatureType, additionalEntropy: Data?, recoverCompressedKeys: Bool)","type":"init"},{"path":"\/documentation\/bitcoincrypto\/signature\/init(message:secretkey:type:recovercompressedkeys:)","title":"init?(message: String, secretKey: SecretKey, type: SignatureType, recoverCompressedKeys: Bool)","type":"init"},{"path":"\/documentation\/bitcoincrypto\/signature\/init(messagedata:secretkey:type:additionalentropy:recovercompressedkeys:)","title":"init(messageData: Data, secretKey: SecretKey, type: SignatureType, additionalEntropy: Data?, recoverCompressedKeys: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/signature\/base64","title":"var base64: String","type":"property"},{"path":"\/documentation\/bitcoincrypto\/signature\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/bitcoincrypto\/signature\/description","title":"var description: String","type":"property"},{"path":"\/documentation\/bitcoincrypto\/signature\/isencodingvalid","title":"var isEncodingValid: Bool","type":"property"},{"path":"\/documentation\/bitcoincrypto\/signature\/islows","title":"var isLowS: Bool","type":"property"},{"path":"\/documentation\/bitcoincrypto\/signature\/type","title":"let type: SignatureType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/signature\/recoverpublickey(from:)","title":"func recoverPublicKey(from: String) -> PublicKey?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/signature\/recoverpublickey(messagedata:)","title":"func recoverPublicKey(messageData: Data) -> PublicKey?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/signature\/verify(hash:publickey:)","title":"func verify(hash: Data, publicKey: PublicKey) -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/signature\/verify(message:publickey:)","title":"func verify(message: String, publicKey: PublicKey) -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/signature\/verify(messagedata:publickey:)","title":"func verify(messageData: Data, publicKey: PublicKey) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/signature\/compactsignaturelength","title":"static let compactSignatureLength: Int","type":"property"},{"path":"\/documentation\/bitcoincrypto\/signature\/ecdsasignaturemaxlength","title":"static let ecdsaSignatureMaxLength: Int","type":"property"},{"path":"\/documentation\/bitcoincrypto\/signature\/ecdsasignatureminlength","title":"static let ecdsaSignatureMinLength: Int","type":"property"},{"path":"\/documentation\/bitcoincrypto\/signature\/recoverablesignaturelength","title":"static let recoverableSignatureLength: Int","type":"property"},{"path":"\/documentation\/bitcoincrypto\/signature\/schnorrsignaturelength","title":"static let schnorrSignatureLength: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/signature\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoincrypto\/signature\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/signature","title":"Signature","type":"struct"},{"title":"Hash functions","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/withunsafebytes(_:)","title":"func withUnsafeBytes<R>((UnsafeRawBufferPointer) throws -> R) rethrows -> R","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/bytecount","title":"static let byteCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/==(_:_:)-167xq","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/==(_:_:)-2ygi8","title":"static func == <D>(Self, D) -> Bool","type":"op"}],"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/digest-implementations","title":"Digest Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/filter(_:)-60put","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/filter(_:)-9fqpt","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/flatmap(_:)-132p9","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/flatmap(_:)-2yxai","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/makeiterator()","title":"func makeIterator() -> Array<UInt8>.Iterator","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/map(_:)","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/sorted(using:)-4q9iu","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/sorted(using:)-4ymkf","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/ripemd160\/digest","title":"RIPEMD160.Digest","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/finalize()","title":"func finalize() -> RIPEMD160.Digest","type":"method"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/update(bufferpointer:)","title":"func update(bufferPointer: UnsafeRawBufferPointer)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/blockbytecount","title":"static let blockByteCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/update(data:)","title":"func update<D>(data: D)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/ripemd160\/hash(data:)","title":"static func hash<D>(data: D) -> Self.Digest","type":"method"}],"path":"\/documentation\/bitcoincrypto\/ripemd160\/hashfunction-implementations","title":"HashFunction Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/ripemd160","title":"RIPEMD160","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/value","title":"let value: UInt64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/withunsafebytes(_:)","title":"func withUnsafeBytes<R>((UnsafeRawBufferPointer) throws -> R) rethrows -> R","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/bytecount","title":"static let byteCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/==(_:_:)-72jzd","title":"static func == (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/==(_:_:)-8psnx","title":"static func == <D>(Self, D) -> Bool","type":"op"}],"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/digest-implementations","title":"Digest Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/count(where:)","title":"func count<E>(where: (Self.Element) throws(E) -> Bool) throws(E) -> Int","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/filter(_:)-5kefm","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/filter(_:)-8go6e","title":"func filter(Predicate<Self.Element>) throws -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/flatmap(_:)-2mcpg","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/flatmap(_:)-3yxsu","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/makeiterator()","title":"func makeIterator() -> Array<UInt8>.Iterator","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/map(_:)","title":"func map<T, E>((Self.Element) throws(E) -> T) throws(E) -> [T]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/sorted(using:)-19ftf","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/sorted(using:)-1jg0h","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/bitcoincrypto\/siphash\/digest\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/siphash\/digest","title":"SipHash.Digest","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/init()","title":"init()","type":"init"},{"path":"\/documentation\/bitcoincrypto\/siphash\/init(k0:k1:)","title":"init(k0: UInt64, k1: UInt64)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/finalize()","title":"func finalize() -> SipHash.Digest","type":"method"},{"path":"\/documentation\/bitcoincrypto\/siphash\/update(bufferpointer:)","title":"func update(bufferPointer: UnsafeRawBufferPointer)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/blockbytecount","title":"static let blockByteCount: Int","type":"property"},{"path":"\/documentation\/bitcoincrypto\/siphash\/c","title":"static let c: Int","type":"property"},{"path":"\/documentation\/bitcoincrypto\/siphash\/d","title":"static let d: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/update(data:)","title":"func update<D>(data: D)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/siphash\/hash(data:)","title":"static func hash<D>(data: D) -> Self.Digest","type":"method"}],"path":"\/documentation\/bitcoincrypto\/siphash\/hashfunction-implementations","title":"HashFunction Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/siphash","title":"SipHash","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/hash256\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/hash256\/finalize()","title":"func finalize() -> Hash256.Digest","type":"method"},{"path":"\/documentation\/bitcoincrypto\/hash256\/update(bufferpointer:)","title":"func update(bufferPointer: UnsafeRawBufferPointer)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/hash256\/digest","title":"Hash256.Digest","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/hash256\/blockbytecount","title":"static let blockByteCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/hash256\/update(data:)","title":"func update<D>(data: D)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/hash256\/hash(data:)","title":"static func hash<D>(data: D) -> Self.Digest","type":"method"}],"path":"\/documentation\/bitcoincrypto\/hash256\/hashfunction-implementations","title":"HashFunction Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/hash256","title":"Hash256","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/hash160\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/hash160\/finalize()","title":"func finalize() -> Hash160.Digest","type":"method"},{"path":"\/documentation\/bitcoincrypto\/hash160\/update(bufferpointer:)","title":"func update(bufferPointer: UnsafeRawBufferPointer)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/hash160\/digest","title":"Hash160.Digest","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/hash160\/blockbytecount","title":"static let blockByteCount: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/hash160\/update(data:)","title":"func update<D>(data: D)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/hash160\/hash(data:)","title":"static func hash<D>(data: D) -> Self.Digest","type":"method"}],"path":"\/documentation\/bitcoincrypto\/hash160\/hashfunction-implementations","title":"HashFunction Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/hash160","title":"Hash160","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/pbkdf2\/init(password:salt:iterations:keylength:)","title":"init(password: Data, salt: Data, iterations: Int, keyLength: Int?) throws","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/pbkdf2\/calculate()","title":"func calculate() throws -> Array<UInt8>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/pbkdf2\/error\/derivedkeytoolong","title":"case derivedKeyTooLong","type":"case"},{"path":"\/documentation\/bitcoincrypto\/pbkdf2\/error\/invalidinput","title":"case invalidInput","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/pbkdf2\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoincrypto\/pbkdf2\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/pbkdf2\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bitcoincrypto\/pbkdf2\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/pbkdf2\/error","title":"PBKDF2.Error","type":"enum"}],"path":"\/documentation\/bitcoincrypto\/pbkdf2","title":"PBKDF2","type":"struct"},{"path":"\/documentation\/bitcoincrypto\/sha1","title":"SHA1","type":"typealias"},{"path":"\/documentation\/bitcoincrypto\/sha256","title":"SHA256","type":"typealias"},{"path":"\/documentation\/bitcoincrypto\/sha512","title":"SHA512","type":"typealias"},{"path":"\/documentation\/bitcoincrypto\/hmac","title":"HMAC","type":"typealias"},{"title":"Data\/string coders","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base58encoder\/init(withchecksum:)","title":"init(withChecksum: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base58encoder\/withchecksum","title":"let withChecksum: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base58encoder\/encode(_:)","title":"func encode(Data) -> String","type":"method"}],"path":"\/documentation\/bitcoincrypto\/base58encoder","title":"Base58Encoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base58decoder\/init(withchecksum:)","title":"init(withChecksum: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base58decoder\/withchecksum","title":"let withChecksum: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base58decoder\/decode(_:)","title":"func decode(String) -> Data?","type":"method"}],"path":"\/documentation\/bitcoincrypto\/base58decoder","title":"Base58Decoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32encoder\/init(_:)","title":"init(Bech32Variant)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32encoder\/variant","title":"let variant: Bech32Variant","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32encoder\/encode(_:values:)","title":"func encode(String, values: Data) -> String","type":"method"}],"path":"\/documentation\/bitcoincrypto\/bech32encoder","title":"Bech32Encoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/init(_:)","title":"init(Bech32Variant?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/variant","title":"let variant: Bech32Variant?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/decode(_:)","title":"func decode(String) throws -> (hrp: String, checksum: Data, detectedVariant: Bech32Variant)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/checksummismatch","title":"case checksumMismatch","type":"case"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/incorrectchecksumsize","title":"case incorrectChecksumSize","type":"case"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/incorrecthrpsize","title":"case incorrectHrpSize","type":"case"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/invalidcase","title":"case invalidCase","type":"case"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/invalidcharacter","title":"case invalidCharacter","type":"case"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/nochecksummarker","title":"case noChecksumMarker","type":"case"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/nonprintablecharacter","title":"case nonPrintableCharacter","type":"case"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/nonutf8string","title":"case nonUTF8String","type":"case"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/stringlengthexceeded","title":"case stringLengthExceeded","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/errordescription","title":"var errorDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/bech32decoder\/error","title":"Bech32Decoder.Error","type":"enum"}],"path":"\/documentation\/bitcoincrypto\/bech32decoder","title":"Bech32Decoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base16encoder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base16encoder\/encode(_:)","title":"func encode<D>(D) -> String","type":"method"}],"path":"\/documentation\/bitcoincrypto\/base16encoder","title":"Base16Encoder","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base16decoder\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base16decoder\/decode(_:)","title":"func decode(String) throws -> Data","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base16decoder\/error\/invalidhexvalue","title":"case invalidHexValue","type":"case"},{"path":"\/documentation\/bitcoincrypto\/base16decoder\/error\/invalidstring","title":"case invalidString","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base16decoder\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoincrypto\/base16decoder\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/base16decoder\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bitcoincrypto\/base16decoder\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/base16decoder\/error","title":"Base16Decoder.Error","type":"enum"}],"path":"\/documentation\/bitcoincrypto\/base16decoder","title":"Base16Decoder","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/destroyeccsigningcontext()","title":"func destroyECCSigningContext()","type":"func"},{"path":"\/documentation\/bitcoincrypto\/getrandbytes(_:)","title":"func getRandBytes(Int) -> [UInt8]","type":"func"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32variant\/bech32","title":"case bech32","type":"case"},{"path":"\/documentation\/bitcoincrypto\/bech32variant\/m","title":"case m","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32variant\/description","title":"var description: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/bech32variant\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoincrypto\/bech32variant\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/bech32variant","title":"Bech32Variant","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/signaturetype\/compact","title":"case compact","type":"case"},{"path":"\/documentation\/bitcoincrypto\/signaturetype\/ecdsa","title":"case ecdsa","type":"case"},{"path":"\/documentation\/bitcoincrypto\/signaturetype\/recoverable","title":"case recoverable","type":"case"},{"path":"\/documentation\/bitcoincrypto\/signaturetype\/schnorr","title":"case schnorr","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/signaturetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcoincrypto\/signaturetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bitcoincrypto\/signaturetype","title":"SignatureType","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/cryptokit\/sha256\/init(tag:)","title":"init(tag: String)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bitcoincrypto\/cryptokit\/sha256\/hash(data:tag:)","title":"static func hash<D>(data: D, tag: String) -> SHA256.Digest","type":"method"}],"path":"\/documentation\/bitcoincrypto\/cryptokit\/sha256","title":"SHA256","type":"extension"}],"path":"\/documentation\/bitcoincrypto\/cryptokit","title":"CryptoKit","type":"extension"}],"path":"\/documentation\/bitcoincrypto","title":"BitcoinCrypto","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}