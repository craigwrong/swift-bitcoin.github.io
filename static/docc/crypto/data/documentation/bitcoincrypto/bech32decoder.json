{"metadata":{"roleHeading":"Structure","symbolKind":"struct","remoteSource":{"fileName":"Bech32.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/src\/bitcoin-crypto\/codec\/Bech32.swift#L78"},"externalID":"s:13BitcoinCrypto13Bech32DecoderV","navigatorTitle":[{"text":"Bech32Decoder","kind":"identifier"}],"role":"symbol","title":"Bech32Decoder","modules":[{"name":"BitcoinCrypto"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bech32Decoder"}]},"identifier":{"url":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder","interfaceLanguage":"swift"},"seeAlsoSections":[{"generated":true,"title":"Data\/string coders","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Decoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Decoder"],"anchor":"Datastring-coders"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bech32Decoder","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoincrypto\/bech32decoder"]}],"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder\/init(_:)"],"title":"Initializers","anchor":"Initializers","generated":true},{"anchor":"Instance-Properties","generated":true,"title":"Instance Properties","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder\/variant"]},{"anchor":"Instance-Methods","title":"Instance Methods","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder\/decode(_:)"],"generated":true},{"generated":true,"anchor":"Enumerations","title":"Enumerations","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder\/Error"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"text":"Decodes raw data from Bech32 and Bech32m strings.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto"]]},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/BitcoinCrypto\/s8SendableP"]}],"references":{"doc://BitcoinCrypto/s8SendableP":{"identifier":"doc:\/\/BitcoinCrypto\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Decoder/variant":{"url":"\/documentation\/bitcoincrypto\/bech32decoder\/variant","role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder\/variant","kind":"symbol","title":"variant","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"variant","kind":"identifier"},{"kind":"text","text":": "},{"text":"Bech32Variant","preciseIdentifier":"s:13BitcoinCrypto13Bech32VariantO","kind":"typeIdentifier"},{"kind":"text","text":"?"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Decoder/init(_:)":{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder\/init(_:)","abstract":[],"url":"\/documentation\/bitcoincrypto\/bech32decoder\/init(_:)","role":"symbol","title":"init(_:)","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:13BitcoinCrypto13Bech32VariantO","text":"Bech32Variant","kind":"typeIdentifier"},{"kind":"text","text":"?)"}],"kind":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base16Encoder":{"navigatorTitle":[{"kind":"identifier","text":"Base16Encoder"}],"role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Encoder","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Encodes data into hexadecimal strings."}],"url":"\/documentation\/bitcoincrypto\/base16encoder","title":"Base16Encoder","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Base16Encoder"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base16Decoder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Base16Decoder"}],"navigatorTitle":[{"kind":"identifier","text":"Base16Decoder"}],"kind":"symbol","abstract":[{"type":"text","text":"Decodes raw data from hexadecimal strings."}],"role":"symbol","type":"topic","url":"\/documentation\/bitcoincrypto\/base16decoder","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Decoder","title":"Base16Decoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Decoder/decode(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"decode","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> (hrp","kind":"text"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", checksum"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"text":", detectedVariant","kind":"text"},{"text":": ","kind":"text"},{"text":"Bech32Variant","kind":"typeIdentifier","preciseIdentifier":"s:13BitcoinCrypto13Bech32VariantO"},{"kind":"text","text":")"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder\/decode(_:)","abstract":[{"text":"Decode Bech32 string","type":"text"}],"url":"\/documentation\/bitcoincrypto\/bech32decoder\/decode(_:)","type":"topic","title":"decode(_:)","role":"symbol","kind":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Decoder/Error":{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder\/Error","url":"\/documentation\/bitcoincrypto\/bech32decoder\/error","type":"topic","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"Error","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Error"}],"title":"Bech32Decoder.Error"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base58Decoder":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Base58Decoder","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Base58Decoder","kind":"identifier"}],"title":"Base58Decoder","type":"topic","url":"\/documentation\/bitcoincrypto\/base58decoder","abstract":[{"type":"text","text":"Decodes raw data from Base58 strings."}],"role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Decoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Encoder":{"navigatorTitle":[{"text":"Bech32Encoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Encoder","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Encodes raw data into Bech32 and Bech32m strings used in BIP173 and BIP350 address formats."}],"url":"\/documentation\/bitcoincrypto\/bech32encoder","title":"Bech32Encoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Bech32Encoder","kind":"identifier"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Decoder":{"title":"Bech32Decoder","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bech32Decoder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Bech32Decoder"}],"url":"\/documentation\/bitcoincrypto\/bech32decoder","abstract":[{"type":"text","text":"Decodes raw data from Bech32 and Bech32m strings."}],"type":"topic","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto":{"abstract":[{"text":"Elliptic curve cryptography, hash function library and Bitcoin-specific coders.","type":"text"}],"role":"collection","url":"\/documentation\/bitcoincrypto","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto","kind":"symbol","title":"BitcoinCrypto","type":"topic"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base58Encoder":{"navigatorTitle":[{"text":"Base58Encoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Encoder","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Produces checksumed Base58 strings used for legacy Bitcoin addresses."}],"url":"\/documentation\/bitcoincrypto\/base58encoder","title":"Base58Encoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Base58Encoder"}]}}}