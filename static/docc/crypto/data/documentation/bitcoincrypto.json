{"primaryContentSections":[{"content":[{"type":"heading","level":2,"text":"Overview","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"Use BitcoinCrypto to perform Bitcoin-related cryptographic operations:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Use public-key cryptography to create and evaluate ECDSA and Schnorr signatures.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Generate any of the cryptographically secure hashes used by the Bitcoin Protocol.","type":"text"}]}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Encode and decode binary data into and from strings using Base58 or Bech32 encoding.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"roleHeading":"Swift Bitcoin Library","externalID":"BitcoinCrypto","role":"collection","symbolKind":"module","title":"BitcoinCrypto","modules":[{"name":"BitcoinCrypto"}]},"hierarchy":{"paths":[[]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoincrypto"]}],"sections":[],"topicSections":[{"anchor":"Public-key-cryptography","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SecretKey","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PublicKey","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Signature"],"title":"Public-key cryptography"},{"identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/RIPEMD160","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SipHash","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash256","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash160","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PBKDF2","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA1","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA512","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/HMAC"],"title":"Hash functions","anchor":"Hash-functions"},{"anchor":"Datastring-coders","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Decoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Decoder"],"title":"Data\/string coders"},{"anchor":"Functions","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/destroyECCSigningContext()","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/getRandBytes(_:)"],"generated":true,"title":"Functions"},{"title":"Enumerations","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Variant","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SignatureType"],"anchor":"Enumerations","generated":true},{"anchor":"Extended-Modules","generated":true,"identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/CryptoKit"],"title":"Extended Modules"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto"},"kind":"symbol","seeAlsoSections":[{"title":"Related Documentation","identifiers":["https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"],"anchor":"Related-Documentation"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Elliptic curve cryptography, hash function library and Bitcoin-specific coders.","type":"text"}],"references":{"doc://BitcoinCrypto/documentation/BitcoinCrypto/Hash256":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hash256","kind":"identifier"}],"title":"Hash256","abstract":[{"type":"text","text":"Hashes first using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256"},{"text":" and applies ","type":"text"},{"code":"SHA256","type":"codeVoice"},{"type":"text","text":" again on finalize."}],"url":"\/documentation\/bitcoincrypto\/hash256","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash256","navigatorTitle":[{"kind":"identifier","text":"Hash256"}],"type":"topic","kind":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base58Decoder":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Base58Decoder","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"Base58Decoder","kind":"identifier"}],"title":"Base58Decoder","type":"topic","url":"\/documentation\/bitcoincrypto\/base58decoder","abstract":[{"type":"text","text":"Decodes raw data from Base58 strings."}],"role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Decoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/RIPEMD160":{"type":"topic","url":"\/documentation\/bitcoincrypto\/ripemd160","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/RIPEMD160","navigatorTitle":[{"kind":"identifier","text":"RIPEMD160"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"RIPEMD160"}],"kind":"symbol","title":"RIPEMD160","role":"symbol","abstract":[{"text":"RACE Integrity Primitives Evaluation (RIPE) 160-bit Message Digest (MD) implementation.","type":"text"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SHA256":{"title":"SHA256","abstract":[{"type":"text","text":"Includes support for tagged hashes as introduced by BIP340."}],"navigatorTitle":[{"text":"SHA256","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","url":"\/documentation\/bitcoincrypto\/sha256","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"SHA256","kind":"identifier"}],"kind":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Decoder":{"title":"Bech32Decoder","kind":"symbol","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Bech32Decoder","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Bech32Decoder"}],"url":"\/documentation\/bitcoincrypto\/bech32decoder","abstract":[{"type":"text","text":"Decodes raw data from Bech32 and Bech32m strings."}],"type":"topic","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SHA1":{"url":"\/documentation\/bitcoincrypto\/sha1","type":"topic","role":"symbol","navigatorTitle":[{"text":"SHA1","kind":"identifier"}],"title":"SHA1","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SHA1"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA1","abstract":[{"text":"Insecure hash function still available as a SCRIPT operation code in Bitcoin.","type":"text"}]},"https://swift-bitcoin.github.io/docc/bcutil/documentation/bitcoinutility/":{"titleInlineContent":[{"text":"Bitcoin Utility (bcutil) Command","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","title":"Bitcoin Utility (bcutil) Command","type":"link","url":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/"},"https://swift-bitcoin.github.io/docc/transport/documentation/bitcointransport/":{"titleInlineContent":[{"text":"Transport Library","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","title":"Transport Library","type":"link","url":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/"},"https://swift-bitcoin.github.io/docc/documentation/bitcoin/":{"titleInlineContent":[{"text":"Swift Bitcoin “Umbrella” Library","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","title":"Swift Bitcoin “Umbrella” Library","type":"link","url":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SignatureType":{"title":"SignatureType","abstract":[{"text":"Supported types of signature and signature encodings.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SignatureType"}],"navigatorTitle":[{"kind":"identifier","text":"SignatureType"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SignatureType","type":"topic","url":"\/documentation\/bitcoincrypto\/signaturetype","kind":"symbol","role":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Signature":{"navigatorTitle":[{"kind":"identifier","text":"Signature"}],"role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Signature","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Elliptic curve SECP256K1 signature supporting both ECDSA and Schnorr algorithms."}],"url":"\/documentation\/bitcoincrypto\/signature","title":"Signature","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signature"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/destroyECCSigningContext()":{"url":"\/documentation\/bitcoincrypto\/destroyeccsigningcontext()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"destroyECCSigningContext"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/destroyECCSigningContext()","kind":"symbol","title":"destroyECCSigningContext()","role":"symbol","type":"topic"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Hash160":{"abstract":[{"type":"text","text":"Hashes first using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256"},{"type":"text","text":" and applies "},{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/RIPEMD160","isActive":true,"type":"reference"},{"text":" on finalize.","type":"text"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash160","url":"\/documentation\/bitcoincrypto\/hash160","title":"Hash160","type":"topic","navigatorTitle":[{"text":"Hash160","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Hash160","kind":"identifier"}],"role":"symbol"},"https://swift-bitcoin.github.io/docc/base/documentation/bitcoinbase/":{"titleInlineContent":[{"text":"Base Library","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","title":"Base Library","type":"link","url":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SecretKey":{"kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SecretKey","url":"\/documentation\/bitcoincrypto\/secretkey","title":"SecretKey","role":"symbol","navigatorTitle":[{"text":"SecretKey","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SecretKey"}],"abstract":[{"type":"text","text":"Elliptic curve SECP256K1 secret key."}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto":{"abstract":[{"text":"Elliptic curve cryptography, hash function library and Bitcoin-specific coders.","type":"text"}],"role":"collection","url":"\/documentation\/bitcoincrypto","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto","kind":"symbol","title":"BitcoinCrypto","type":"topic"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SHA512":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"SHA512","kind":"identifier"}],"title":"SHA512","role":"symbol","kind":"symbol","url":"\/documentation\/bitcoincrypto\/sha512","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA512","abstract":[{"text":"Used indirectly by BIP32 and BIP39 implementations.","type":"text"}],"navigatorTitle":[{"text":"SHA512","kind":"identifier"}],"type":"topic"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/getRandBytes(_:)":{"url":"\/documentation\/bitcoincrypto\/getrandbytes(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRandBytes"},{"kind":"text","text":"("},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"abstract":[{"text":"Generates the specified number of random bytes.","type":"text"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/getRandBytes(_:)","kind":"symbol","title":"getRandBytes(_:)","role":"symbol","type":"topic"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Variant":{"url":"\/documentation\/bitcoincrypto\/bech32variant","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bech32Variant"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Variant","type":"topic","abstract":[],"role":"symbol","kind":"symbol","title":"Bech32Variant","navigatorTitle":[{"kind":"identifier","text":"Bech32Variant"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/PublicKey":{"url":"\/documentation\/bitcoincrypto\/publickey","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PublicKey","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublicKey"}],"title":"PublicKey","navigatorTitle":[{"text":"PublicKey","kind":"identifier"}],"abstract":[{"type":"text","text":"Elliptic curve SECP256K1 public key."}],"role":"symbol","type":"topic"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/HMAC":{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/HMAC","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HMAC"}],"role":"symbol","abstract":[{"type":"text","text":"A hash-based message authentication algorithm used by BIP32 key derivation in Hierarchically Deterministic (HD) wallets."}],"title":"HMAC","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"HMAC"}],"type":"topic","url":"\/documentation\/bitcoincrypto\/hmac"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/PBKDF2":{"url":"\/documentation\/bitcoincrypto\/pbkdf2","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"PBKDF2","kind":"identifier"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PBKDF2","type":"topic","abstract":[{"text":"Implementation of the Password-Based Key Derivation Function Version 2 (PBKDF2)  used by BIP39 seed generation from mnemonic.","type":"text"}],"role":"symbol","kind":"symbol","title":"PBKDF2","navigatorTitle":[{"kind":"identifier","text":"PBKDF2"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base16Encoder":{"navigatorTitle":[{"kind":"identifier","text":"Base16Encoder"}],"role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Encoder","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Encodes data into hexadecimal strings."}],"url":"\/documentation\/bitcoincrypto\/base16encoder","title":"Base16Encoder","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Base16Encoder"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SipHash":{"abstract":[{"type":"text","text":"Implementation of the SipHash 2-4 hashing algorithm used by BIP152 short transaction identifiers."}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SipHash"}],"url":"\/documentation\/bitcoincrypto\/siphash","navigatorTitle":[{"kind":"identifier","text":"SipHash"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SipHash","kind":"symbol","title":"SipHash","type":"topic"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Encoder":{"navigatorTitle":[{"text":"Bech32Encoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Encoder","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Encodes raw data into Bech32 and Bech32m strings used in BIP173 and BIP350 address formats."}],"url":"\/documentation\/bitcoincrypto\/bech32encoder","title":"Bech32Encoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Bech32Encoder","kind":"identifier"}]},"https://swift-bitcoin.github.io/docc/blockchain/documentation/bitcoinblockchain/":{"titleInlineContent":[{"text":"Blockchain Library","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","title":"Blockchain Library","type":"link","url":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/CryptoKit":{"type":"topic","kind":"symbol","abstract":[],"url":"\/documentation\/bitcoincrypto\/cryptokit","role":"collection","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/CryptoKit","title":"CryptoKit"},"https://swift-bitcoin.github.io/docc/wallet/documentation/bitcoinwallet/":{"titleInlineContent":[{"text":"Wallet Library","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","title":"Wallet Library","type":"link","url":"https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base16Decoder":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Base16Decoder"}],"navigatorTitle":[{"kind":"identifier","text":"Base16Decoder"}],"kind":"symbol","abstract":[{"type":"text","text":"Decodes raw data from hexadecimal strings."}],"role":"symbol","type":"topic","url":"\/documentation\/bitcoincrypto\/base16decoder","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Decoder","title":"Base16Decoder"},"https://swift-bitcoin.github.io/docc/bcnode/documentation/bitcoinnode/":{"titleInlineContent":[{"text":"Bitcoin Node (bcnode) Command","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/","title":"Bitcoin Node (bcnode) Command","type":"link","url":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base58Encoder":{"navigatorTitle":[{"text":"Base58Encoder","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Encoder","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Produces checksumed Base58 strings used for legacy Bitcoin addresses."}],"url":"\/documentation\/bitcoincrypto\/base58encoder","title":"Base58Encoder","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Base58Encoder"}]}}}