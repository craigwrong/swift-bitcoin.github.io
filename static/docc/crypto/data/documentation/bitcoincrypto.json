{"hierarchy":{"paths":[[]]},"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Elliptic curve cryptography, hash function library and Bitcoin-specific coders."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoincrypto"]}],"topicSections":[{"title":"Public-key cryptography","anchor":"Public-key-cryptography","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SecretKey","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PubKey","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/AnySig"]},{"title":"Hash functions","anchor":"Hash-functions","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/RIPEMD160","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SipHash","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash256","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash160","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PBKDF2","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA1","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA512","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/HMAC"]},{"title":"Data\/string coders","anchor":"Datastring-coders","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Decoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Decoder"]},{"identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/destroyECCSigningContext()","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/getRandBytes(_:)"],"title":"Functions","anchor":"Functions","generated":true},{"generated":true,"title":"Enumerations","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Variant","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SigType"],"anchor":"Enumerations"},{"anchor":"Extended-Modules","generated":true,"identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/CryptoKit"],"title":"Extended Modules"}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"type":"heading","text":"Overview","level":2,"anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Use BitcoinCrypto to perform Bitcoin-related cryptographic operations:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use public-key cryptography to create and evaluate ECDSA and Schnorr signatures."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Generate any of the cryptographically secure hashes used by the Bitcoin Protocol."}]}]}]},{"inlineContent":[{"type":"text","text":"Encode and decode binary data into and from strings using Base58 or Bech32 encoding."}],"type":"paragraph"}]}],"metadata":{"externalID":"BitcoinCrypto","modules":[{"name":"BitcoinCrypto"}],"title":"BitcoinCrypto","role":"collection","roleHeading":"Swift Bitcoin Library","symbolKind":"module"},"references":{"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base58Decoder":{"url":"\/documentation\/bitcoincrypto\/base58decoder","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Base58Decoder"}],"navigatorTitle":[{"text":"Base58Decoder","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Decodes raw data from Base58 strings."}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Decoder","title":"Base58Decoder","type":"topic"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/RIPEMD160":{"navigatorTitle":[{"kind":"identifier","text":"RIPEMD160"}],"abstract":[{"text":"RACE Integrity Primitives Evaluation (RIPE) 160-bit Message Digest (MD) implementation.","type":"text"}],"url":"\/documentation\/bitcoincrypto\/ripemd160","type":"topic","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/RIPEMD160","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"RIPEMD160","kind":"identifier"}],"role":"symbol","title":"RIPEMD160"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/AnySig":{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/AnySig","url":"\/documentation\/bitcoincrypto\/anysig","abstract":[{"text":"Elliptic curve SECP256K1 signature supporting both ECDSA and Schnorr algorithms.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"AnySig","kind":"identifier"}],"title":"AnySig","type":"topic","kind":"symbol","navigatorTitle":[{"text":"AnySig","kind":"identifier"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/getRandBytes(_:)":{"kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/getRandBytes(_:)","title":"getRandBytes(_:)","url":"\/documentation\/bitcoincrypto\/getrandbytes(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRandBytes"},{"text":"(","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"UInt8","preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"abstract":[{"type":"text","text":"Generates the specified number of random bytes."}],"role":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base16Encoder":{"navigatorTitle":[{"kind":"identifier","text":"Base16Encoder"}],"type":"topic","abstract":[{"type":"text","text":"Encodes data into hexadecimal strings."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Base16Encoder"}],"kind":"symbol","role":"symbol","url":"\/documentation\/bitcoincrypto\/base16encoder","title":"Base16Encoder","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Encoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Variant":{"title":"Bech32Variant","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Bech32Variant","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"Bech32Variant"}],"role":"symbol","url":"\/documentation\/bitcoincrypto\/bech32variant","kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Variant"},"https://swift-bitcoin.github.io/docc/bcnode/documentation/bitcoinnode/":{"titleInlineContent":[{"text":"Bitcoin Node (bcnode) Command","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/","title":"Bitcoin Node (bcnode) Command","url":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/","type":"link"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base16Decoder":{"navigatorTitle":[{"kind":"identifier","text":"Base16Decoder"}],"type":"topic","abstract":[{"type":"text","text":"Decodes raw data from hexadecimal strings."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Base16Decoder"}],"kind":"symbol","role":"symbol","url":"\/documentation\/bitcoincrypto\/base16decoder","title":"Base16Decoder","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Decoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SecretKey":{"abstract":[{"text":"Elliptic curve SECP256K1 secret key.","type":"text"}],"url":"\/documentation\/bitcoincrypto\/secretkey","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SecretKey","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SecretKey","kind":"identifier"}],"kind":"symbol","title":"SecretKey","role":"symbol","navigatorTitle":[{"text":"SecretKey","kind":"identifier"}],"type":"topic"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/PBKDF2":{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PBKDF2","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PBKDF2","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"Implementation of the Password-Based Key Derivation Function Version 2 (PBKDF2)  used by BIP39 seed generation from mnemonic.","type":"text"}],"title":"PBKDF2","role":"symbol","url":"\/documentation\/bitcoincrypto\/pbkdf2","navigatorTitle":[{"text":"PBKDF2","kind":"identifier"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base58Encoder":{"navigatorTitle":[{"kind":"identifier","text":"Base58Encoder"}],"type":"topic","abstract":[{"type":"text","text":"Produces checksumed Base58 strings used for legacy Bitcoin addresses."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Base58Encoder","kind":"identifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/bitcoincrypto\/base58encoder","title":"Base58Encoder","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Encoder"},"https://swift-bitcoin.github.io/docc/blockchain/documentation/bitcoinblockchain/":{"titleInlineContent":[{"text":"Blockchain Library","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","title":"Blockchain Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","type":"link"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SipHash":{"navigatorTitle":[{"kind":"identifier","text":"SipHash"}],"title":"SipHash","url":"\/documentation\/bitcoincrypto\/siphash","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SipHash","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SipHash","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Implementation of the SipHash 2-4 hashing algorithm used by BIP152 short transaction identifiers."}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Hash256":{"url":"\/documentation\/bitcoincrypto\/hash256","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash256","title":"Hash256","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Hash256"}],"abstract":[{"type":"text","text":"Hashes first using "},{"type":"reference","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","isActive":true},{"type":"text","text":" and applies "},{"type":"codeVoice","code":"SHA256"},{"type":"text","text":" again on finalize."}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Hash256","kind":"identifier"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SHA1":{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA1","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SHA1"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Insecure hash function still available as a SCRIPT operation code in Bitcoin."}],"title":"SHA1","role":"symbol","url":"\/documentation\/bitcoincrypto\/sha1","navigatorTitle":[{"kind":"identifier","text":"SHA1"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/HMAC":{"url":"\/documentation\/bitcoincrypto\/hmac","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/HMAC","title":"HMAC","type":"topic","kind":"symbol","navigatorTitle":[{"text":"HMAC","kind":"identifier"}],"abstract":[{"type":"text","text":"A hash-based message authentication algorithm used by BIP32 key derivation in Hierarchically Deterministic (HD) wallets."}],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HMAC","kind":"identifier"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/destroyECCSigningContext()":{"url":"\/documentation\/bitcoincrypto\/destroyeccsigningcontext()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"destroyECCSigningContext","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[],"kind":"symbol","title":"destroyECCSigningContext()","role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/destroyECCSigningContext()","type":"topic"},"https://swift-bitcoin.github.io/docc/rpc/documentation/bitcoinrpc/":{"titleInlineContent":[{"text":"RPC Library","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","title":"RPC Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","type":"link"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SHA256":{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SHA256","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Includes support for tagged hashes as introduced by BIP340."}],"title":"SHA256","role":"symbol","url":"\/documentation\/bitcoincrypto\/sha256","navigatorTitle":[{"text":"SHA256","kind":"identifier"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Hash160":{"type":"topic","role":"symbol","url":"\/documentation\/bitcoincrypto\/hash160","navigatorTitle":[{"kind":"identifier","text":"Hash160"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash160","kind":"symbol","title":"Hash160","abstract":[{"text":"Hashes first using ","type":"text"},{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","isActive":true,"type":"reference"},{"text":" and applies ","type":"text"},{"type":"reference","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/RIPEMD160","isActive":true},{"type":"text","text":" on finalize."}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Hash160"}]},"https://swift-bitcoin.github.io/docc/wallet/documentation/bitcoinwallet/":{"titleInlineContent":[{"text":"Wallet Library","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","title":"Wallet Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","type":"link"},"https://swift-bitcoin.github.io/docc/documentation/bitcoin/":{"titleInlineContent":[{"type":"text","text":"Swift Bitcoin “Umbrella” Library"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","title":"Swift Bitcoin “Umbrella” Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","type":"link"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Decoder":{"abstract":[{"type":"text","text":"Decodes raw data from Bech32 and Bech32m strings."}],"type":"topic","navigatorTitle":[{"text":"Bech32Decoder","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bech32Decoder","kind":"identifier"}],"kind":"symbol","title":"Bech32Decoder","role":"symbol","url":"\/documentation\/bitcoincrypto\/bech32decoder","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Encoder":{"kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Encoder","abstract":[{"type":"text","text":"Encodes raw data into Bech32 and Bech32m strings used in BIP173 and BIP350 address formats."}],"role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bech32Encoder","kind":"identifier"}],"url":"\/documentation\/bitcoincrypto\/bech32encoder","navigatorTitle":[{"kind":"identifier","text":"Bech32Encoder"}],"title":"Bech32Encoder"},"https://swift-bitcoin.github.io/docc/base/documentation/bitcoinbase/":{"titleInlineContent":[{"text":"Base Library","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","title":"Base Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","type":"link"},"https://swift-bitcoin.github.io/docc/bcutil/documentation/bitcoinutility/":{"titleInlineContent":[{"type":"text","text":"Bitcoin Utility (bcutil) Command"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","title":"Bitcoin Utility (bcutil) Command","url":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","type":"link"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SHA512":{"url":"\/documentation\/bitcoincrypto\/sha512","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA512","title":"SHA512","type":"topic","kind":"symbol","navigatorTitle":[{"text":"SHA512","kind":"identifier"}],"abstract":[{"type":"text","text":"Used indirectly by BIP32 and BIP39 implementations."}],"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SHA512","kind":"identifier"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SigType":{"navigatorTitle":[{"text":"SigType","kind":"identifier"}],"kind":"symbol","title":"SigType","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SigType","abstract":[{"type":"text","text":"Supported types of signature and signature encodings."}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SigType"}],"role":"symbol","url":"\/documentation\/bitcoincrypto\/sigtype"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/PubKey":{"kind":"symbol","title":"PubKey","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PubKey","url":"\/documentation\/bitcoincrypto\/pubkey","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PubKey"}],"navigatorTitle":[{"text":"PubKey","kind":"identifier"}],"abstract":[{"text":"Elliptic curve SECP256K1 public key.","type":"text"}],"role":"symbol"},"https://swift-bitcoin.github.io/docc/transport/documentation/bitcointransport/":{"titleInlineContent":[{"text":"Transport Library","type":"text"}],"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","title":"Transport Library","url":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","type":"link"},"doc://BitcoinCrypto/documentation/BitcoinCrypto":{"kind":"symbol","title":"BitcoinCrypto","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto","url":"\/documentation\/bitcoincrypto","type":"topic","abstract":[{"type":"text","text":"Elliptic curve cryptography, hash function library and Bitcoin-specific coders."}],"role":"collection"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/CryptoKit":{"url":"\/documentation\/bitcoincrypto\/cryptokit","role":"collection","kind":"symbol","abstract":[],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/CryptoKit","title":"CryptoKit","type":"topic"}}}