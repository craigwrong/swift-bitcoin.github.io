{"topicSections":[{"anchor":"Public-key-cryptography","title":"Public-key cryptography","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SecretKey","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PublicKey","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Signature"]},{"title":"Hash functions","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/RIPEMD160","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SipHash","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash256","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash160","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PBKDF2","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA1","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA512","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/HMAC"],"anchor":"Hash-functions"},{"title":"Data\/string coders","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Decoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Decoder"],"anchor":"Datastring-coders"},{"title":"Functions","anchor":"Functions","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/destroyECCSigningContext()","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/getRandBytes(_:)"],"generated":true},{"identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Variant","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SignatureType"],"title":"Enumerations","generated":true,"anchor":"Enumerations"},{"title":"Extended Modules","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/CryptoKit"],"generated":true,"anchor":"Extended-Modules"}],"metadata":{"roleHeading":"Swift Bitcoin Library","title":"BitcoinCrypto","externalID":"BitcoinCrypto","modules":[{"name":"BitcoinCrypto"}],"role":"collection","symbolKind":"module"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[[]]},"abstract":[{"text":"Elliptic curve cryptography, hash function library and Bitcoin-specific coders.","type":"text"}],"seeAlsoSections":[{"title":"Related Documentation","identifiers":["https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"],"anchor":"Related-Documentation"}],"variants":[{"paths":["\/documentation\/bitcoincrypto"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto","interfaceLanguage":"swift"},"primaryContentSections":[{"content":[{"type":"heading","text":"Overview","anchor":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use BitcoinCrypto to perform Bitcoin-related cryptographic operations:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Use public-key cryptography to create and evaluate ECDSA and Schnorr signatures.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Generate any of the cryptographically secure hashes used by the Bitcoin Protocol."}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"text":"Encode and decode binary data into and from strings using Base58 or Bech32 encoding.","type":"text"}]}],"kind":"content"}],"references":{"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Encoder":{"type":"topic","url":"\/documentation\/bitcoincrypto\/bech32encoder","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Encoder","abstract":[{"text":"Encodes raw data into Bech32 and Bech32m strings used in BIP173 and BIP350 address formats.","type":"text"}],"navigatorTitle":[{"text":"Bech32Encoder","kind":"identifier"}],"role":"symbol","title":"Bech32Encoder","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Bech32Encoder"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SHA256":{"kind":"symbol","url":"\/documentation\/bitcoincrypto\/sha256","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","type":"topic","abstract":[{"type":"text","text":"Includes support for tagged hashes as introduced by BIP340."}],"navigatorTitle":[{"text":"SHA256","kind":"identifier"}],"title":"SHA256","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SHA256"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/HMAC":{"title":"HMAC","kind":"symbol","url":"\/documentation\/bitcoincrypto\/hmac","navigatorTitle":[{"text":"HMAC","kind":"identifier"}],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"HMAC","kind":"identifier"}],"abstract":[{"type":"text","text":"A hash-based message authentication algorithm used by BIP32 key derivation in Hierarchically Deterministic (HD) wallets."}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/HMAC","type":"topic"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Variant":{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Variant","navigatorTitle":[{"kind":"identifier","text":"Bech32Variant"}],"abstract":[],"title":"Bech32Variant","type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bech32Variant","kind":"identifier"}],"role":"symbol","url":"\/documentation\/bitcoincrypto\/bech32variant","kind":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base16Decoder":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Base16Decoder","kind":"identifier"}],"abstract":[{"type":"text","text":"Decodes raw data from hexadecimal strings."}],"navigatorTitle":[{"text":"Base16Decoder","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/bitcoincrypto\/base16decoder","type":"topic","role":"symbol","title":"Base16Decoder","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Decoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base16Encoder":{"url":"\/documentation\/bitcoincrypto\/base16encoder","kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Encoder","title":"Base16Encoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Base16Encoder","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Base16Encoder"}],"abstract":[{"type":"text","text":"Encodes data into hexadecimal strings."}],"role":"symbol"},"https://swift-bitcoin.github.io/docc/base/documentation/bitcoinbase/":{"title":"Base Library","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","type":"link","titleInlineContent":[{"type":"text","text":"Base Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/"},"https://swift-bitcoin.github.io/docc/blockchain/documentation/bitcoinblockchain/":{"title":"Blockchain Library","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","type":"link","titleInlineContent":[{"text":"Blockchain Library","type":"text"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base58Decoder":{"url":"\/documentation\/bitcoincrypto\/base58decoder","kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Decoder","title":"Base58Decoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Base58Decoder","kind":"identifier"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Base58Decoder"}],"abstract":[{"type":"text","text":"Decodes raw data from Base58 strings."}],"role":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto":{"url":"\/documentation\/bitcoincrypto","kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto","title":"BitcoinCrypto","type":"topic","abstract":[{"type":"text","text":"Elliptic curve cryptography, hash function library and Bitcoin-specific coders."}],"role":"collection"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SipHash":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SipHash","kind":"identifier"}],"abstract":[{"type":"text","text":"Implementation of the SipHash 2-4 hashing algorithm used by BIP152 short transaction identifiers."}],"navigatorTitle":[{"kind":"identifier","text":"SipHash"}],"kind":"symbol","url":"\/documentation\/bitcoincrypto\/siphash","type":"topic","role":"symbol","title":"SipHash","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SipHash"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SignatureType":{"kind":"symbol","abstract":[{"text":"Supported types of signature and signature encodings.","type":"text"}],"navigatorTitle":[{"text":"SignatureType","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SignatureType","url":"\/documentation\/bitcoincrypto\/signaturetype","role":"symbol","title":"SignatureType","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SignatureType"}]},"https://swift-bitcoin.github.io/docc/bcnode/documentation/bitcoinnode/":{"title":"Bitcoin Node (bcnode) Command","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/","type":"link","titleInlineContent":[{"type":"text","text":"Bitcoin Node (bcnode) Command"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"},"https://swift-bitcoin.github.io/docc/transport/documentation/bitcointransport/":{"title":"Transport Library","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","type":"link","titleInlineContent":[{"type":"text","text":"Transport Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Signature":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Signature"}],"role":"symbol","type":"topic","title":"Signature","navigatorTitle":[{"text":"Signature","kind":"identifier"}],"abstract":[{"text":"Elliptic curve SECP256K1 signature supporting both ECDSA and Schnorr algorithms.","type":"text"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Signature","url":"\/documentation\/bitcoincrypto\/signature","kind":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/PublicKey":{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PublicKey","role":"symbol","type":"topic","title":"PublicKey","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PublicKey"}],"url":"\/documentation\/bitcoincrypto\/publickey","kind":"symbol","navigatorTitle":[{"text":"PublicKey","kind":"identifier"}],"abstract":[{"text":"Elliptic curve SECP256K1 public key.","type":"text"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/RIPEMD160":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RIPEMD160","kind":"identifier"}],"title":"RIPEMD160","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"RACE Integrity Primitives Evaluation (RIPE) 160-bit Message Digest (MD) implementation."}],"url":"\/documentation\/bitcoincrypto\/ripemd160","type":"topic","navigatorTitle":[{"kind":"identifier","text":"RIPEMD160"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/RIPEMD160"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Hash256":{"abstract":[{"text":"Hashes first using ","type":"text"},{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","isActive":true,"type":"reference"},{"text":" and applies ","type":"text"},{"code":"SHA256","type":"codeVoice"},{"type":"text","text":" again on finalize."}],"title":"Hash256","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash256","url":"\/documentation\/bitcoincrypto\/hash256","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Hash256","kind":"identifier"}],"navigatorTitle":[{"text":"Hash256","kind":"identifier"}],"role":"symbol","kind":"symbol"},"https://swift-bitcoin.github.io/docc/wallet/documentation/bitcoinwallet/":{"title":"Wallet Library","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","type":"link","titleInlineContent":[{"type":"text","text":"Wallet Library"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/PBKDF2":{"abstract":[{"type":"text","text":"Implementation of the Password-Based Key Derivation Function Version 2 (PBKDF2)  used by BIP39 seed generation from mnemonic."}],"role":"symbol","url":"\/documentation\/bitcoincrypto\/pbkdf2","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PBKDF2"}],"navigatorTitle":[{"text":"PBKDF2","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PBKDF2","type":"topic","title":"PBKDF2"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SecretKey":{"abstract":[{"text":"Elliptic curve SECP256K1 secret key.","type":"text"}],"title":"SecretKey","kind":"symbol","url":"\/documentation\/bitcoincrypto\/secretkey","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SecretKey","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SecretKey"}],"role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SecretKey","kind":"identifier"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SHA1":{"abstract":[{"text":"Insecure hash function still available as a SCRIPT operation code in Bitcoin.","type":"text"}],"role":"symbol","url":"\/documentation\/bitcoincrypto\/sha1","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SHA1"}],"navigatorTitle":[{"text":"SHA1","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA1","type":"topic","title":"SHA1"},"https://swift-bitcoin.github.io/docc/bcutil/documentation/bitcoinutility/":{"title":"Bitcoin Utility (bcutil) Command","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","type":"link","titleInlineContent":[{"type":"text","text":"Bitcoin Utility (bcutil) Command"}],"url":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/CryptoKit":{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/CryptoKit","abstract":[],"title":"CryptoKit","type":"topic","role":"collection","url":"\/documentation\/bitcoincrypto\/cryptokit","kind":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SHA512":{"abstract":[{"type":"text","text":"Used indirectly by BIP32 and BIP39 implementations."}],"role":"symbol","url":"\/documentation\/bitcoincrypto\/sha512","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SHA512"}],"navigatorTitle":[{"text":"SHA512","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA512","type":"topic","title":"SHA512"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/destroyECCSigningContext()":{"role":"symbol","title":"destroyECCSigningContext()","url":"\/documentation\/bitcoincrypto\/destroyeccsigningcontext()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"destroyECCSigningContext","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/destroyECCSigningContext()"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base58Encoder":{"type":"topic","title":"Base58Encoder","role":"symbol","url":"\/documentation\/bitcoincrypto\/base58encoder","kind":"symbol","abstract":[{"text":"Produces checksumed Base58 strings used for legacy Bitcoin addresses.","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Base58Encoder","kind":"identifier"}],"navigatorTitle":[{"text":"Base58Encoder","kind":"identifier"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Encoder"},"https://swift-bitcoin.github.io/docc/documentation/bitcoin/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","titleInlineContent":[{"type":"text","text":"Swift Bitcoin “Umbrella” Library"}],"title":"Swift Bitcoin “Umbrella” Library","type":"link","url":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/getRandBytes(_:)":{"role":"symbol","title":"getRandBytes(_:)","url":"\/documentation\/bitcoincrypto\/getrandbytes(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandBytes"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> ["},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"]"}],"kind":"symbol","abstract":[{"type":"text","text":"Generates the specified number of random bytes."}],"type":"topic","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/getRandBytes(_:)"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Hash160":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Hash160","kind":"identifier"}],"kind":"symbol","role":"symbol","title":"Hash160","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash160","url":"\/documentation\/bitcoincrypto\/hash160","navigatorTitle":[{"kind":"identifier","text":"Hash160"}],"type":"topic","abstract":[{"text":"Hashes first using ","type":"text"},{"type":"reference","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","isActive":true},{"type":"text","text":" and applies "},{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/RIPEMD160","isActive":true,"type":"reference"},{"type":"text","text":" on finalize."}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Decoder":{"type":"topic","url":"\/documentation\/bitcoincrypto\/bech32decoder","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder","abstract":[{"text":"Decodes raw data from Bech32 and Bech32m strings.","type":"text"}],"navigatorTitle":[{"text":"Bech32Decoder","kind":"identifier"}],"role":"symbol","title":"Bech32Decoder","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Bech32Decoder","kind":"identifier"}]},"https://swift-bitcoin.github.io/docc/rpc/documentation/bitcoinrpc/":{"identifier":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","titleInlineContent":[{"type":"text","text":"RPC Library"}],"title":"RPC Library","type":"link","url":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/"}}}