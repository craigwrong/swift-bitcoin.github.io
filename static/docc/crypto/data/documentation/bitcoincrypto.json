{"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"role":"collection","roleHeading":"Swift Bitcoin Library","modules":[{"name":"BitcoinCrypto"}],"symbolKind":"module","title":"BitcoinCrypto","externalID":"BitcoinCrypto"},"topicSections":[{"identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SecretKey","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PublicKey","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Signature"],"anchor":"Public-key-cryptography","title":"Public-key cryptography"},{"anchor":"Hash-functions","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/RIPEMD160","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SipHash","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash256","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash160","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PBKDF2","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA1","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA512","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/HMAC"],"title":"Hash functions"},{"anchor":"Datastring-coders","title":"Data\/string coders","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Decoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Encoder","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Decoder"]},{"identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/destroyECCSigningContext()","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/getRandBytes(_:)"],"title":"Functions","anchor":"Functions","generated":true},{"title":"Enumerations","anchor":"Enumerations","generated":true,"identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Variant","doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SignatureType"]},{"generated":true,"anchor":"Extended-Modules","title":"Extended Modules","identifiers":["doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/CryptoKit"]}],"seeAlsoSections":[{"anchor":"Related-Documentation","title":"Related Documentation","identifiers":["https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/"]}],"primaryContentSections":[{"content":[{"anchor":"Overview","type":"heading","level":2,"text":"Overview"},{"inlineContent":[{"type":"text","text":"Use BitcoinCrypto to perform Bitcoin-related cryptographic operations:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use public-key cryptography to create and evaluate ECDSA and Schnorr signatures."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Generate any of the cryptographically secure hashes used by the Bitcoin Protocol."}]}]}],"type":"unorderedList"},{"inlineContent":[{"type":"text","text":"Encode and decode binary data into and from strings using Base58 or Bech32 encoding."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"identifier":{"url":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto","interfaceLanguage":"swift"},"abstract":[{"text":"Elliptic curve cryptography, hash function library and Bitcoin-specific coders.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/bitcoincrypto"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"https://swift-bitcoin.github.io/docc/bcutil/documentation/bitcoinutility/":{"url":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcutil\/documentation\/bitcoinutility\/","title":"Bitcoin Utility (bcutil) Command","titleInlineContent":[{"text":"Bitcoin Utility (bcutil) Command","type":"text"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SipHash":{"abstract":[{"text":"Implementation of the SipHash 2-4 hashing algorithm used by BIP152 short transaction identifiers.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SipHash","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SipHash"}],"url":"\/documentation\/bitcoincrypto\/siphash","title":"SipHash","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SipHash","type":"topic","kind":"symbol","role":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base16Decoder":{"navigatorTitle":[{"text":"Base16Decoder","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Base16Decoder"}],"type":"topic","title":"Base16Decoder","kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Decoder","role":"symbol","abstract":[{"type":"text","text":"Decodes raw data from hexadecimal strings."}],"url":"\/documentation\/bitcoincrypto\/base16decoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SHA1":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SHA1"}],"title":"SHA1","kind":"symbol","url":"\/documentation\/bitcoincrypto\/sha1","role":"symbol","navigatorTitle":[{"text":"SHA1","kind":"identifier"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA1","abstract":[{"type":"text","text":"Insecure hash function still available as a SCRIPT operation code in Bitcoin."}],"type":"topic"},"https://swift-bitcoin.github.io/docc/rpc/documentation/bitcoinrpc/":{"url":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/rpc\/documentation\/bitcoinrpc\/","title":"RPC Library","titleInlineContent":[{"text":"RPC Library","type":"text"}]},"https://swift-bitcoin.github.io/docc/base/documentation/bitcoinbase/":{"url":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/base\/documentation\/bitcoinbase\/","title":"Base Library","titleInlineContent":[{"text":"Base Library","type":"text"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base58Encoder":{"navigatorTitle":[{"text":"Base58Encoder","kind":"identifier"}],"abstract":[{"text":"Produces checksumed Base58 strings used for legacy Bitcoin addresses.","type":"text"}],"role":"symbol","url":"\/documentation\/bitcoincrypto\/base58encoder","title":"Base58Encoder","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Base58Encoder"}],"type":"topic","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Encoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SHA256":{"url":"\/documentation\/bitcoincrypto\/sha256","abstract":[{"text":"Includes support for tagged hashes as introduced by BIP340.","type":"text"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","title":"SHA256","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SHA256"}],"navigatorTitle":[{"kind":"identifier","text":"SHA256"}],"role":"symbol","kind":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/PBKDF2":{"title":"PBKDF2","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PBKDF2","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"PBKDF2","kind":"identifier"}],"navigatorTitle":[{"text":"PBKDF2","kind":"identifier"}],"abstract":[{"type":"text","text":"Implementation of the Password-Based Key Derivation Function Version 2 (PBKDF2)  used by BIP39 seed generation from mnemonic."}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/bitcoincrypto\/pbkdf2"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/getRandBytes(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"getRandBytes"},{"kind":"text","text":"("},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> [","kind":"text"},{"preciseIdentifier":"s:s5UInt8V","kind":"typeIdentifier","text":"UInt8"},{"text":"]","kind":"text"}],"type":"topic","title":"getRandBytes(_:)","kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/getRandBytes(_:)","role":"symbol","abstract":[{"type":"text","text":"Generates the specified number of random bytes."}],"url":"\/documentation\/bitcoincrypto\/getrandbytes(_:)"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Hash256":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"Hash256","kind":"identifier"}],"title":"Hash256","kind":"symbol","url":"\/documentation\/bitcoincrypto\/hash256","role":"symbol","navigatorTitle":[{"text":"Hash256","kind":"identifier"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash256","abstract":[{"type":"text","text":"Hashes first using "},{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","isActive":true,"type":"reference"},{"text":" and applies ","type":"text"},{"type":"codeVoice","code":"SHA256"},{"type":"text","text":" again on finalize."}],"type":"topic"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Signature":{"url":"\/documentation\/bitcoincrypto\/signature","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Signature"}],"abstract":[{"type":"text","text":"Elliptic curve SECP256K1 signature supporting both ECDSA and Schnorr algorithms."}],"type":"topic","title":"Signature","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"Signature","kind":"identifier"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Signature"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/destroyECCSigningContext()":{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/destroyECCSigningContext()","type":"topic","kind":"symbol","title":"destroyECCSigningContext()","url":"\/documentation\/bitcoincrypto\/destroyeccsigningcontext()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"destroyECCSigningContext","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[],"role":"symbol"},"https://swift-bitcoin.github.io/docc/bcnode/documentation/bitcoinnode/":{"url":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/","type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/bcnode\/documentation\/bitcoinnode\/","title":"Bitcoin Node (bcnode) Command","titleInlineContent":[{"text":"Bitcoin Node (bcnode) Command","type":"text"}]},"https://swift-bitcoin.github.io/docc/wallet/documentation/bitcoinwallet/":{"url":"https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/wallet\/documentation\/bitcoinwallet\/","title":"Wallet Library","titleInlineContent":[{"type":"text","text":"Wallet Library"}]},"https://swift-bitcoin.github.io/docc/blockchain/documentation/bitcoinblockchain/":{"url":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/blockchain\/documentation\/bitcoinblockchain\/","title":"Blockchain Library","titleInlineContent":[{"text":"Blockchain Library","type":"text"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto":{"type":"topic","title":"BitcoinCrypto","url":"\/documentation\/bitcoincrypto","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto","abstract":[{"type":"text","text":"Elliptic curve cryptography, hash function library and Bitcoin-specific coders."}],"role":"collection","kind":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/PublicKey":{"role":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/PublicKey","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"PublicKey"}],"navigatorTitle":[{"text":"PublicKey","kind":"identifier"}],"url":"\/documentation\/bitcoincrypto\/publickey","type":"topic","title":"PublicKey","abstract":[{"type":"text","text":"Elliptic curve SECP256K1 public key."}],"kind":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base58Decoder":{"navigatorTitle":[{"text":"Base58Decoder","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Base58Decoder","kind":"identifier"}],"type":"topic","title":"Base58Decoder","kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base58Decoder","role":"symbol","abstract":[{"text":"Decodes raw data from Base58 strings.","type":"text"}],"url":"\/documentation\/bitcoincrypto\/base58decoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Encoder":{"navigatorTitle":[{"text":"Bech32Encoder","kind":"identifier"}],"abstract":[{"type":"text","text":"Encodes raw data into Bech32 and Bech32m strings used in BIP173 and BIP350 address formats."}],"role":"symbol","url":"\/documentation\/bitcoincrypto\/bech32encoder","title":"Bech32Encoder","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bech32Encoder"}],"type":"topic","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Encoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SecretKey":{"url":"\/documentation\/bitcoincrypto\/secretkey","title":"SecretKey","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SecretKey","navigatorTitle":[{"kind":"identifier","text":"SecretKey"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Elliptic curve SECP256K1 secret key."}],"kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"SecretKey","kind":"identifier"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Variant":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Bech32Variant","kind":"identifier"}],"url":"\/documentation\/bitcoincrypto\/bech32variant","role":"symbol","title":"Bech32Variant","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Variant","type":"topic","kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Bech32Variant"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/HMAC":{"url":"\/documentation\/bitcoincrypto\/hmac","title":"HMAC","role":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HMAC"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/HMAC","kind":"symbol","abstract":[{"type":"text","text":"A hash-based message authentication algorithm used by BIP32 key derivation in Hierarchically Deterministic (HD) wallets."}],"navigatorTitle":[{"kind":"identifier","text":"HMAC"}]},"https://swift-bitcoin.github.io/docc/transport/documentation/bitcointransport/":{"url":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/transport\/documentation\/bitcointransport\/","title":"Transport Library","titleInlineContent":[{"type":"text","text":"Transport Library"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Base16Encoder":{"navigatorTitle":[{"text":"Base16Encoder","kind":"identifier"}],"abstract":[{"text":"Encodes data into hexadecimal strings.","type":"text"}],"role":"symbol","url":"\/documentation\/bitcoincrypto\/base16encoder","title":"Base16Encoder","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Base16Encoder"}],"type":"topic","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Base16Encoder"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SignatureType":{"title":"SignatureType","type":"topic","url":"\/documentation\/bitcoincrypto\/signaturetype","role":"symbol","abstract":[{"text":"Supported types of signature and signature encodings.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"SignatureType","kind":"identifier"}],"navigatorTitle":[{"text":"SignatureType","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SignatureType"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Hash160":{"url":"\/documentation\/bitcoincrypto\/hash160","abstract":[{"type":"text","text":"Hashes first using "},{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA256","isActive":true,"type":"reference"},{"text":" and applies ","type":"text"},{"type":"reference","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/RIPEMD160","isActive":true},{"type":"text","text":" on finalize."}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Hash160","type":"topic","title":"Hash160","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Hash160"}],"navigatorTitle":[{"kind":"identifier","text":"Hash160"}],"role":"symbol","kind":"symbol"},"doc://BitcoinCrypto/documentation/BitcoinCrypto/CryptoKit":{"type":"topic","kind":"symbol","identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/CryptoKit","title":"CryptoKit","url":"\/documentation\/bitcoincrypto\/cryptokit","role":"collection","abstract":[]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/SHA512":{"url":"\/documentation\/bitcoincrypto\/sha512","title":"SHA512","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SHA512"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/SHA512","kind":"symbol","abstract":[{"type":"text","text":"Used indirectly by BIP32 and BIP39 implementations."}],"navigatorTitle":[{"text":"SHA512","kind":"identifier"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/RIPEMD160":{"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/RIPEMD160","url":"\/documentation\/bitcoincrypto\/ripemd160","abstract":[{"text":"RACE Integrity Primitives Evaluation (RIPE) 160-bit Message Digest (MD) implementation.","type":"text"}],"type":"topic","title":"RIPEMD160","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RIPEMD160","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"RIPEMD160"}],"role":"symbol"},"https://swift-bitcoin.github.io/docc/documentation/bitcoin/":{"url":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","type":"link","identifier":"https:\/\/swift-bitcoin.github.io\/docc\/documentation\/bitcoin\/","title":"Swift Bitcoin “Umbrella” Library","titleInlineContent":[{"type":"text","text":"Swift Bitcoin “Umbrella” Library"}]},"doc://BitcoinCrypto/documentation/BitcoinCrypto/Bech32Decoder":{"url":"\/documentation\/bitcoincrypto\/bech32decoder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Bech32Decoder"}],"abstract":[{"text":"Decodes raw data from Bech32 and Bech32m strings.","type":"text"}],"type":"topic","title":"Bech32Decoder","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"Bech32Decoder"}],"identifier":"doc:\/\/BitcoinCrypto\/documentation\/BitcoinCrypto\/Bech32Decoder"}}}