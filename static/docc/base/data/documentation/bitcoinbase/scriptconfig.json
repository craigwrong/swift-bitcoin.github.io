{"abstract":[{"type":"text","text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A)."}],"identifier":{"url":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/BitcoinBase\/documentation\/BitcoinBase"]]},"topicSections":[{"anchor":"Initializers","title":"Initializers","generated":true,"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)"]},{"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"anchor":"Type-Properties","generated":true,"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey"],"title":"Type Properties"},{"generated":true,"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"relationshipsSections":[{"identifiers":["doc:\/\/BitcoinBase\/SQ","doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","doc:\/\/BitcoinBase\/s9OptionSetP","doc:\/\/BitcoinBase\/SY","doc:\/\/BitcoinBase\/s8SendableP","doc:\/\/BitcoinBase\/s10SetAlgebraP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"metadata":{"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ScriptConfig"}],"symbolKind":"struct","role":"symbol","modules":[{"name":"Bitcoin Base"}],"navigatorTitle":[{"kind":"identifier","text":"ScriptConfig"}],"title":"ScriptConfig","remoteSource":{"fileName":"ScriptConfig.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/src\/bitcoin-base\/script\/ScriptConfig.swift#L4"},"externalID":"s:11BitcoinBase12ScriptConfigV"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ScriptConfig","kind":"identifier"}],"platforms":["macOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/bitcoinbase\/scriptconfig"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","references":{"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictDER":{"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictder","abstract":[{"type":"text","text":"BIP66 (consensus) and BIP62 rule 1 (policy)"},{"type":"text","text":" "},{"type":"text","text":"Passing a non-strict-DER signature to a checksig operation causes script failure."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"strictDER"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"title":"strictDER","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","role":"symbol","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/lowS":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/lows","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lowS"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","title":"lowS","abstract":[{"type":"text","text":"BIP62 rule 5"},{"type":"text","text":" "},{"type":"text","text":"Passing a non-strict-DER signature or one with S > order\/2 to a checksig operation causes script failure."}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableTaprootVersion":{"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradabletaprootversion","abstract":[{"type":"text","text":"Making unknown Taproot leaf versions non-standard."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradableTaprootVersion"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"discourageUpgradableTaprootVersion","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","role":"symbol","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/OptionSet-Implementations":{"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/bitcoinbase\/scriptconfig\/optionset-implementations","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","title":"OptionSet Implementations","abstract":[]},"doc://BitcoinBase/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s8SendableP"},"doc://BitcoinBase/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/payToScriptHash":{"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/paytoscripthash","abstract":[{"type":"text","text":"BIP16"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"payToScriptHash"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"payToScriptHash","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","role":"symbol","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witnessCompressedPublicKey":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/witnesscompressedpublickey","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"witnessCompressedPublicKey"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey","title":"witnessCompressedPublicKey","abstract":[{"type":"text","text":"BIP141: Only compressed public keys are accepted in P2WPKH and P2WSH (See BIP143). Relay\/mining policy rule 1."}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkLockTimeVerify":{"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/checklocktimeverify","abstract":[{"type":"text","text":"BIP65: Evaluate "},{"type":"codeVoice","code":"OP_CHECKLOCKTIMEVERIFY"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkLockTimeVerify"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"title":"checkLockTimeVerify","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","role":"symbol","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/taproot":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/taproot","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"taproot","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","title":"taproot","abstract":[{"type":"text","text":"BIP341, BIP342: Taproot\/Tapscript validation."}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalData":{"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/minimaldata","abstract":[{"type":"text","text":"BIP62 rule 3-4"},{"type":"text","text":" "},{"type":"text","text":"Require minimal encodings for all push operations ("},{"type":"codeVoice","code":"OP_0"},{"type":"text","text":"…"},{"type":"codeVoice","code":"OP_16"},{"type":"text","text":", "},{"code":"OP_1NEGATE","type":"codeVoice"},{"type":"text","text":" where possible, direct  pushes up to 75 bytes, "},{"type":"codeVoice","code":"OP_PUSHDATA"},{"type":"text","text":" up to 255 bytes, "},{"type":"codeVoice","code":"OP_PUSHDATA2"},{"type":"text","text":" for anything larger)."},{"type":"text","text":" "},{"type":"text","text":"Evaluating any other push causes the script to fail (BIP62 rule 3)."},{"text":" ","type":"text"},{"type":"text","text":"In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4)."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"minimalData"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"title":"minimalData","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","role":"symbol","kind":"symbol"},"doc://BitcoinBase/s9OptionSetP":{"title":"Swift.OptionSet","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s9OptionSetP"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/mandatory":{"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/mandatory","abstract":[{"type":"text","text":"Mandatory script verification flags that all new transactions must comply with for them to be valid. Failing one of these tests may trigger a DoS ban. See "},{"type":"codeVoice","code":"CheckInputScripts()"},{"type":"text","text":" on Bitcoin Core  for details."},{"text":" ","type":"text"},{"text":"Note that this does not affect consensus validity. See ","type":"text"},{"type":"codeVoice","code":"GetBlockScriptFlags()"},{"type":"text","text":" for that."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mandatory","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"title":"mandatory","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","role":"symbol","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/rawValue":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/rawvalue","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue","kind":"symbol","abstract":[],"type":"topic","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"title":"rawValue"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/standard":{"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/standard","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"standard","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","title":"standard","abstract":[{"type":"text","text":"Standard script verification flags that standard transactions will comply with. However we do not ban\/disconnect nodes that forward txs violating the additional (non-mandatory) rules here, to improve forwards and backwards compatability."}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableWitnessProgram":{"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablewitnessprogram","abstract":[{"type":"text","text":"Making v2-v16 witness program non-standard."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"discourageUpgradableWitnessProgram","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"discourageUpgradableWitnessProgram","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","role":"symbol","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalIf":{"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/minimalif","abstract":[{"type":"text","text":"BIP141: The argument of OP_IF\/NOTIF in P2WSH must be minimal. Relay\/mining policy rule 2."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"minimalIf"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"title":"minimalIf","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","role":"symbol","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/Equatable-Implementations":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/equatable-implementations","title":"Equatable Implementations","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","type":"topic","kind":"article","role":"collectionGroup","abstract":[]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig":{"type":"topic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScriptConfig"}],"abstract":[{"type":"text","text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A)."}],"navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}],"url":"\/documentation\/bitcoinbase\/scriptconfig","title":"ScriptConfig","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictEncoding":{"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictencoding","abstract":[{"type":"text","text":"Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure."},{"type":"text","text":" "},{"type":"text","text":"Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure."},{"text":" ","type":"text"},{"type":"text","text":"Not used or intended as a consensus rule."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"strictEncoding"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"strictEncoding","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","role":"symbol","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkSequenceVerify":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/checksequenceverify","title":"checkSequenceVerify","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"checkSequenceVerify","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"abstract":[{"type":"text","text":"BIP112: Evaluate "},{"type":"codeVoice","code":"OP_CHECKSEQUENCEVERIFY"},{"text":".","type":"text"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullDummy":{"kind":"symbol","abstract":[{"text":"BIP62 rule 7","type":"text"},{"text":" ","type":"text"},{"text":"Verify dummy stack item consumed by ","type":"text"},{"type":"codeVoice","code":"CHECKMULTISIG"},{"text":" is of zero-length.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"nullDummy","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/nulldummy","type":"topic","title":"nullDummy","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/cleanStack":{"role":"symbol","kind":"symbol","title":"cleanStack","abstract":[{"type":"text","text":"BIP62 rule 6"},{"type":"text","text":" "},{"type":"text","text":"Require that only a single stack element remains after evaluation. Only to be used with P2SH."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cleanStack"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/cleanstack","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradablePublicKeyType":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"discourageUpgradablePublicKeyType"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablepublickeytype","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","title":"discourageUpgradablePublicKeyType","abstract":[{"type":"text","text":"Making unknown public key versions (in BIP342 scripts) non-standard."}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/pushOnly":{"kind":"symbol","abstract":[{"type":"text","text":"BIP62 rule 2"},{"text":" ","type":"text"},{"text":"Using a non-push operator in the scriptSig causes script failure.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pushOnly","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/pushonly","type":"topic","title":"pushOnly","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase":{"url":"\/documentation\/bitcoinbase","abstract":[{"text":"Basic elements of the Bitcoin protocol, namely transactions and scripts.","type":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase","role":"collection","type":"topic","kind":"symbol","title":"Bitcoin Base"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableNoOps":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradableNoOps"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablenoops","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","title":"discourageUpgradableNoOps","abstract":[{"text":"Discourage use of NOPs reserved for upgrades (NOP1-10)","type":"text"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageOpSuccess":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageopsuccess","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Making unknown "},{"type":"codeVoice","code":"OP_SUCCESS"},{"type":"text","text":" non-standard."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"discourageOpSuccess","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"title":"discourageOpSuccess","kind":"symbol"},"doc://BitcoinBase/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/BitcoinBase\/SQ"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witness":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/witness","type":"topic","role":"symbol","abstract":[{"type":"text","text":"BIP141: Verify witness program (all witness versions)."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"witness"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"witness","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/constantScriptCode":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"constantScriptCode","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","abstract":[{"type":"text","text":"Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts"}],"role":"symbol","type":"topic","kind":"symbol","title":"constantScriptCode","url":"\/documentation\/bitcoinbase\/scriptconfig\/constantscriptcode"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/SetAlgebra-Implementations":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/setalgebra-implementations","kind":"article","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations","role":"collectionGroup","type":"topic","abstract":[],"title":"SetAlgebra Implementations"},"doc://BitcoinBase/s10SetAlgebraP":{"type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s10SetAlgebraP","title":"Swift.SetAlgebra"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullFail":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nullFail","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","abstract":[{"type":"text","text":"BIP141: Signature(s) must be null vector(s) if an OP_CHECKSIG or OP_CHECKMULTISIG is failed (for both pre-segregated witness script and P2WSH. See BIP146). Relay\/mining policy rule 3."}],"role":"symbol","type":"topic","kind":"symbol","title":"nullFail","url":"\/documentation\/bitcoinbase\/scriptconfig\/nullfail"},"doc://BitcoinBase/SY":{"type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/SY","title":"Swift.RawRepresentable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/init(rawValue:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)","abstract":[],"role":"symbol","type":"topic","kind":"symbol","title":"init(rawValue:)","url":"\/documentation\/bitcoinbase\/scriptconfig\/init(rawvalue:)"}}}