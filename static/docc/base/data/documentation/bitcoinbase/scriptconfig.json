{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoinbase\/scriptconfig"]}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/BitcoinBase\/SQ","doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","doc:\/\/BitcoinBase\/s9OptionSetP","doc:\/\/BitcoinBase\/SY","doc:\/\/BitcoinBase\/s8SendableP","doc:\/\/BitcoinBase\/s10SetAlgebraP"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"metadata":{"role":"symbol","externalID":"s:11BitcoinBase12ScriptConfigV","modules":[{"name":"Bitcoin Base"}],"navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}],"remoteSource":{"fileName":"ScriptConfig.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/src\/bitcoin-base\/script\/ScriptConfig.swift#L4"},"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScriptConfig"}],"roleHeading":"Structure","symbolKind":"struct","title":"ScriptConfig"},"abstract":[{"text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/BitcoinBase\/documentation\/BitcoinBase"]]},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)"],"title":"Initializers","generated":true},{"generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue"],"title":"Instance Properties"},{"title":"Type Properties","generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey"]},{"generated":true,"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ScriptConfig","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig"},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/taproot":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/taproot","role":"symbol","kind":"symbol","title":"taproot","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"taproot","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"abstract":[{"type":"text","text":"BIP341, BIP342: Taproot\/Tapscript validation."}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageOpSuccess":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","abstract":[{"type":"text","text":"Making unknown "},{"code":"OP_SUCCESS","type":"codeVoice"},{"type":"text","text":" non-standard."}],"type":"topic","title":"discourageOpSuccess","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageopsuccess","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"discourageOpSuccess","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/payToScriptHash":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","abstract":[{"type":"text","text":"BIP16"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/paytoscripthash","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"payToScriptHash","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"role":"symbol","kind":"symbol","title":"payToScriptHash"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkLockTimeVerify":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/checklocktimeverify","role":"symbol","kind":"symbol","title":"checkLockTimeVerify","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"checkLockTimeVerify"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"abstract":[{"type":"text","text":"BIP65: Evaluate "},{"type":"codeVoice","code":"OP_CHECKLOCKTIMEVERIFY"},{"type":"text","text":"."}],"type":"topic"},"doc://BitcoinBase/SQ":{"identifier":"doc:\/\/BitcoinBase\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://BitcoinBase/s25ExpressibleByArrayLiteralP":{"identifier":"doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","type":"unresolvable","title":"Swift.ExpressibleByArrayLiteral"},"doc://BitcoinBase/documentation/BitcoinBase":{"kind":"symbol","role":"collection","url":"\/documentation\/bitcoinbase","abstract":[{"type":"text","text":"Basic elements of the Bitcoin protocol, namely transactions and scripts."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase","type":"topic","title":"Bitcoin Base"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/lowS":{"abstract":[{"text":"BIP62 rule 5","type":"text"},{"text":" ","type":"text"},{"text":"Passing a non-strict-DER signature or one with S > order\/2 to a checksig operation causes script failure.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/lows","type":"topic","title":"lowS","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"lowS","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/rawValue":{"fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue","type":"topic","title":"rawValue","url":"\/documentation\/bitcoinbase\/scriptconfig\/rawvalue","kind":"symbol","role":"symbol","abstract":[]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalIf":{"type":"topic","role":"symbol","title":"minimalIf","abstract":[{"type":"text","text":"BIP141: The argument of OP_IF\/NOTIF in P2WSH must be minimal. Relay\/mining policy rule 2."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/minimalif","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"minimalIf","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableWitnessProgram":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablewitnessprogram","title":"discourageUpgradableWitnessProgram","type":"topic","abstract":[{"text":"Making v2-v16 witness program non-standard.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"discourageUpgradableWitnessProgram"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableNoOps":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradableNoOps"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","type":"topic","abstract":[{"type":"text","text":"Discourage use of NOPs reserved for upgrades (NOP1-10)"}],"title":"discourageUpgradableNoOps","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablenoops","kind":"symbol","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradablePublicKeyType":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradablePublicKeyType"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablepublickeytype","role":"symbol","kind":"symbol","type":"topic","title":"discourageUpgradablePublicKeyType","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","abstract":[{"text":"Making unknown public key versions (in BIP342 scripts) non-standard.","type":"text"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkSequenceVerify":{"abstract":[{"type":"text","text":"BIP112: Evaluate "},{"code":"OP_CHECKSEQUENCEVERIFY","type":"codeVoice"},{"type":"text","text":"."}],"title":"checkSequenceVerify","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/checksequenceverify","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"checkSequenceVerify"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","type":"topic","kind":"symbol"},"doc://BitcoinBase/s8SendableP":{"identifier":"doc:\/\/BitcoinBase\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableTaprootVersion":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradabletaprootversion","role":"symbol","kind":"symbol","title":"discourageUpgradableTaprootVersion","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"discourageUpgradableTaprootVersion"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Making unknown Taproot leaf versions non-standard."}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictDER":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","abstract":[{"type":"text","text":"BIP66 (consensus) and BIP62 rule 1 (policy)"},{"type":"text","text":" "},{"text":"Passing a non-strict-DER signature to a checksig operation causes script failure.","type":"text"}],"type":"topic","title":"strictDER","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictder","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictDER"},{"text":": ","kind":"text"},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"role":"symbol"},"doc://BitcoinBase/s9OptionSetP":{"identifier":"doc:\/\/BitcoinBase\/s9OptionSetP","type":"unresolvable","title":"Swift.OptionSet"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/standard":{"title":"standard","kind":"symbol","abstract":[{"text":"Standard script verification flags that standard transactions will comply with. However we do not ban\/disconnect nodes that forward txs violating the additional (non-mandatory) rules here, to improve forwards and backwards compatability.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","url":"\/documentation\/bitcoinbase\/scriptconfig\/standard","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"standard"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/SetAlgebra-Implementations":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations","abstract":[],"url":"\/documentation\/bitcoinbase\/scriptconfig\/setalgebra-implementations","type":"topic","role":"collectionGroup","kind":"article","title":"SetAlgebra Implementations"},"doc://BitcoinBase/SY":{"identifier":"doc:\/\/BitcoinBase\/SY","type":"unresolvable","title":"Swift.RawRepresentable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/cleanStack":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanStack"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","type":"topic","title":"cleanStack","url":"\/documentation\/bitcoinbase\/scriptconfig\/cleanstack","kind":"symbol","role":"symbol","abstract":[{"text":"BIP62 rule 6","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Require that only a single stack element remains after evaluation. Only to be used with P2SH."}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig":{"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ScriptConfig","kind":"identifier"}],"kind":"symbol","title":"ScriptConfig","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","abstract":[{"text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}],"type":"topic","navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}],"url":"\/documentation\/bitcoinbase\/scriptconfig"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/Equatable-Implementations":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/equatable-implementations","role":"collectionGroup","kind":"article","title":"Equatable Implementations","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","abstract":[],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/pushOnly":{"abstract":[{"type":"text","text":"BIP62 rule 2"},{"type":"text","text":" "},{"text":"Using a non-push operator in the scriptSig causes script failure.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"pushOnly","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/pushonly","title":"pushOnly","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictEncoding":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","abstract":[{"text":"Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure."},{"type":"text","text":" "},{"type":"text","text":"Not used or intended as a consensus rule."}],"title":"strictEncoding","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictencoding","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strictEncoding","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalData":{"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimalData"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","url":"\/documentation\/bitcoinbase\/scriptconfig\/minimaldata","abstract":[{"text":"BIP62 rule 3-4","type":"text"},{"type":"text","text":" "},{"text":"Require minimal encodings for all push operations (","type":"text"},{"code":"OP_0","type":"codeVoice"},{"type":"text","text":"…"},{"code":"OP_16","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"OP_1NEGATE"},{"type":"text","text":" where possible, direct  pushes up to 75 bytes, "},{"code":"OP_PUSHDATA","type":"codeVoice"},{"type":"text","text":" up to 255 bytes, "},{"type":"codeVoice","code":"OP_PUSHDATA2"},{"text":" for anything larger).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Evaluating any other push causes the script to fail (BIP62 rule 3)."},{"text":" ","type":"text"},{"text":"In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).","type":"text"}],"title":"minimalData","kind":"symbol","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullDummy":{"title":"nullDummy","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"nullDummy","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/nulldummy","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","abstract":[{"type":"text","text":"BIP62 rule 7"},{"text":" ","type":"text"},{"text":"Verify dummy stack item consumed by ","type":"text"},{"type":"codeVoice","code":"CHECKMULTISIG"},{"type":"text","text":" is of zero-length."}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/mandatory":{"role":"symbol","title":"mandatory","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"mandatory","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/mandatory","type":"topic","abstract":[{"type":"text","text":"Mandatory script verification flags that all new transactions must comply with for them to be valid. Failing one of these tests may trigger a DoS ban. See "},{"type":"codeVoice","code":"CheckInputScripts()"},{"text":" on Bitcoin Core  for details.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this does not affect consensus validity. See "},{"code":"GetBlockScriptFlags()","type":"codeVoice"},{"text":" for that.","type":"text"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/constantScriptCode":{"abstract":[{"text":"Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"constantScriptCode"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/constantscriptcode","title":"constantScriptCode","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","kind":"symbol","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/init(rawValue:)":{"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"title":"init(rawValue:)","type":"topic","abstract":[],"url":"\/documentation\/bitcoinbase\/scriptconfig\/init(rawvalue:)"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/OptionSet-Implementations":{"title":"OptionSet Implementations","type":"topic","kind":"article","url":"\/documentation\/bitcoinbase\/scriptconfig\/optionset-implementations","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","role":"collectionGroup","abstract":[]},"doc://BitcoinBase/s10SetAlgebraP":{"title":"Swift.SetAlgebra","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s10SetAlgebraP"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullFail":{"kind":"symbol","abstract":[{"type":"text","text":"BIP141: Signature(s) must be null vector(s) if an OP_CHECKSIG or OP_CHECKMULTISIG is failed (for both pre-segregated witness script and P2WSH. See BIP146). Relay\/mining policy rule 3."}],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nullFail","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/nullfail","title":"nullFail","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witness":{"kind":"symbol","role":"symbol","abstract":[{"text":"BIP141: Verify witness program (all witness versions).","type":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","url":"\/documentation\/bitcoinbase\/scriptconfig\/witness","title":"witness","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"witness"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witnessCompressedPublicKey":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"witnessCompressedPublicKey"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/witnesscompressedpublickey","title":"witnessCompressedPublicKey","abstract":[{"type":"text","text":"BIP141: Only compressed public keys are accepted in P2WPKH and P2WSH (See BIP143). Relay\/mining policy rule 1."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey","type":"topic","role":"symbol","kind":"symbol"}}}