{"metadata":{"roleHeading":"Structure","modules":[{"name":"Bitcoin Base"}],"externalID":"s:11BitcoinBase12ScriptConfigV","title":"ScriptConfig","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ScriptConfig","kind":"identifier"}],"navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}],"remoteSource":{"fileName":"ScriptConfig.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/src\/bitcoin-base\/script\/ScriptConfig.swift#L4"},"symbolKind":"struct"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/BitcoinBase\/documentation\/BitcoinBase"]]},"sections":[],"variants":[{"paths":["\/documentation\/bitcoinbase\/scriptconfig"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/BitcoinBase\/SQ","doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","doc:\/\/BitcoinBase\/s9OptionSetP","doc:\/\/BitcoinBase\/SY","doc:\/\/BitcoinBase\/s8SendableP","doc:\/\/BitcoinBase\/s10SetAlgebraP"]}],"topicSections":[{"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue"],"generated":true,"title":"Instance Properties","anchor":"Instance-Properties"},{"title":"Type Properties","generated":true,"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey"],"anchor":"Type-Properties"},{"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations"],"anchor":"Default-Implementations","generated":true,"title":"Default Implementations"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ScriptConfig","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig"},"abstract":[{"text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}],"kind":"symbol","references":{"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/lowS":{"abstract":[{"text":"BIP62 rule 5","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Passing a non-strict-DER signature or one with S > order\/2 to a checksig operation causes script failure."}],"kind":"symbol","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/lows","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lowS","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","title":"lowS"},"doc://BitcoinBase/s9OptionSetP":{"identifier":"doc:\/\/BitcoinBase\/s9OptionSetP","title":"Swift.OptionSet","type":"unresolvable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/payToScriptHash":{"kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/paytoscripthash","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"payToScriptHash","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"abstract":[{"type":"text","text":"BIP16"}],"type":"topic","title":"payToScriptHash","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageOpSuccess":{"type":"topic","kind":"symbol","title":"discourageOpSuccess","abstract":[{"text":"Making unknown ","type":"text"},{"type":"codeVoice","code":"OP_SUCCESS"},{"text":" non-standard.","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"discourageOpSuccess","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageopsuccess","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/standard":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"standard","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/standard","title":"standard","kind":"symbol","abstract":[{"type":"text","text":"Standard script verification flags that standard transactions will comply with. However we do not ban\/disconnect nodes that forward txs violating the additional (non-mandatory) rules here, to improve forwards and backwards compatability."}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalData":{"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","url":"\/documentation\/bitcoinbase\/scriptconfig\/minimaldata","title":"minimalData","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"BIP62 rule 3-4"},{"type":"text","text":" "},{"text":"Require minimal encodings for all push operations (","type":"text"},{"type":"codeVoice","code":"OP_0"},{"type":"text","text":"â€¦"},{"type":"codeVoice","code":"OP_16"},{"text":", ","type":"text"},{"type":"codeVoice","code":"OP_1NEGATE"},{"type":"text","text":" where possible, direct  pushes up to 75 bytes, "},{"type":"codeVoice","code":"OP_PUSHDATA"},{"text":" up to 255 bytes, ","type":"text"},{"type":"codeVoice","code":"OP_PUSHDATA2"},{"type":"text","text":" for anything larger)."},{"text":" ","type":"text"},{"type":"text","text":"Evaluating any other push causes the script to fail (BIP62 rule 3)."},{"text":" ","type":"text"},{"type":"text","text":"In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4)."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimalData","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictEncoding":{"role":"symbol","title":"strictEncoding","abstract":[{"text":"Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure."},{"text":" ","type":"text"},{"type":"text","text":"Not used or intended as a consensus rule."}],"kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictencoding","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"strictEncoding","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/constantScriptCode":{"kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"constantScriptCode"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/constantscriptcode","role":"symbol","title":"constantScriptCode","type":"topic","abstract":[{"text":"Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts","type":"text"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/Equatable-Implementations":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","url":"\/documentation\/bitcoinbase\/scriptconfig\/equatable-implementations","title":"Equatable Implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/init(rawValue:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"type":"topic","title":"init(rawValue:)","url":"\/documentation\/bitcoinbase\/scriptconfig\/init(rawvalue:)","abstract":[]},"doc://BitcoinBase/s25ExpressibleByArrayLiteralP":{"identifier":"doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullDummy":{"title":"nullDummy","type":"topic","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","abstract":[{"type":"text","text":"BIP62 rule 7"},{"type":"text","text":" "},{"type":"text","text":"Verify dummy stack item consumed by "},{"code":"CHECKMULTISIG","type":"codeVoice"},{"text":" is of zero-length.","type":"text"}],"kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/nulldummy","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"nullDummy","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictDER":{"type":"topic","abstract":[{"type":"text","text":"BIP66 (consensus) and BIP62 rule 1 (policy)"},{"text":" ","type":"text"},{"type":"text","text":"Passing a non-strict-DER signature to a checksig operation causes script failure."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","title":"strictDER","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictder","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strictDER","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig":{"role":"symbol","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","title":"ScriptConfig","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ScriptConfig"}],"url":"\/documentation\/bitcoinbase\/scriptconfig","abstract":[{"type":"text","text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A)."}],"kind":"symbol","navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/rawValue":{"kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rawValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/rawvalue","role":"symbol","title":"rawValue","type":"topic","abstract":[]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/pushOnly":{"abstract":[{"type":"text","text":"BIP62 rule 2"},{"text":" ","type":"text"},{"type":"text","text":"Using a non-push operator in the scriptSig causes script failure."}],"type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"pushOnly","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"title":"pushOnly","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","url":"\/documentation\/bitcoinbase\/scriptconfig\/pushonly"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullFail":{"kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"nullFail","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/nullfail","title":"nullFail","type":"topic","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","abstract":[{"text":"BIP141: Signature(s) must be null vector(s) if an OP_CHECKSIG or OP_CHECKMULTISIG is failed (for both pre-segregated witness script and P2WSH. See BIP146). Relay\/mining policy rule 3.","type":"text"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/mandatory":{"type":"topic","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"mandatory","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"mandatory","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/mandatory","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","abstract":[{"text":"Mandatory script verification flags that all new transactions must comply with for them to be valid. Failing one of these tests may trigger a DoS ban. See ","type":"text"},{"type":"codeVoice","code":"CheckInputScripts()"},{"type":"text","text":" on Bitcoin Core  for details."},{"text":" ","type":"text"},{"text":"Note that this does not affect consensus validity. See ","type":"text"},{"type":"codeVoice","code":"GetBlockScriptFlags()"},{"type":"text","text":" for that."}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/cleanStack":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/cleanstack","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","abstract":[{"text":"BIP62 rule 6","type":"text"},{"text":" ","type":"text"},{"text":"Require that only a single stack element remains after evaluation. Only to be used with P2SH.","type":"text"}],"title":"cleanStack","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanStack"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}]},"doc://BitcoinBase/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s8SendableP"},"doc://BitcoinBase/SY":{"title":"Swift.RawRepresentable","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/SY"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradablePublicKeyType":{"abstract":[{"type":"text","text":"Making unknown public key versions (in BIP342 scripts) non-standard."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"discourageUpgradablePublicKeyType","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"type":"topic","title":"discourageUpgradablePublicKeyType","kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablepublickeytype","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableNoOps":{"type":"topic","kind":"symbol","title":"discourageUpgradableNoOps","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablenoops","abstract":[{"text":"Discourage use of NOPs reserved for upgrades (NOP1-10)","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"discourageUpgradableNoOps","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkLockTimeVerify":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/checklocktimeverify","abstract":[{"type":"text","text":"BIP65: Evaluate "},{"type":"codeVoice","code":"OP_CHECKLOCKTIMEVERIFY"},{"text":".","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkLockTimeVerify"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol","type":"topic","title":"checkLockTimeVerify","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/taproot":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","role":"symbol","kind":"symbol","title":"taproot","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"taproot","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/taproot","abstract":[{"type":"text","text":"BIP341, BIP342: Taproot\/Tapscript validation."}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase":{"role":"collection","kind":"symbol","url":"\/documentation\/bitcoinbase","title":"Bitcoin Base","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase","abstract":[{"type":"text","text":"Basic elements of the Bitcoin protocol, namely transactions and scripts."}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/OptionSet-Implementations":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","abstract":[],"kind":"article","title":"OptionSet Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/bitcoinbase\/scriptconfig\/optionset-implementations"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witnessCompressedPublicKey":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"witnessCompressedPublicKey","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"abstract":[{"type":"text","text":"BIP141: Only compressed public keys are accepted in P2WPKH and P2WSH (See BIP143). Relay\/mining policy rule 1."}],"type":"topic","title":"witnessCompressedPublicKey","role":"symbol","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey","url":"\/documentation\/bitcoinbase\/scriptconfig\/witnesscompressedpublickey"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalIf":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"minimalIf","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","role":"symbol","abstract":[{"type":"text","text":"BIP141: The argument of OP_IF\/NOTIF in P2WSH must be minimal. Relay\/mining policy rule 2."}],"type":"topic","title":"minimalIf","url":"\/documentation\/bitcoinbase\/scriptconfig\/minimalif","kind":"symbol"},"doc://BitcoinBase/s10SetAlgebraP":{"title":"Swift.SetAlgebra","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s10SetAlgebraP"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witness":{"title":"witness","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"witness"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"BIP141: Verify witness program (all witness versions)."}],"type":"topic","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","url":"\/documentation\/bitcoinbase\/scriptconfig\/witness"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableTaprootVersion":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradabletaprootversion","kind":"symbol","title":"discourageUpgradableTaprootVersion","type":"topic","abstract":[{"text":"Making unknown Taproot leaf versions non-standard.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"discourageUpgradableTaprootVersion","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableWitnessProgram":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradableWitnessProgram"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablewitnessprogram","abstract":[{"type":"text","text":"Making v2-v16 witness program non-standard."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","title":"discourageUpgradableWitnessProgram","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkSequenceVerify":{"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","type":"topic","abstract":[{"type":"text","text":"BIP112: Evaluate "},{"type":"codeVoice","code":"OP_CHECKSEQUENCEVERIFY"},{"type":"text","text":"."}],"kind":"symbol","title":"checkSequenceVerify","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"checkSequenceVerify"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/checksequenceverify"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/SetAlgebra-Implementations":{"title":"SetAlgebra Implementations","url":"\/documentation\/bitcoinbase\/scriptconfig\/setalgebra-implementations","kind":"article","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations","role":"collectionGroup","abstract":[],"type":"topic"},"doc://BitcoinBase/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/SQ"}}}