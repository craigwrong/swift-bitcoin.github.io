{"abstract":[{"type":"text","text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A)."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/BitcoinBase\/documentation\/BitcoinBase"]]},"metadata":{"symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ScriptConfig","kind":"identifier"}],"remoteSource":{"fileName":"ScriptConfig.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/src\/bitcoin-base\/script\/ScriptConfig.swift#L4"},"roleHeading":"Structure","title":"ScriptConfig","externalID":"s:11BitcoinBase12ScriptConfigV","role":"symbol","modules":[{"name":"Bitcoin Base"}],"navigatorTitle":[{"kind":"identifier","text":"ScriptConfig"}]},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)"],"title":"Initializers","generated":true,"anchor":"Initializers"},{"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue"],"anchor":"Instance-Properties","title":"Instance Properties","generated":true},{"title":"Type Properties","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePubkeyType","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPubkey"],"generated":true,"anchor":"Type-Properties"},{"generated":true,"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ScriptConfig","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"relationshipsSections":[{"identifiers":["doc:\/\/BitcoinBase\/SQ","doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","doc:\/\/BitcoinBase\/s9OptionSetP","doc:\/\/BitcoinBase\/SY","doc:\/\/BitcoinBase\/s8SendableP","doc:\/\/BitcoinBase\/s10SetAlgebraP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoinbase\/scriptconfig"]}],"sections":[],"references":{"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/rawValue":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"abstract":[],"title":"rawValue","role":"symbol","kind":"symbol","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/rawvalue"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/taproot":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"taproot","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","role":"symbol","abstract":[{"type":"text","text":"BIP341, BIP342: Taproot\/Tapscript validation."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/taproot","title":"taproot","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/OptionSet-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/optionset-implementations","title":"OptionSet Implementations","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations"},"doc://BitcoinBase/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s8SendableP"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkLockTimeVerify":{"kind":"symbol","title":"checkLockTimeVerify","url":"\/documentation\/bitcoinbase\/scriptconfig\/checklocktimeverify","role":"symbol","abstract":[{"type":"text","text":"BIP65: Evaluate "},{"type":"codeVoice","code":"OP_CHECKLOCKTIMEVERIFY"},{"text":".","type":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"checkLockTimeVerify"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witness":{"kind":"symbol","abstract":[{"type":"text","text":"BIP141: Verify witness program (all witness versions)."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/witness","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"witness","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","title":"witness"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradablePubkeyType":{"title":"discourageUpgradablePubkeyType","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePubkeyType","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablepubkeytype","kind":"symbol","abstract":[{"type":"text","text":"Making unknown public key versions (in BIP342 scripts) non-standard."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"discourageUpgradablePubkeyType","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"role":"symbol"},"doc://BitcoinBase/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/SQ"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullFail":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nullFail","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","title":"nullFail","url":"\/documentation\/bitcoinbase\/scriptconfig\/nullfail","type":"topic","abstract":[{"type":"text","text":"BIP141: Signature(s) must be null vector(s) if an OP_CHECKSIG or OP_CHECKMULTISIG is failed (for both pre-segregated witness script and P2WSH. See BIP146). Relay\/mining policy rule 3."}],"role":"symbol","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictEncoding":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"strictEncoding","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictencoding","title":"strictEncoding","abstract":[{"type":"text","text":"Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure."},{"type":"text","text":" "},{"text":"Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Not used or intended as a consensus rule."}],"kind":"symbol"},"doc://BitcoinBase/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/mandatory":{"kind":"symbol","abstract":[{"text":"Mandatory script verification flags that all new transactions must comply with for them to be valid. Failing one of these tests may trigger a DoS ban. See ","type":"text"},{"type":"codeVoice","code":"CheckInputScripts()"},{"type":"text","text":" on Bitcoin Core  for details."},{"text":" ","type":"text"},{"type":"text","text":"Note that this does not affect consensus validity. See "},{"type":"codeVoice","code":"GetBlockScriptFlags()"},{"text":" for that.","type":"text"}],"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/mandatory","title":"mandatory","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"mandatory","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/Equatable-Implementations":{"type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","url":"\/documentation\/bitcoinbase\/scriptconfig\/equatable-implementations","title":"Equatable Implementations","kind":"article"},"doc://BitcoinBase/SY":{"title":"Swift.RawRepresentable","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/SY"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictDER":{"kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","abstract":[{"text":"BIP66 (consensus) and BIP62 rule 1 (policy)","type":"text"},{"text":" ","type":"text"},{"text":"Passing a non-strict-DER signature to a checksig operation causes script failure.","type":"text"}],"title":"strictDER","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictder","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"strictDER","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"role":"symbol","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableNoOps":{"title":"discourageUpgradableNoOps","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"discourageUpgradableNoOps","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","abstract":[{"text":"Discourage use of NOPs reserved for upgrades (NOP1-10)","type":"text"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablenoops","kind":"symbol","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/payToScriptHash":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"payToScriptHash","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"title":"payToScriptHash","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","abstract":[{"text":"BIP16","type":"text"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/paytoscripthash"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/init(rawValue:)":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/init(rawvalue:)","role":"symbol","title":"init(rawValue:)","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":")"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)"},"doc://BitcoinBase/documentation/BitcoinBase":{"abstract":[{"type":"text","text":"Basic elements of the Bitcoin protocol, namely transactions and scripts."}],"title":"Bitcoin Base","url":"\/documentation\/bitcoinbase","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/pushOnly":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"pushOnly"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"abstract":[{"text":"BIP62 rule 2","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Using a non-push operator in the scriptSig causes script failure."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/pushonly","role":"symbol","type":"topic","kind":"symbol","title":"pushOnly","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly"},"doc://BitcoinBase/s9OptionSetP":{"title":"Swift.OptionSet","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s9OptionSetP"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/cleanStack":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"cleanStack"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"abstract":[{"type":"text","text":"BIP62 rule 6"},{"type":"text","text":" "},{"text":"Require that only a single stack element remains after evaluation. Only to be used with P2SH.","type":"text"}],"title":"cleanStack","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/cleanstack","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","type":"topic","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witnessCompressedPubkey":{"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPubkey","url":"\/documentation\/bitcoinbase\/scriptconfig\/witnesscompressedpubkey","abstract":[{"type":"text","text":"BIP141: Only compressed public keys are accepted in P2WPKH and P2WSH (See BIP143). Relay\/mining policy rule 1."}],"title":"witnessCompressedPubkey","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"witnessCompressedPubkey","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalIf":{"abstract":[{"type":"text","text":"BIP141: The argument of OP_IF\/NOTIF in P2WSH must be minimal. Relay\/mining policy rule 2."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"minimalIf","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"kind":"symbol","type":"topic","title":"minimalIf","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","url":"\/documentation\/bitcoinbase\/scriptconfig\/minimalif","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig":{"navigatorTitle":[{"kind":"identifier","text":"ScriptConfig"}],"title":"ScriptConfig","abstract":[{"type":"text","text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A)."}],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","url":"\/documentation\/bitcoinbase\/scriptconfig","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScriptConfig"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableWitnessProgram":{"role":"symbol","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Making v2-v16 witness program non-standard."}],"title":"discourageUpgradableWitnessProgram","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradableWitnessProgram"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablewitnessprogram","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkSequenceVerify":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","title":"checkSequenceVerify","abstract":[{"text":"BIP112: Evaluate ","type":"text"},{"type":"codeVoice","code":"OP_CHECKSEQUENCEVERIFY"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"checkSequenceVerify"},{"text":": ","kind":"text"},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/checksequenceverify"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/constantScriptCode":{"role":"symbol","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/constantscriptcode","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","title":"constantScriptCode","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"constantScriptCode"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"abstract":[{"type":"text","text":"Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableTaprootVersion":{"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradabletaprootversion","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","title":"discourageUpgradableTaprootVersion","kind":"symbol","role":"symbol","abstract":[{"text":"Making unknown Taproot leaf versions non-standard.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"discourageUpgradableTaprootVersion"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/s10SetAlgebraP":{"title":"Swift.SetAlgebra","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s10SetAlgebraP"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageOpSuccess":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"discourageOpSuccess","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"Making unknown ","type":"text"},{"code":"OP_SUCCESS","type":"codeVoice"},{"type":"text","text":" non-standard."}],"title":"discourageOpSuccess","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageopsuccess","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/SetAlgebra-Implementations":{"title":"SetAlgebra Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations","url":"\/documentation\/bitcoinbase\/scriptconfig\/setalgebra-implementations","kind":"article","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalData":{"abstract":[{"type":"text","text":"BIP62 rule 3-4"},{"type":"text","text":" "},{"text":"Require minimal encodings for all push operations (","type":"text"},{"type":"codeVoice","code":"OP_0"},{"type":"text","text":"…"},{"code":"OP_16","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"OP_1NEGATE"},{"type":"text","text":" where possible, direct  pushes up to 75 bytes, "},{"type":"codeVoice","code":"OP_PUSHDATA"},{"text":" up to 255 bytes, ","type":"text"},{"type":"codeVoice","code":"OP_PUSHDATA2"},{"type":"text","text":" for anything larger)."},{"type":"text","text":" "},{"text":"Evaluating any other push causes the script to fail (BIP62 rule 3).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4)."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"minimalData","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"kind":"symbol","type":"topic","title":"minimalData","url":"\/documentation\/bitcoinbase\/scriptconfig\/minimaldata","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/lowS":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lowS"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"lowS","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"BIP62 rule 5"},{"text":" ","type":"text"},{"type":"text","text":"Passing a non-strict-DER signature or one with S > order\/2 to a checksig operation causes script failure."}],"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/lows","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullDummy":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nullDummy"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/nulldummy","role":"symbol","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","kind":"symbol","abstract":[{"text":"BIP62 rule 7","type":"text"},{"text":" ","type":"text"},{"text":"Verify dummy stack item consumed by ","type":"text"},{"code":"CHECKMULTISIG","type":"codeVoice"},{"type":"text","text":" is of zero-length."}],"title":"nullDummy"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/standard":{"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","url":"\/documentation\/bitcoinbase\/scriptconfig\/standard","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"standard"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"title":"standard","type":"topic","abstract":[{"type":"text","text":"Standard script verification flags that standard transactions will comply with. However we do not ban\/disconnect nodes that forward txs violating the additional (non-mandatory) rules here, to improve forwards and backwards compatability."}]}}}