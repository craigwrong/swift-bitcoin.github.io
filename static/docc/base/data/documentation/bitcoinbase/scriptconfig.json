{"hierarchy":{"paths":[["doc:\/\/BitcoinBase\/documentation\/BitcoinBase"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"kind":"symbol","abstract":[{"type":"text","text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A)."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoinbase\/scriptconfig"]}],"identifier":{"url":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","interfaceLanguage":"swift"},"metadata":{"symbolKind":"struct","remoteSource":{"fileName":"ScriptConfig.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/src\/bitcoin-base\/script\/ScriptConfig.swift#L4"},"roleHeading":"Structure","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ScriptConfig"}],"title":"ScriptConfig","externalID":"s:11BitcoinBase12ScriptConfigV","modules":[{"name":"Bitcoin Base"}],"navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}],"role":"symbol"},"relationshipsSections":[{"identifiers":["doc:\/\/BitcoinBase\/SQ","doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","doc:\/\/BitcoinBase\/s9OptionSetP","doc:\/\/BitcoinBase\/SY","doc:\/\/BitcoinBase\/s8SendableP","doc:\/\/BitcoinBase\/s10SetAlgebraP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScriptConfig"}],"platforms":["macOS"]}],"kind":"declarations"}],"topicSections":[{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)"]},{"anchor":"Instance-Properties","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue"],"title":"Instance Properties","generated":true},{"anchor":"Type-Properties","title":"Type Properties","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey"],"generated":true},{"anchor":"Default-Implementations","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations"],"generated":true,"title":"Default Implementations"}],"references":{"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableNoOps":{"title":"discourageUpgradableNoOps","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablenoops","abstract":[{"type":"text","text":"Discourage use of NOPs reserved for upgrades (NOP1-10)"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"discourageUpgradableNoOps","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullFail":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","role":"symbol","title":"nullFail","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"nullFail","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"abstract":[{"type":"text","text":"BIP141: Signature(s) must be null vector(s) if an OP_CHECKSIG or OP_CHECKMULTISIG is failed (for both pre-segregated witness script and P2WSH. See BIP146). Relay\/mining policy rule 3."}],"kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/nullfail"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkLockTimeVerify":{"kind":"symbol","title":"checkLockTimeVerify","url":"\/documentation\/bitcoinbase\/scriptconfig\/checklocktimeverify","abstract":[{"type":"text","text":"BIP65: Evaluate "},{"type":"codeVoice","code":"OP_CHECKLOCKTIMEVERIFY"},{"text":".","type":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"checkLockTimeVerify","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullDummy":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/nulldummy","abstract":[{"type":"text","text":"BIP62 rule 7"},{"type":"text","text":" "},{"type":"text","text":"Verify dummy stack item consumed by "},{"code":"CHECKMULTISIG","type":"codeVoice"},{"type":"text","text":" is of zero-length."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nullDummy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","title":"nullDummy","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/SetAlgebra-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations","url":"\/documentation\/bitcoinbase\/scriptconfig\/setalgebra-implementations","type":"topic","abstract":[],"kind":"article","title":"SetAlgebra Implementations"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkSequenceVerify":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/checksequenceverify","type":"topic","abstract":[{"type":"text","text":"BIP112: Evaluate "},{"code":"OP_CHECKSEQUENCEVERIFY","type":"codeVoice"},{"text":".","type":"text"}],"title":"checkSequenceVerify","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkSequenceVerify"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/standard":{"role":"symbol","title":"standard","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","abstract":[{"type":"text","text":"Standard script verification flags that standard transactions will comply with. However we do not ban\/disconnect nodes that forward txs violating the additional (non-mandatory) rules here, to improve forwards and backwards compatability."}],"kind":"symbol","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/standard","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"standard","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictDER":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/strictder","abstract":[{"type":"text","text":"BIP66 (consensus) and BIP62 rule 1 (policy)"},{"type":"text","text":" "},{"text":"Passing a non-strict-DER signature to a checksig operation causes script failure.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strictDER","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"kind":"symbol","title":"strictDER","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase":{"title":"Bitcoin Base","role":"collection","type":"topic","abstract":[{"text":"Basic elements of the Bitcoin protocol, namely transactions and scripts.","type":"text"}],"kind":"symbol","url":"\/documentation\/bitcoinbase","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/mandatory":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/mandatory","abstract":[{"type":"text","text":"Mandatory script verification flags that all new transactions must comply with for them to be valid. Failing one of these tests may trigger a DoS ban. See "},{"code":"CheckInputScripts()","type":"codeVoice"},{"type":"text","text":" on Bitcoin Core  for details."},{"type":"text","text":" "},{"type":"text","text":"Note that this does not affect consensus validity. See "},{"type":"codeVoice","code":"GetBlockScriptFlags()"},{"text":" for that.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"mandatory","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","title":"mandatory","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/OptionSet-Implementations":{"title":"OptionSet Implementations","kind":"article","abstract":[],"url":"\/documentation\/bitcoinbase\/scriptconfig\/optionset-implementations","role":"collectionGroup","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/taproot":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","kind":"symbol","abstract":[{"type":"text","text":"BIP341, BIP342: Taproot\/Tapscript validation."}],"title":"taproot","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"taproot","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/taproot","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableTaprootVersion":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","kind":"symbol","abstract":[{"type":"text","text":"Making unknown Taproot leaf versions non-standard."}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"discourageUpgradableTaprootVersion"},{"text":": ","kind":"text"},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"title":"discourageUpgradableTaprootVersion","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradabletaprootversion"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalIf":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","kind":"symbol","abstract":[{"type":"text","text":"BIP141: The argument of OP_IF\/NOTIF in P2WSH must be minimal. Relay\/mining policy rule 2."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"minimalIf"},{"text":": ","kind":"text"},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/minimalif","type":"topic","role":"symbol","title":"minimalIf"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/rawValue":{"abstract":[],"role":"symbol","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue","url":"\/documentation\/bitcoinbase\/scriptconfig\/rawvalue","title":"rawValue"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/pushOnly":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/pushonly","type":"topic","abstract":[{"type":"text","text":"BIP62 rule 2"},{"text":" ","type":"text"},{"type":"text","text":"Using a non-push operator in the scriptSig causes script failure."}],"title":"pushOnly","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"pushOnly","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}]},"doc://BitcoinBase/SQ":{"identifier":"doc:\/\/BitcoinBase\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://BitcoinBase/s25ExpressibleByArrayLiteralP":{"identifier":"doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","type":"unresolvable","title":"Swift.ExpressibleByArrayLiteral"},"doc://BitcoinBase/s8SendableP":{"identifier":"doc:\/\/BitcoinBase\/s8SendableP","type":"unresolvable","title":"Swift.Sendable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/lowS":{"role":"symbol","type":"topic","title":"lowS","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lowS","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"abstract":[{"text":"BIP62 rule 5","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Passing a non-strict-DER signature or one with S > order\/2 to a checksig operation causes script failure."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/lows","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/cleanStack":{"kind":"symbol","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","abstract":[{"text":"BIP62 rule 6","type":"text"},{"type":"text","text":" "},{"text":"Require that only a single stack element remains after evaluation. Only to be used with P2SH.","type":"text"}],"title":"cleanStack","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanStack","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/cleanstack"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradablePublicKeyType":{"title":"discourageUpgradablePublicKeyType","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablepublickeytype","kind":"symbol","abstract":[{"text":"Making unknown public key versions (in BIP342 scripts) non-standard.","type":"text"}],"type":"topic","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"discourageUpgradablePublicKeyType","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageOpSuccess":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageopsuccess","abstract":[{"text":"Making unknown ","type":"text"},{"type":"codeVoice","code":"OP_SUCCESS"},{"text":" non-standard.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"discourageOpSuccess"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"kind":"symbol","title":"discourageOpSuccess","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/constantScriptCode":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","url":"\/documentation\/bitcoinbase\/scriptconfig\/constantscriptcode","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"constantScriptCode","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"kind":"symbol","abstract":[{"text":"Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts","type":"text"}],"type":"topic","role":"symbol","title":"constantScriptCode"},"doc://BitcoinBase/s9OptionSetP":{"identifier":"doc:\/\/BitcoinBase\/s9OptionSetP","type":"unresolvable","title":"Swift.OptionSet"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalData":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"minimalData","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"role":"symbol","type":"topic","title":"minimalData","abstract":[{"text":"BIP62 rule 3-4","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Require minimal encodings for all push operations ("},{"type":"codeVoice","code":"OP_0"},{"text":"…","type":"text"},{"type":"codeVoice","code":"OP_16"},{"text":", ","type":"text"},{"code":"OP_1NEGATE","type":"codeVoice"},{"type":"text","text":" where possible, direct  pushes up to 75 bytes, "},{"type":"codeVoice","code":"OP_PUSHDATA"},{"type":"text","text":" up to 255 bytes, "},{"type":"codeVoice","code":"OP_PUSHDATA2"},{"text":" for anything larger).","type":"text"},{"type":"text","text":" "},{"text":"Evaluating any other push causes the script to fail (BIP62 rule 3).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4)."}],"kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/minimaldata","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/payToScriptHash":{"abstract":[{"type":"text","text":"BIP16"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","role":"symbol","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"payToScriptHash"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/paytoscripthash","title":"payToScriptHash"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableWitnessProgram":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablewitnessprogram","abstract":[{"type":"text","text":"Making v2-v16 witness program non-standard."}],"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradableWitnessProgram"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","title":"discourageUpgradableWitnessProgram","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witnessCompressedPublicKey":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/witnesscompressedpublickey","type":"topic","abstract":[{"type":"text","text":"BIP141: Only compressed public keys are accepted in P2WPKH and P2WSH (See BIP143). Relay\/mining policy rule 1."}],"title":"witnessCompressedPublicKey","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"witnessCompressedPublicKey","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witness":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/witness","abstract":[{"type":"text","text":"BIP141: Verify witness program (all witness versions)."}],"role":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"witness"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","title":"witness","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/Equatable-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/equatable-implementations","kind":"article","title":"Equatable Implementations","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig":{"title":"ScriptConfig","url":"\/documentation\/bitcoinbase\/scriptconfig","abstract":[{"text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ScriptConfig","kind":"identifier"}],"navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictEncoding":{"abstract":[{"text":"Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure."},{"type":"text","text":" "},{"type":"text","text":"Not used or intended as a consensus rule."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"strictEncoding","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/strictencoding","title":"strictEncoding"},"doc://BitcoinBase/s10SetAlgebraP":{"type":"unresolvable","title":"Swift.SetAlgebra","identifier":"doc:\/\/BitcoinBase\/s10SetAlgebraP"},"doc://BitcoinBase/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/BitcoinBase\/SY"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/init(rawValue:)":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/init(rawvalue:)","abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":")","kind":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)","title":"init(rawValue:)","kind":"symbol"}}}