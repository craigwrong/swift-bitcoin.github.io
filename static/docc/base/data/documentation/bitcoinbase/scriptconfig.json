{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoinbase\/scriptconfig"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/BitcoinBase\/documentation\/BitcoinBase"]]},"topicSections":[{"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)"],"anchor":"Initializers","generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey"],"anchor":"Type-Properties","title":"Type Properties","generated":true},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations"]}],"identifier":{"url":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/BitcoinBase\/SQ","doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","doc:\/\/BitcoinBase\/s9OptionSetP","doc:\/\/BitcoinBase\/SY","doc:\/\/BitcoinBase\/s8SendableP","doc:\/\/BitcoinBase\/s10SetAlgebraP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"abstract":[{"type":"text","text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A)."}],"metadata":{"modules":[{"name":"Bitcoin Base"}],"roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ScriptConfig","kind":"identifier"}],"navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}],"symbolKind":"struct","remoteSource":{"fileName":"ScriptConfig.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/src\/bitcoin-base\/script\/ScriptConfig.swift#L4"},"externalID":"s:11BitcoinBase12ScriptConfigV","role":"symbol","title":"ScriptConfig"},"schemaVersion":{"minor":3,"patch":0,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ScriptConfig"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","references":{"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/rawValue":{"type":"topic","title":"rawValue","kind":"symbol","abstract":[],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue","url":"\/documentation\/bitcoinbase\/scriptconfig\/rawvalue","fragments":[{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rawValue"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkLockTimeVerify":{"title":"checkLockTimeVerify","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"checkLockTimeVerify"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/checklocktimeverify","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","abstract":[{"text":"BIP65: Evaluate ","type":"text"},{"type":"codeVoice","code":"OP_CHECKLOCKTIMEVERIFY"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableTaprootVersion":{"title":"discourageUpgradableTaprootVersion","kind":"symbol","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradabletaprootversion","role":"symbol","abstract":[{"type":"text","text":"Making unknown Taproot leaf versions non-standard."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradableTaprootVersion"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ScriptConfig","kind":"identifier"}],"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}],"abstract":[{"text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}],"title":"ScriptConfig","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradablePublicKeyType":{"title":"discourageUpgradablePublicKeyType","kind":"symbol","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablepublickeytype","role":"symbol","abstract":[{"type":"text","text":"Making unknown public key versions (in BIP342 scripts) non-standard."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"discourageUpgradablePublicKeyType"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/taproot":{"title":"taproot","kind":"symbol","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/taproot","role":"symbol","abstract":[{"type":"text","text":"BIP341, BIP342: Taproot\/Tapscript validation."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"taproot"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/s25ExpressibleByArrayLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictEncoding":{"title":"strictEncoding","kind":"symbol","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictencoding","role":"symbol","abstract":[{"type":"text","text":"Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure."},{"text":" ","type":"text"},{"text":"Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Not used or intended as a consensus rule."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"strictEncoding","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullDummy":{"title":"nullDummy","kind":"symbol","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/nulldummy","role":"symbol","abstract":[{"type":"text","text":"BIP62 rule 7"},{"type":"text","text":" "},{"type":"text","text":"Verify dummy stack item consumed by "},{"type":"codeVoice","code":"CHECKMULTISIG"},{"type":"text","text":" is of zero-length."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nullDummy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkSequenceVerify":{"title":"checkSequenceVerify","kind":"symbol","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/checksequenceverify","role":"symbol","abstract":[{"type":"text","text":"BIP112: Evaluate "},{"code":"OP_CHECKSEQUENCEVERIFY","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"checkSequenceVerify"},{"kind":"text","text":": "},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalData":{"abstract":[{"type":"text","text":"BIP62 rule 3-4"},{"type":"text","text":" "},{"type":"text","text":"Require minimal encodings for all push operations ("},{"type":"codeVoice","code":"OP_0"},{"text":"…","type":"text"},{"type":"codeVoice","code":"OP_16"},{"type":"text","text":", "},{"code":"OP_1NEGATE","type":"codeVoice"},{"text":" where possible, direct  pushes up to 75 bytes, ","type":"text"},{"type":"codeVoice","code":"OP_PUSHDATA"},{"type":"text","text":" up to 255 bytes, "},{"type":"codeVoice","code":"OP_PUSHDATA2"},{"type":"text","text":" for anything larger)."},{"type":"text","text":" "},{"type":"text","text":"Evaluating any other push causes the script to fail (BIP62 rule 3)."},{"type":"text","text":" "},{"type":"text","text":"In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4)."}],"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/minimaldata","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","kind":"symbol","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"minimalData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"title":"minimalData"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableNoOps":{"type":"topic","title":"discourageUpgradableNoOps","kind":"symbol","abstract":[{"type":"text","text":"Discourage use of NOPs reserved for upgrades (NOP1-10)"}],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablenoops","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"discourageUpgradableNoOps"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witnessCompressedPublicKey":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"witnessCompressedPublicKey","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"title":"witnessCompressedPublicKey","url":"\/documentation\/bitcoinbase\/scriptconfig\/witnesscompressedpublickey","abstract":[{"type":"text","text":"BIP141: Only compressed public keys are accepted in P2WPKH and P2WSH (See BIP143). Relay\/mining policy rule 1."}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/SetAlgebra-Implementations":{"kind":"article","title":"SetAlgebra Implementations","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations","abstract":[],"url":"\/documentation\/bitcoinbase\/scriptconfig\/setalgebra-implementations","role":"collectionGroup","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/init(rawValue:)":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)","abstract":[],"url":"\/documentation\/bitcoinbase\/scriptconfig\/init(rawvalue:)","kind":"symbol","title":"init(rawValue:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/constantScriptCode":{"type":"topic","title":"constantScriptCode","kind":"symbol","abstract":[{"type":"text","text":"Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts"}],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","url":"\/documentation\/bitcoinbase\/scriptconfig\/constantscriptcode","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"constantScriptCode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/s10SetAlgebraP":{"type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s10SetAlgebraP","title":"Swift.SetAlgebra"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullFail":{"type":"topic","title":"nullFail","kind":"symbol","abstract":[{"type":"text","text":"BIP141: Signature(s) must be null vector(s) if an OP_CHECKSIG or OP_CHECKMULTISIG is failed (for both pre-segregated witness script and P2WSH. See BIP146). Relay\/mining policy rule 3."}],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","url":"\/documentation\/bitcoinbase\/scriptconfig\/nullfail","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nullFail"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/Equatable-Implementations":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","abstract":[],"url":"\/documentation\/bitcoinbase\/scriptconfig\/equatable-implementations","kind":"article","title":"Equatable Implementations","role":"collectionGroup","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/standard":{"type":"topic","title":"standard","kind":"symbol","abstract":[{"type":"text","text":"Standard script verification flags that standard transactions will comply with. However we do not ban\/disconnect nodes that forward txs violating the additional (non-mandatory) rules here, to improve forwards and backwards compatability."}],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","url":"\/documentation\/bitcoinbase\/scriptconfig\/standard","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"standard"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableWitnessProgram":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"discourageUpgradableWitnessProgram","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablewitnessprogram","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","title":"discourageUpgradableWitnessProgram","abstract":[{"text":"Making v2-v16 witness program non-standard.","type":"text"}],"role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witness":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","abstract":[{"type":"text","text":"BIP141: Verify witness program (all witness versions)."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/witness","kind":"symbol","title":"witness","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"witness"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/lowS":{"type":"topic","title":"lowS","kind":"symbol","abstract":[{"type":"text","text":"BIP62 rule 5"},{"text":" ","type":"text"},{"text":"Passing a non-strict-DER signature or one with S > order\/2 to a checksig operation causes script failure.","type":"text"}],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","url":"\/documentation\/bitcoinbase\/scriptconfig\/lows","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"lowS"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/cleanStack":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cleanStack","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"type":"topic","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/cleanstack","kind":"symbol","title":"cleanStack","abstract":[{"type":"text","text":"BIP62 rule 6"},{"type":"text","text":" "},{"text":"Require that only a single stack element remains after evaluation. Only to be used with P2SH.","type":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/OptionSet-Implementations":{"kind":"article","url":"\/documentation\/bitcoinbase\/scriptconfig\/optionset-implementations","title":"OptionSet Implementations","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","type":"topic","abstract":[],"role":"collectionGroup"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalIf":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","abstract":[{"type":"text","text":"BIP141: The argument of OP_IF\/NOTIF in P2WSH must be minimal. Relay\/mining policy rule 2."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/minimalif","kind":"symbol","title":"minimalIf","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"minimalIf","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"type":"topic"},"doc://BitcoinBase/s9OptionSetP":{"title":"Swift.OptionSet","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s9OptionSetP"},"doc://BitcoinBase/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s8SendableP"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/payToScriptHash":{"type":"topic","title":"payToScriptHash","kind":"symbol","abstract":[{"text":"BIP16","type":"text"}],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","url":"\/documentation\/bitcoinbase\/scriptconfig\/paytoscripthash","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"payToScriptHash"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}]},"doc://BitcoinBase/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/BitcoinBase\/SQ"},"doc://BitcoinBase/SY":{"type":"unresolvable","title":"Swift.RawRepresentable","identifier":"doc:\/\/BitcoinBase\/SY"},"doc://BitcoinBase/documentation/BitcoinBase":{"title":"Bitcoin Base","url":"\/documentation\/bitcoinbase","role":"collection","kind":"symbol","abstract":[{"text":"Basic elements of the Bitcoin protocol, namely transactions and scripts.","type":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageOpSuccess":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","abstract":[{"type":"text","text":"Making unknown "},{"type":"codeVoice","code":"OP_SUCCESS"},{"type":"text","text":" non-standard."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageopsuccess","kind":"symbol","title":"discourageOpSuccess","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"discourageOpSuccess"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/pushOnly":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pushOnly","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/pushonly","kind":"symbol","abstract":[{"type":"text","text":"BIP62 rule 2"},{"type":"text","text":" "},{"type":"text","text":"Using a non-push operator in the scriptSig causes script failure."}],"title":"pushOnly","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/mandatory":{"type":"topic","title":"mandatory","kind":"symbol","abstract":[{"type":"text","text":"Mandatory script verification flags that all new transactions must comply with for them to be valid. Failing one of these tests may trigger a DoS ban. See "},{"code":"CheckInputScripts()","type":"codeVoice"},{"text":" on Bitcoin Core  for details.","type":"text"},{"type":"text","text":" "},{"text":"Note that this does not affect consensus validity. See ","type":"text"},{"type":"codeVoice","code":"GetBlockScriptFlags()"},{"text":" for that.","type":"text"}],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","url":"\/documentation\/bitcoinbase\/scriptconfig\/mandatory","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mandatory"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictDER":{"kind":"symbol","abstract":[{"text":"BIP66 (consensus) and BIP62 rule 1 (policy)","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Passing a non-strict-DER signature to a checksig operation causes script failure."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/strictder","title":"strictDER","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictDER"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"type":"topic"}}}