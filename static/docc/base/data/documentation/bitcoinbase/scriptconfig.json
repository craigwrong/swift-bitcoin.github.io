{"hierarchy":{"paths":[["doc:\/\/BitcoinBase\/documentation\/BitcoinBase"]]},"identifier":{"url":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"title":"ScriptConfig","roleHeading":"Structure","modules":[{"name":"Bitcoin Base"}],"externalID":"s:11BitcoinBase12ScriptConfigV","role":"symbol","navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ScriptConfig","kind":"identifier"}],"remoteSource":{"fileName":"ScriptConfig.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/src\/bitcoin-base\/script\/ScriptConfig.swift#L4"},"symbolKind":"struct"},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/BitcoinBase\/SQ","doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","doc:\/\/BitcoinBase\/s9OptionSetP","doc:\/\/BitcoinBase\/SY","doc:\/\/BitcoinBase\/s8SendableP","doc:\/\/BitcoinBase\/s10SetAlgebraP"]}],"sections":[],"abstract":[{"text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScriptConfig","kind":"identifier"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoinbase\/scriptconfig"]}],"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)"],"anchor":"Initializers","generated":true},{"anchor":"Instance-Properties","generated":true,"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue"],"title":"Instance Properties"},{"title":"Type Properties","generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey"]},{"generated":true,"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations"}],"references":{"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkSequenceVerify":{"type":"topic","role":"symbol","abstract":[{"text":"BIP112: Evaluate ","type":"text"},{"code":"OP_CHECKSEQUENCEVERIFY","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","url":"\/documentation\/bitcoinbase\/scriptconfig\/checksequenceverify","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"checkSequenceVerify","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"title":"checkSequenceVerify"},"doc://BitcoinBase/s8SendableP":{"identifier":"doc:\/\/BitcoinBase\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/standard":{"type":"topic","role":"symbol","abstract":[{"text":"Standard script verification flags that standard transactions will comply with. However we do not ban\/disconnect nodes that forward txs violating the additional (non-mandatory) rules here, to improve forwards and backwards compatability.","type":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","url":"\/documentation\/bitcoinbase\/scriptconfig\/standard","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"standard","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"standard"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ScriptConfig","kind":"identifier"}],"title":"ScriptConfig","navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","url":"\/documentation\/bitcoinbase\/scriptconfig","kind":"symbol","abstract":[{"text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}],"role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase":{"url":"\/documentation\/bitcoinbase","abstract":[{"type":"text","text":"Basic elements of the Bitcoin protocol, namely transactions and scripts."}],"role":"collection","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase","title":"Bitcoin Base","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/mandatory":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/mandatory","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mandatory","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","abstract":[{"text":"Mandatory script verification flags that all new transactions must comply with for them to be valid. Failing one of these tests may trigger a DoS ban. See ","type":"text"},{"code":"CheckInputScripts()","type":"codeVoice"},{"type":"text","text":" on Bitcoin Core  for details."},{"text":" ","type":"text"},{"type":"text","text":"Note that this does not affect consensus validity. See "},{"type":"codeVoice","code":"GetBlockScriptFlags()"},{"type":"text","text":" for that."}],"role":"symbol","type":"topic","title":"mandatory","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictEncoding":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure."},{"text":" ","type":"text"},{"type":"text","text":"Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure."},{"text":" ","type":"text"},{"type":"text","text":"Not used or intended as a consensus rule."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictencoding","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strictEncoding","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"strictEncoding"},"doc://BitcoinBase/s10SetAlgebraP":{"identifier":"doc:\/\/BitcoinBase\/s10SetAlgebraP","title":"Swift.SetAlgebra","type":"unresolvable"},"doc://BitcoinBase/s9OptionSetP":{"identifier":"doc:\/\/BitcoinBase\/s9OptionSetP","title":"Swift.OptionSet","type":"unresolvable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/pushOnly":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/pushonly","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pushOnly","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","abstract":[{"text":"BIP62 rule 2","type":"text"},{"type":"text","text":" "},{"text":"Using a non-push operator in the scriptSig causes script failure.","type":"text"}],"role":"symbol","type":"topic","title":"pushOnly","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/constantScriptCode":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"constantScriptCode","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","role":"symbol","kind":"symbol","title":"constantScriptCode","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/constantscriptcode"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictDER":{"kind":"symbol","abstract":[{"type":"text","text":"BIP66 (consensus) and BIP62 rule 1 (policy)"},{"type":"text","text":" "},{"type":"text","text":"Passing a non-strict-DER signature to a checksig operation causes script failure."}],"title":"strictDER","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictDER"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/strictder","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","role":"symbol"},"doc://BitcoinBase/SQ":{"title":"Swift.Equatable","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/SQ"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/init(rawValue:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(rawValue:)","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)","abstract":[],"kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/init(rawvalue:)","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableWitnessProgram":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"discourageUpgradableWitnessProgram","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"discourageUpgradableWitnessProgram","abstract":[{"text":"Making v2-v16 witness program non-standard.","type":"text"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablewitnessprogram","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","kind":"symbol","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witness":{"kind":"symbol","title":"witness","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"witness","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/witness","abstract":[{"text":"BIP141: Verify witness program (all witness versions).","type":"text"}],"role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/SetAlgebra-Implementations":{"title":"SetAlgebra Implementations","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations","url":"\/documentation\/bitcoinbase\/scriptconfig\/setalgebra-implementations","abstract":[],"kind":"article","role":"collectionGroup"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageOpSuccess":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageOpSuccess"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"discourageOpSuccess","abstract":[{"text":"Making unknown ","type":"text"},{"type":"codeVoice","code":"OP_SUCCESS"},{"type":"text","text":" non-standard."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageopsuccess","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","kind":"symbol","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullDummy":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"nullDummy","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"title":"nullDummy","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","url":"\/documentation\/bitcoinbase\/scriptconfig\/nulldummy","abstract":[{"type":"text","text":"BIP62 rule 7"},{"text":" ","type":"text"},{"text":"Verify dummy stack item consumed by ","type":"text"},{"type":"codeVoice","code":"CHECKMULTISIG"},{"text":" is of zero-length.","type":"text"}],"kind":"symbol","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/rawValue":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rawValue"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"rawValue","abstract":[],"url":"\/documentation\/bitcoinbase\/scriptconfig\/rawvalue","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue","kind":"symbol","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/cleanStack":{"abstract":[{"type":"text","text":"BIP62 rule 6"},{"text":" ","type":"text"},{"text":"Require that only a single stack element remains after evaluation. Only to be used with P2SH.","type":"text"}],"title":"cleanStack","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"cleanStack"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/cleanstack"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullFail":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/nullfail","kind":"symbol","abstract":[{"type":"text","text":"BIP141: Signature(s) must be null vector(s) if an OP_CHECKSIG or OP_CHECKMULTISIG is failed (for both pre-segregated witness script and P2WSH. See BIP146). Relay\/mining policy rule 3."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"nullFail","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"title":"nullFail","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkLockTimeVerify":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","abstract":[{"type":"text","text":"BIP65: Evaluate "},{"code":"OP_CHECKLOCKTIMEVERIFY","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/checklocktimeverify","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"checkLockTimeVerify","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"title":"checkLockTimeVerify","type":"topic"},"doc://BitcoinBase/s25ExpressibleByArrayLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableTaprootVersion":{"role":"symbol","abstract":[{"text":"Making unknown Taproot leaf versions non-standard.","type":"text"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradabletaprootversion","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"discourageUpgradableTaprootVersion","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","title":"discourageUpgradableTaprootVersion","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableNoOps":{"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablenoops","title":"discourageUpgradableNoOps","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"discourageUpgradableNoOps","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"abstract":[{"text":"Discourage use of NOPs reserved for upgrades (NOP1-10)","type":"text"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/OptionSet-Implementations":{"type":"topic","kind":"article","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/bitcoinbase\/scriptconfig\/optionset-implementations","title":"OptionSet Implementations"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalIf":{"abstract":[{"text":"BIP141: The argument of OP_IF\/NOTIF in P2WSH must be minimal. Relay\/mining policy rule 2.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/minimalif","title":"minimalIf","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimalIf"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/lowS":{"type":"topic","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"lowS","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"text":"BIP62 rule 5","type":"text"},{"type":"text","text":" "},{"text":"Passing a non-strict-DER signature or one with S > order\/2 to a checksig operation causes script failure.","type":"text"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/lows","title":"lowS"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/taproot":{"abstract":[{"text":"BIP341, BIP342: Taproot\/Tapscript validation.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/taproot","title":"taproot","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"taproot","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witnessCompressedPublicKey":{"type":"topic","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"witnessCompressedPublicKey","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"role":"symbol","abstract":[{"text":"BIP141: Only compressed public keys are accepted in P2WPKH and P2WSH (See BIP143). Relay\/mining policy rule 1.","type":"text"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/witnesscompressedpublickey","title":"witnessCompressedPublicKey"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalData":{"abstract":[{"text":"BIP62 rule 3-4","type":"text"},{"type":"text","text":" "},{"text":"Require minimal encodings for all push operations (","type":"text"},{"type":"codeVoice","code":"OP_0"},{"text":"…","type":"text"},{"type":"codeVoice","code":"OP_16"},{"text":", ","type":"text"},{"type":"codeVoice","code":"OP_1NEGATE"},{"type":"text","text":" where possible, direct  pushes up to 75 bytes, "},{"type":"codeVoice","code":"OP_PUSHDATA"},{"text":" up to 255 bytes, ","type":"text"},{"code":"OP_PUSHDATA2","type":"codeVoice"},{"text":" for anything larger).","type":"text"},{"text":" ","type":"text"},{"text":"Evaluating any other push causes the script to fail (BIP62 rule 3).","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4)."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/minimaldata","title":"minimalData","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"minimalData","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"role":"symbol","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradablePublicKeyType":{"abstract":[{"text":"Making unknown public key versions (in BIP342 scripts) non-standard.","type":"text"}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"discourageUpgradablePublicKeyType","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablepublickeytype","title":"discourageUpgradablePublicKeyType","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","role":"symbol"},"doc://BitcoinBase/SY":{"identifier":"doc:\/\/BitcoinBase\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/Equatable-Implementations":{"abstract":[],"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/equatable-implementations","title":"Equatable Implementations","kind":"article","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","role":"collectionGroup"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/payToScriptHash":{"type":"topic","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/paytoscripthash","title":"payToScriptHash","abstract":[{"text":"BIP16","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"payToScriptHash","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash"}}}