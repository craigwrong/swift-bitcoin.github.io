{"topicSections":[{"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)"],"anchor":"Initializers","generated":true,"title":"Initializers"},{"generated":true,"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue"],"anchor":"Instance-Properties","title":"Instance Properties"},{"title":"Type Properties","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey"],"generated":true,"anchor":"Type-Properties"},{"generated":true,"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations"],"title":"Default Implementations","anchor":"Default-Implementations"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig"},"relationshipsSections":[{"identifiers":["doc:\/\/BitcoinBase\/SQ","doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","doc:\/\/BitcoinBase\/s9OptionSetP","doc:\/\/BitcoinBase\/SY","doc:\/\/BitcoinBase\/s8SendableP","doc:\/\/BitcoinBase\/s10SetAlgebraP"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/bitcoinbase\/scriptconfig"]}],"hierarchy":{"paths":[["doc:\/\/BitcoinBase\/documentation\/BitcoinBase"]]},"metadata":{"externalID":"s:11BitcoinBase12ScriptConfigV","navigatorTitle":[{"kind":"identifier","text":"ScriptConfig"}],"roleHeading":"Structure","remoteSource":{"fileName":"ScriptConfig.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/src\/bitcoin-base\/script\/ScriptConfig.swift#L4"},"role":"symbol","symbolKind":"struct","modules":[{"name":"Bitcoin Base"}],"title":"ScriptConfig","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ScriptConfig","kind":"identifier"}]},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ScriptConfig"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A)."}],"references":{"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/lowS":{"abstract":[{"text":"BIP62 rule 5","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Passing a non-strict-DER signature or one with S > order\/2 to a checksig operation causes script failure."}],"type":"topic","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"lowS"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/lows","title":"lowS"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/taproot":{"title":"taproot","abstract":[{"type":"text","text":"BIP341, BIP342: Taproot\/Tapscript validation."}],"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/taproot","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"taproot"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableWitnessProgram":{"kind":"symbol","title":"discourageUpgradableWitnessProgram","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablewitnessprogram","abstract":[{"text":"Making v2-v16 witness program non-standard.","type":"text"}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"discourageUpgradableWitnessProgram","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/standard":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"standard"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"type":"topic","abstract":[{"type":"text","text":"Standard script verification flags that standard transactions will comply with. However we do not ban\/disconnect nodes that forward txs violating the additional (non-mandatory) rules here, to improve forwards and backwards compatability."}],"kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","title":"standard","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/standard"},"doc://BitcoinBase/SY":{"title":"Swift.RawRepresentable","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/SY"},"doc://BitcoinBase/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkSequenceVerify":{"kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","title":"checkSequenceVerify","abstract":[{"text":"BIP112: Evaluate ","type":"text"},{"code":"OP_CHECKSEQUENCEVERIFY","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/checksequenceverify","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkSequenceVerify"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageOpSuccess":{"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageopsuccess","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"discourageOpSuccess","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"title":"discourageOpSuccess","kind":"symbol","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","abstract":[{"type":"text","text":"Making unknown "},{"code":"OP_SUCCESS","type":"codeVoice"},{"type":"text","text":" non-standard."}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableNoOps":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablenoops","kind":"symbol","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","abstract":[{"type":"text","text":"Discourage use of NOPs reserved for upgrades (NOP1-10)"}],"title":"discourageUpgradableNoOps","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"discourageUpgradableNoOps","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/payToScriptHash":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","url":"\/documentation\/bitcoinbase\/scriptconfig\/paytoscripthash","type":"topic","role":"symbol","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"payToScriptHash"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"title":"payToScriptHash","abstract":[{"type":"text","text":"BIP16"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullDummy":{"kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","role":"symbol","abstract":[{"type":"text","text":"BIP62 rule 7"},{"type":"text","text":" "},{"text":"Verify dummy stack item consumed by ","type":"text"},{"code":"CHECKMULTISIG","type":"codeVoice"},{"text":" is of zero-length.","type":"text"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/nulldummy","title":"nullDummy","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nullDummy"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalData":{"kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","role":"symbol","abstract":[{"type":"text","text":"BIP62 rule 3-4"},{"text":" ","type":"text"},{"text":"Require minimal encodings for all push operations (","type":"text"},{"code":"OP_0","type":"codeVoice"},{"type":"text","text":"…"},{"type":"codeVoice","code":"OP_16"},{"type":"text","text":", "},{"code":"OP_1NEGATE","type":"codeVoice"},{"type":"text","text":" where possible, direct  pushes up to 75 bytes, "},{"type":"codeVoice","code":"OP_PUSHDATA"},{"text":" up to 255 bytes, ","type":"text"},{"type":"codeVoice","code":"OP_PUSHDATA2"},{"text":" for anything larger).","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Evaluating any other push causes the script to fail (BIP62 rule 3)."},{"text":" ","type":"text"},{"type":"text","text":"In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4)."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/minimaldata","title":"minimalData","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"minimalData","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictEncoding":{"abstract":[{"type":"text","text":"Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure."},{"text":" ","type":"text"},{"type":"text","text":"Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure."},{"text":" ","type":"text"},{"text":"Not used or intended as a consensus rule.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"strictEncoding","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictencoding","kind":"symbol","title":"strictEncoding","type":"topic","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/OptionSet-Implementations":{"abstract":[],"type":"topic","kind":"article","role":"collectionGroup","url":"\/documentation\/bitcoinbase\/scriptconfig\/optionset-implementations","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","title":"OptionSet Implementations"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/cleanStack":{"kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","role":"symbol","abstract":[{"text":"BIP62 rule 6","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Require that only a single stack element remains after evaluation. Only to be used with P2SH."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/cleanstack","title":"cleanStack","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"cleanStack","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/rawValue":{"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/rawvalue","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue","title":"rawValue","type":"topic","abstract":[]},"doc://BitcoinBase/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/BitcoinBase\/SQ","type":"unresolvable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/mandatory":{"type":"topic","abstract":[{"text":"Mandatory script verification flags that all new transactions must comply with for them to be valid. Failing one of these tests may trigger a DoS ban. See ","type":"text"},{"code":"CheckInputScripts()","type":"codeVoice"},{"text":" on Bitcoin Core  for details.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Note that this does not affect consensus validity. See "},{"code":"GetBlockScriptFlags()","type":"codeVoice"},{"text":" for that.","type":"text"}],"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/mandatory","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mandatory"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"title":"mandatory"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/pushOnly":{"title":"pushOnly","type":"topic","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"pushOnly"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/pushonly","abstract":[{"type":"text","text":"BIP62 rule 2"},{"type":"text","text":" "},{"type":"text","text":"Using a non-push operator in the scriptSig causes script failure."}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witnessCompressedPublicKey":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/witnesscompressedpublickey","kind":"symbol","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPublicKey","abstract":[{"text":"BIP141: Only compressed public keys are accepted in P2WPKH and P2WSH (See BIP143). Relay\/mining policy rule 1.","type":"text"}],"title":"witnessCompressedPublicKey","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"witnessCompressedPublicKey","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}]},"doc://BitcoinBase/documentation/BitcoinBase":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase","url":"\/documentation\/bitcoinbase","abstract":[{"type":"text","text":"Basic elements of the Bitcoin protocol, namely transactions and scripts."}],"role":"collection","title":"Bitcoin Base","type":"topic","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullFail":{"role":"symbol","type":"topic","abstract":[{"text":"BIP141: Signature(s) must be null vector(s) if an OP_CHECKSIG or OP_CHECKMULTISIG is failed (for both pre-segregated witness script and P2WSH. See BIP146). Relay\/mining policy rule 3.","type":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/nullfail","title":"nullFail","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"nullFail","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/init(rawValue:)":{"kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/init(rawvalue:)","type":"topic","title":"init(rawValue:)","abstract":[]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalIf":{"type":"topic","abstract":[{"text":"BIP141: The argument of OP_IF\/NOTIF in P2WSH must be minimal. Relay\/mining policy rule 2.","type":"text"}],"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/minimalif","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"minimalIf"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"title":"minimalIf"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradablePublicKeyType":{"abstract":[{"type":"text","text":"Making unknown public key versions (in BIP342 scripts) non-standard."}],"type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablepublickeytype","kind":"symbol","title":"discourageUpgradablePublicKeyType","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePublicKeyType","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradablePublicKeyType"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"role":"symbol"},"doc://BitcoinBase/s9OptionSetP":{"identifier":"doc:\/\/BitcoinBase\/s9OptionSetP","title":"Swift.OptionSet","type":"unresolvable"},"doc://BitcoinBase/s10SetAlgebraP":{"identifier":"doc:\/\/BitcoinBase\/s10SetAlgebraP","title":"Swift.SetAlgebra","type":"unresolvable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witness":{"kind":"symbol","abstract":[{"type":"text","text":"BIP141: Verify witness program (all witness versions)."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"witness"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"role":"symbol","type":"topic","url":"\/documentation\/bitcoinbase\/scriptconfig\/witness","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","title":"witness"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/Equatable-Implementations":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","kind":"article","title":"Equatable Implementations","url":"\/documentation\/bitcoinbase\/scriptconfig\/equatable-implementations","role":"collectionGroup","abstract":[],"type":"topic"},"doc://BitcoinBase/s8SendableP":{"identifier":"doc:\/\/BitcoinBase\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/SetAlgebra-Implementations":{"abstract":[],"title":"SetAlgebra Implementations","url":"\/documentation\/bitcoinbase\/scriptconfig\/setalgebra-implementations","role":"collectionGroup","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations","type":"topic","kind":"article"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictDER":{"type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictDER"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","kind":"symbol","abstract":[{"text":"BIP66 (consensus) and BIP62 rule 1 (policy)","type":"text"},{"text":" ","type":"text"},{"text":"Passing a non-strict-DER signature to a checksig operation causes script failure.","type":"text"}],"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictder","title":"strictDER"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/constantScriptCode":{"type":"topic","abstract":[{"text":"Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts","type":"text"}],"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/constantscriptcode","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"constantScriptCode","kind":"identifier"},{"kind":"text","text":": "},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"title":"constantScriptCode"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkLockTimeVerify":{"role":"symbol","title":"checkLockTimeVerify","abstract":[{"text":"BIP65: Evaluate ","type":"text"},{"type":"codeVoice","code":"OP_CHECKLOCKTIMEVERIFY"},{"text":".","type":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"checkLockTimeVerify","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/checklocktimeverify","kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableTaprootVersion":{"type":"topic","abstract":[{"type":"text","text":"Making unknown Taproot leaf versions non-standard."}],"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradabletaprootversion","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"discourageUpgradableTaprootVersion","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"title":"discourageUpgradableTaprootVersion"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"ScriptConfig","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig","kind":"symbol","title":"ScriptConfig","navigatorTitle":[{"text":"ScriptConfig","kind":"identifier"}],"abstract":[{"text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}]}}}