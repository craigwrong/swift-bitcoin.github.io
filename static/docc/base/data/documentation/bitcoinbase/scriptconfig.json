{"primaryContentSections":[{"declarations":[{"platforms":["macOS"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScriptConfig","kind":"identifier"}],"languages":["swift"]}],"kind":"declarations"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/BitcoinBase\/documentation\/BitcoinBase"]]},"variants":[{"paths":["\/documentation\/bitcoinbase\/scriptconfig"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/BitcoinBase\/SQ","doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","doc:\/\/BitcoinBase\/s9OptionSetP","doc:\/\/BitcoinBase\/SY","doc:\/\/BitcoinBase\/s8SendableP","doc:\/\/BitcoinBase\/s10SetAlgebraP"]}],"kind":"symbol","abstract":[{"text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}],"metadata":{"modules":[{"name":"Bitcoin Base"}],"symbolKind":"struct","title":"ScriptConfig","roleHeading":"Structure","remoteSource":{"fileName":"ScriptConfig.swift","url":"https:\/\/github.com\/swift-bitcoin\/swift-bitcoin\/blob\/develop\/src\/bitcoin-base\/script\/ScriptConfig.swift#L4"},"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ScriptConfig"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScriptConfig"}],"externalID":"s:11BitcoinBase12ScriptConfigV"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)"],"generated":true,"anchor":"Initializers"},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue"]},{"title":"Type Properties","generated":true,"anchor":"Type-Properties","identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePubkeyType","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPubkey"]},{"anchor":"Default-Implementations","title":"Default Implementations","generated":true,"identifiers":["doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations"]}],"references":{"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig":{"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"text":"ScriptConfig","kind":"identifier"}],"title":"ScriptConfig","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig","url":"\/documentation\/bitcoinbase\/scriptconfig","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScriptConfig"}],"kind":"symbol","abstract":[{"text":"Script verification flags represented by config options. All flags are intended to be soft forks: the set of acceptable scripts under flags (A | B) is a subset of the acceptable scripts under flag (A).","type":"text"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableNoOps":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablenoops","kind":"symbol","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableNoOps","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"discourageUpgradableNoOps","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"discourageUpgradableNoOps","abstract":[{"text":"Discourage use of NOPs reserved for upgrades (NOP1-10)","type":"text"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkSequenceVerify":{"type":"topic","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/checksequenceverify","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkSequenceVerify","kind":"symbol","abstract":[{"text":"BIP112: Evaluate ","type":"text"},{"type":"codeVoice","code":"OP_CHECKSEQUENCEVERIFY"},{"text":".","type":"text"}],"title":"checkSequenceVerify","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkSequenceVerify"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/pushOnly":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/pushonly","kind":"symbol","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/pushOnly","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"pushOnly","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"pushOnly","abstract":[{"text":"BIP62 rule 2","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Using a non-push operator in the scriptSig causes script failure."}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase":{"url":"\/documentation\/bitcoinbase","type":"topic","title":"Bitcoin Base","role":"collection","kind":"symbol","abstract":[{"text":"Basic elements of the Bitcoin protocol, namely transactions and scripts.","type":"text"}],"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/init(rawValue:)":{"type":"topic","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/init(rawvalue:)","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/init(rawValue:)","kind":"symbol","abstract":[],"title":"init(rawValue:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/cleanStack":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/cleanstack","kind":"symbol","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/cleanStack","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"cleanStack","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"title":"cleanStack","abstract":[{"text":"BIP62 rule 6","type":"text"},{"text":" ","type":"text"},{"text":"Require that only a single stack element remains after evaluation. Only to be used with P2SH.","type":"text"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalData":{"title":"minimalData","abstract":[{"text":"BIP62 rule 3-4","type":"text"},{"type":"text","text":" "},{"text":"Require minimal encodings for all push operations (","type":"text"},{"type":"codeVoice","code":"OP_0"},{"text":"â€¦","type":"text"},{"code":"OP_16","type":"codeVoice"},{"type":"text","text":", "},{"code":"OP_1NEGATE","type":"codeVoice"},{"type":"text","text":" where possible, direct  pushes up to 75 bytes, "},{"code":"OP_PUSHDATA","type":"codeVoice"},{"text":" up to 255 bytes, ","type":"text"},{"type":"codeVoice","code":"OP_PUSHDATA2"},{"type":"text","text":" for anything larger)."},{"type":"text","text":" "},{"type":"text","text":"Evaluating any other push causes the script to fail (BIP62 rule 3)."},{"text":" ","type":"text"},{"text":"In addition, whenever a stack element is interpreted as a number, it must be of minimal length (BIP62 rule 4).","type":"text"}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minimalData","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/minimaldata","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalData","kind":"symbol","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/minimalIf":{"type":"topic","role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/minimalif","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/minimalIf","kind":"symbol","abstract":[{"text":"BIP141: The argument of OP_IF\/NOTIF in P2WSH must be minimal. Relay\/mining policy rule 2.","type":"text"}],"title":"minimalIf","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"minimalIf","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/Equatable-Implementations":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/Equatable-Implementations","abstract":[],"url":"\/documentation\/bitcoinbase\/scriptconfig\/equatable-implementations","kind":"article","role":"collectionGroup","title":"Equatable Implementations","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/rawValue":{"title":"rawValue","abstract":[],"role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/rawValue","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"rawValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/rawvalue","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/constantScriptCode":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/constantScriptCode","abstract":[{"text":"Making OP_CODESEPARATOR and FindAndDelete fail any non-segwit scripts","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"constantScriptCode","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/constantscriptcode","kind":"symbol","role":"symbol","title":"constantScriptCode","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageOpSuccess":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageOpSuccess","abstract":[{"type":"text","text":"Making unknown "},{"code":"OP_SUCCESS","type":"codeVoice"},{"text":" non-standard.","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"discourageOpSuccess","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageopsuccess","role":"symbol","title":"discourageOpSuccess","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableWitnessProgram":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradableWitnessProgram"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"type":"topic","title":"discourageUpgradableWitnessProgram","kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablewitnessprogram","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableWitnessProgram","abstract":[{"type":"text","text":"Making v2-v16 witness program non-standard."}],"role":"symbol"},"doc://BitcoinBase/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/BitcoinBase\/SQ"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradableTaprootVersion":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradableTaprootVersion"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"type":"topic","title":"discourageUpgradableTaprootVersion","kind":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradabletaprootversion","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradableTaprootVersion","abstract":[{"type":"text","text":"Making unknown Taproot leaf versions non-standard."}],"role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witnessCompressedPubkey":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witnessCompressedPubkey","abstract":[{"type":"text","text":"BIP141: Only compressed public keys are accepted in P2WPKH and P2WSH (See BIP143). Relay\/mining policy rule 1."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"witnessCompressedPubkey","kind":"identifier"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/witnesscompressedpubkey","kind":"symbol","role":"symbol","title":"witnessCompressedPubkey","type":"topic"},"doc://BitcoinBase/s25ExpressibleByArrayLiteralP":{"title":"Swift.ExpressibleByArrayLiteral","identifier":"doc:\/\/BitcoinBase\/s25ExpressibleByArrayLiteralP","type":"unresolvable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullDummy":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullDummy","abstract":[{"type":"text","text":"BIP62 rule 7"},{"text":" ","type":"text"},{"text":"Verify dummy stack item consumed by ","type":"text"},{"code":"CHECKMULTISIG","type":"codeVoice"},{"type":"text","text":" is of zero-length."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nullDummy"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/nulldummy","kind":"symbol","role":"symbol","title":"nullDummy","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/lowS":{"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/lows","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/lowS","title":"lowS","abstract":[{"text":"BIP62 rule 5","type":"text"},{"type":"text","text":" "},{"type":"text","text":"Passing a non-strict-DER signature or one with S > order\/2 to a checksig operation causes script failure."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lowS"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/checkLockTimeVerify":{"title":"checkLockTimeVerify","abstract":[{"type":"text","text":"BIP65: Evaluate "},{"code":"OP_CHECKLOCKTIMEVERIFY","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkLockTimeVerify"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/checklocktimeverify","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/checkLockTimeVerify","kind":"symbol","role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/witness":{"kind":"symbol","title":"witness","abstract":[{"type":"text","text":"BIP141: Verify witness program (all witness versions)."}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/witness","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/witness","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"witness"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"role":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/payToScriptHash":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/payToScriptHash","abstract":[{"text":"BIP16","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"payToScriptHash","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/paytoscripthash","kind":"symbol","role":"symbol","title":"payToScriptHash","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/OptionSet-Implementations":{"role":"collectionGroup","url":"\/documentation\/bitcoinbase\/scriptconfig\/optionset-implementations","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/OptionSet-Implementations","kind":"article","abstract":[],"title":"OptionSet Implementations","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/discourageUpgradablePubkeyType":{"role":"symbol","url":"\/documentation\/bitcoinbase\/scriptconfig\/discourageupgradablepubkeytype","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/discourageUpgradablePubkeyType","title":"discourageUpgradablePubkeyType","abstract":[{"type":"text","text":"Making unknown public key versions (in BIP342 scripts) non-standard."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"discourageUpgradablePubkeyType"},{"text":": ","kind":"text"},{"text":"ScriptConfig","kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV"}],"kind":"symbol"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictEncoding":{"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strictEncoding","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"kind":"symbol","abstract":[{"type":"text","text":"Passing a non-strict-DER signature or one with undefined hashtype to a checksig operation causes script failure."},{"type":"text","text":" "},{"text":"Evaluating a pubkey that is not (0x04 + 64 bytes) or (0x02 or 0x03 + 32 bytes) by checksig causes script failure.","type":"text"},{"type":"text","text":" "},{"text":"Not used or intended as a consensus rule.","type":"text"}],"role":"symbol","type":"topic","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictEncoding","url":"\/documentation\/bitcoinbase\/scriptconfig\/strictencoding","title":"strictEncoding"},"doc://BitcoinBase/SY":{"identifier":"doc:\/\/BitcoinBase\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://BitcoinBase/s9OptionSetP":{"identifier":"doc:\/\/BitcoinBase\/s9OptionSetP","title":"Swift.OptionSet","type":"unresolvable"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/mandatory":{"url":"\/documentation\/bitcoinbase\/scriptconfig\/mandatory","type":"topic","role":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/mandatory","title":"mandatory","abstract":[{"type":"text","text":"Mandatory script verification flags that all new transactions must comply with for them to be valid. Failing one of these tests may trigger a DoS ban. See "},{"code":"CheckInputScripts()","type":"codeVoice"},{"type":"text","text":" on Bitcoin Core  for details."},{"type":"text","text":" "},{"type":"text","text":"Note that this does not affect consensus validity. See "},{"type":"codeVoice","code":"GetBlockScriptFlags()"},{"type":"text","text":" for that."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"mandatory","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}]},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/strictDER":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/strictDER","abstract":[{"text":"BIP66 (consensus) and BIP62 rule 1 (policy)","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Passing a non-strict-DER signature to a checksig operation causes script failure."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictDER"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/strictder","kind":"symbol","role":"symbol","title":"strictDER","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/taproot":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/taproot","role":"symbol","title":"taproot","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"taproot","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/taproot","abstract":[{"text":"BIP341, BIP342: Taproot\/Tapscript validation.","type":"text"}],"kind":"symbol","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/standard":{"identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/standard","abstract":[{"text":"Standard script verification flags that standard transactions will comply with. However we do not ban\/disconnect nodes that forward txs violating the additional (non-mandatory) rules here, to improve forwards and backwards compatability.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"standard"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","text":"ScriptConfig","kind":"typeIdentifier"}],"url":"\/documentation\/bitcoinbase\/scriptconfig\/standard","kind":"symbol","role":"symbol","title":"standard","type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/nullFail":{"title":"nullFail","url":"\/documentation\/bitcoinbase\/scriptconfig\/nullfail","kind":"symbol","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/nullFail","abstract":[{"type":"text","text":"BIP141: Signature(s) must be null vector(s) if an OP_CHECKSIG or OP_CHECKMULTISIG is failed (for both pre-segregated witness script and P2WSH. See BIP146). Relay\/mining policy rule 3."}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"text":"nullFail","kind":"identifier"},{"kind":"text","text":": "},{"preciseIdentifier":"s:11BitcoinBase12ScriptConfigV","kind":"typeIdentifier","text":"ScriptConfig"}],"type":"topic"},"doc://BitcoinBase/documentation/BitcoinBase/ScriptConfig/SetAlgebra-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/BitcoinBase\/documentation\/BitcoinBase\/ScriptConfig\/SetAlgebra-Implementations","abstract":[],"kind":"article","url":"\/documentation\/bitcoinbase\/scriptconfig\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"topic"},"doc://BitcoinBase/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s8SendableP","title":"Swift.Sendable"},"doc://BitcoinBase/s10SetAlgebraP":{"type":"unresolvable","identifier":"doc:\/\/BitcoinBase\/s10SetAlgebraP","title":"Swift.SetAlgebra"}}}